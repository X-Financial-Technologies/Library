openapi: 3.0.1
info:
  title: Online Payments API
  description: Online Payments is the primary payment solution for card not present transactions. Manage the entire payments lifecycle for multiple methods of payments, including card payments, alternative methods of payment, and wallet payments.
  version: 2.6.1
  contact:
    name: Online Payments API Support
    url: https://developer.payments.jpmorgan.com/contact/support
servers:
  - url: https://api-ms.payments.jpmorgan.com/api/v2
    description: Production Environment
  - url: https://api-mock.payments.jpmorgan.com/api/v2
    description: JPM-PROD Merchant Payments API sandbox
tags:
  - name: Transactions
    description: Initiating and processing a payment
  - name: Health Check
    description: Check if a particular service is available
  - name: Fraud
    description: Fraud check for a payment
paths:
  /healthcheck/payments:
    get:
      summary: Health check for payments
      operationId: V2PaymentHealthGet
      tags:
        - Health Check
      description: Health check for payments
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckResource'
              examples:
                Approved Auth Basic:
                  value:
                    status: PASS
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckResource'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckResource'
              examples:
                Approved Auth CIT Onetime Stored:
                  value:
                    status: FAIL
  /healthcheck/refunds:
    get:
      summary: Health check for refunds
      operationId: V2RefundHealthGet
      tags:
        - Health Check
      description: Health check for refunds
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckResource'
              examples:
                Approved Auth Basic:
                  value:
                    status: PASS
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckResource'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckResource'
              examples:
                Approved Auth CIT Onetime Stored:
                  value:
                    status: FAIL
  /healthcheck/verifications:
    get:
      summary: Health check for verifications
      operationId: V2VerificationHealthGet
      tags:
        - Health Check
      description: Health check for verifications
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckResource'
              examples:
                Approved Auth Basic:
                  value:
                    status: PASS
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckResource'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthCheckResource'
              examples:
                Approved Auth CIT Onetime Stored:
                  value:
                    status: FAIL
  /payments:
    post:
      summary: Create a payment
      operationId: V2PaymentPost
      tags:
        - Transactions
      description: Create a payment request with a specified payment instrument. Authorization and Sale (Authorization and capture).
      parameters:
        - name: request-id
          in: header
          required: true
          schema:
            type: string
            example: 10cc0270-7bed-11e9-a188-1763956dd7f6
            maxLength: 40
          description: Merchant identifier for the request. The value must be unique.
          examples:
            Approved Auth Basic:
              value: 10cc0270-7bed-11e9-a188-1763956dd7f6
            Approved Auth CIT Onetime Stored:
              value: 11cc0270-7bed-11e9-a188-1763956dd7f6
            Approved Auth MIT Subsequent Stored:
              value: 12cc0270-7bed-11e9-a188-1763956dd7f6
            Healthcare VI:
              value: 19cc0270-7bed-11e9-a188-1763956dd7f6
            Healthcare MC:
              value: 20cc0270-7bed-11e9-a188-1763956dd7f6
            Approved Auth With Authentication:
              value: 13cc0270-7bed-11e9-a188-1763956dd7f6
            Pinless Debit:
              value: 14cc0270-7bed-11e9-a188-1763956dd7f6
            ACH Auth And Capture:
              value: 15cc0270-7bed-11e9-a188-1763956dd7f6
            GooglePay Auth And Capture:
              value: 16cc0270-7bed-11e9-a188-1763956dd7f6
            ApplePay Auth And Capture:
              value: 17cc0270-7bed-11e9-a188-1763956dd7f6
            Approve With Page encryption:
              value: 18cc0270-7bed-11e9-a188-1763956dd7f6
        - name: merchant-id
          in: header
          required: true
          schema:
            type: string
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: Identifier for the merchant account
          examples:
            Approved Auth Basic:
              value: '998482157630'
            Approved Auth CIT Onetime Stored:
              value: '998482157631'
            Approved Auth MIT Subsequent Stored:
              value: '998482157632'
            Healthcare VI:
              value: '998482157639'
            Healthcare MC:
              value: '998482157640'
            Approved Auth With Authentication:
              value: '998482157633'
            Pinless Debit:
              value: '998482157634'
            ACH Auth And Capture:
              value: '998482157635'
            GooglePay Auth And Capture:
              value: '998482157636'
            ApplePay Auth And Capture:
              value: '998482157637'
            Approve With Page encryption:
              value: '998482157638'
        - name: minorVersion
          in: header
          schema:
            type: string
            example: '1'
          description: Identifier for the minor release version
      requestBody:
        description: Payment request information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payment'
            examples:
              Approved Auth Basic:
                value:
                  captureMethod: NOW
                  amount: 1234
                  currency: USD
                  merchant:
                    merchantSoftware:
                      companyName: Payment Company
                      productName: Application Name
                      version: '1.235'
                    merchantCategoryCode: '4899'
                  paymentMethodType:
                    card:
                      accountNumber: '4012000033330026'
                      expiry:
                        month: 5
                        year: 2027
                      isBillPayment: true
                  initiatorType: CARDHOLDER
                  accountOnFile: NOT_STORED
                  isAmountFinal: true
              Approved Auth CIT Onetime Stored:
                value:
                  captureMethod: NOW
                  amount: 10000
                  currency: USD
                  merchant:
                    merchantSoftware:
                      companyName: Payment Company
                      productName: Application Name
                    merchantCategoryCode: '4899'
                  paymentMethodType:
                    card:
                      accountNumber: '4012000033330026'
                      expiry:
                        month: 10
                        year: 2040
                  initiatorType: CARDHOLDER
                  accountOnFile: TO_BE_STORED
                  originalTransactionId: '16444'
                  accountHolder:
                    referenceId: '1245'
                    firstName: John
                    lastName: Doe
                    email: john.doe@gmail.com
                    IPAddress: 104.18.127.1
                    billingAddress:
                      line1: 123 main street
                      line2: Apartment 2
                      city: Tampa
                      state: FL
                      postalCode: '33785'
                      countryCode: USA
                  shipTo:
                    shippingAddress:
                      line1: 123 main street
                      line2: Apartment 2
                      city: Tampa
                      state: FL
                      postalCode: '33785'
              Approved Auth MIT Subsequent Stored:
                value:
                  captureMethod: NOW
                  amount: 10000
                  currency: USD
                  merchant:
                    merchantSoftware:
                      companyName: Payment Company
                      productName: Application Name
                  paymentMethodType:
                    card:
                      accountNumber: '4012000033330026'
                      expiry:
                        month: 4
                        year: 2025
                      cvv: '100'
                  initiatorType: MERCHANT
                  accountOnFile: STORED
                  originalTransactionId: '16'
                  isAmountFinal: true
                  recurring:
                    recurringSequence: FIRST
                    agreementId: '1235'
                    paymentAgreementExpiryDate: '2040-10-30'
                  accountHolder:
                    referenceId: '1245'
                    consumerIdCreationDate: '2021-09-01'
                    firstName: John
                    lastName: Doe
                    email: john.doe@gmail.com
                    IPAddress: 104.18.127.1
                    billingAddress:
                      line1: 123 main street
                      line2: Apartment 3b
                      city: Tampa
                      state: FL
                      postalCode: '33626'
                  shipTo:
                    shippingDescription: Personal Item shipping to my home
                    shippingAddress:
                      line1: 123 main street
                      line2: Apartment 3b
                      city: Tampa
                      state: FL
                      postalCode: '33626'
                    fullName: John Doe
                    email: john.doe@gmail.com
              Healthcare VI:
                value:
                  isCapture: true
                  captureMethod: NOW
                  amount: 12000
                  currency: USD
                  merchant:
                    merchantSoftware:
                      companyName: Payment Company
                      productName: Application Name
                      version: '1.235'
                  paymentMethodType:
                    card:
                      accountNumber: '4012000033330026'
                      expiry:
                        month: 5
                        year: 2024
                      cvv: '100'
                  accountOnFile: NOT_STORED
                  isAmountFinal: true
                  retailAddenda:
                    healthcareData:
                      totalHealthcareAmount: 12000
                      totalVisionAmount: 1000
                      totalClinicAmount: 1000
                      totalDentalAmount: 5000
                      totalPrescriptionAmount: 5000
                      isIIAS: true
              Healthcare MC:
                value:
                  isCapture: true
                  captureMethod: NOW
                  amount: 12000
                  currency: USD
                  merchant:
                    merchantSoftware:
                      companyName: Payment Company
                      productName: Application Name
                      version: '1.235'
                  paymentMethodType:
                    card:
                      accountNumber: '5111005111051128'
                      expiry:
                        month: 5
                        year: 2024
                      cvv: '100'
                  accountOnFile: NOT_STORED
                  isAmountFinal: true
                  retailAddenda:
                    healthcareData:
                      totalHealthcareAmount: 12000
                      totalVisionAmount: 1000
                      totalClinicAmount: 1000
                      totalDentalAmount: 5000
                      totalPrescriptionAmount: 5000
                      isIIAS: true
              Approved Auth With Authentication:
                value:
                  captureMethod: MANUAL
                  amount: 1234
                  currency: EUR
                  initiatorType: CARDHOLDER
                  merchant:
                    merchantSoftware:
                      companyName: Payment Company
                      productName: Application Name
                      version: '1.235'
                  paymentMethodType:
                    card:
                      accountNumberType: PAN
                      accountNumber: '4012000033330026'
                      expiry:
                        month: 1
                        year: 2037
                      paymentAuthenticationRequest:
                        accountType: CREDIT
                        authenticationReturnUrl: https://merchantreturnurl.com
                        authenticationSupportUrl: https://merchantsupporturl.com
                        threeDSAccountAdditionalInfo:
                          consumerAccountCreateLength: NO_ACCOUNT
                          consumerAccountCreateTimestamp: '2023-08-10'
                          consumerAccountUpdateLength: CURRENT_TXN
                          consumerAccountUpdateTimestamp: '2023-06-05'
                          consumerAccountPasswordUpdateTimestamp: '2023-06-05'
                          consumerAccountPasswordChangeLength: NO_CHANGE
                          consumerAccountShippingAddressLength: CURRENT_TXN_CHANGE
                          consumerAccountFirstShippingDate: '2023-06-05'
                          twentyFourHoursTransactionCount: 1
                          previousYearTransactionCount: 2
                          consumerAccount24HoursAddCardCount: 3
                          sixMonthTransactionCount: 2
                          consumerAccountSuspiciousActivityIndicator: false
                          consumerAccountShipNameIdenticalIndicator: true
                          consumerPaymentAccountLength: NO_ACCOUNT
                          consumerPaymentAccountEnrollmentDate: '2023-06-05'
                          consumerAccountAddressIdenticalIndicator: true
                        threeDSRequestorPriorAuthenticationInfo:
                          authenticationMethod: FRICTIONLESS
                          authenticationTimestamp: '2023-08-21T15:12:12Z'
                        threeDSPurchaseRisk:
                          shipmentType: DIGITAL_GOODS
                          deliveryTimeframe: ELECTRONIC
                          orderEmailAddress: john.doe@gmail.com
                          productRepurchaseIndicator: true
                          productAvailabilityCode: AVAILABLE
                          preOrderDate: '2023-06-05'
                          purchasedPrepaidCardTotalAmount: 10
                          purchasedPrepaidCardCount: 2
                          prepaidCardCurrency: USD
                        threeDSPurchaseInfo:
                          purchaseDate: '2023-08-25T15:12:12Z'
                          recurringAuthorizationDayCount: 2
                          threeDomainSecureTransactionType: GOODS_SERVICES
                        threeDSRequestorAuthenticationInfo:
                          threeDSAuthenticationTimestamp: '2023-08-25T15:12:12Z'
                          threeDSAuthenticationData: testdata
                          threeDSChallengeType: NO_CHALLENGE
                          requestorAuthenticationMethod: REQUESTOR_CRED
                          authenticationPurpose: PAYMENT_TRANSACTION
                  accountHolder:
                    referenceId: '1245'
                    consumerIdCreationDate: '2021-09-01'
                    firstName: John
                    lastName: Doe
                    email: John.Doe@gmail.com
                    phone:
                      countryCode: 1
                      phoneNumber: '8131112222'
                    billingAddress:
                      line1: 123 main street
                      line2: Apartment 2
                      city: SALEM
                      state: NH
                      postalCode: '03105'
                      countryCode: USA
                  browserInfo:
                    browserAcceptHeader: application/json
                    deviceIPAddress: 192.168.192.12
                    browserLanguage: en
                    browserColorDepth: '8'
                    browserScreenHeight: '1'
                    browserScreenWidth: '1'
                    browserUserAgent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0
                    challengeWindowSize: FULL_SCREEN
                    javaEnabled: false
                    javaScriptEnabled: true
              Pinless Debit:
                value:
                  captureMethod: MANUAL
                  amount: 10000
                  currency: USD
                  initiatorType: CARDHOLDER
                  statementDescriptor: star-merchant
                  merchant:
                    merchantSoftware:
                      companyName: Payment Company
                      productName: Application Name
                      version: '1.235'
                  paymentMethodType:
                    card:
                      accountNumberType: PAN
                      accountNumber: '4935550000000006'
                      expiry:
                        month: 12
                        year: 2027
                      cvv: '411'
                      isBillPayment: true
                      merchantPreferredRouting: PINLESS
                      merchantSalesChannelName: MAIL_ORDER_TELEPHONE_ORDER
                      preferredPaymentNetworkNameList:
                        - STAR_PINLESS
                  accountHolder:
                    referenceId: ABC123GHI9807654
              ACH Auth And Capture:
                value:
                  captureMethod: NOW
                  amount: 10000
                  currency: USD
                  statementDescriptor: Statement Descriptor
                  merchant:
                    merchantSoftware:
                      companyName: Payment Company
                      productName: Application Name
                      version: '1.235'
                    softMerchant:
                      merchantPurchaseDescription: Merchant Purchase Description
                  paymentMethodType:
                    ach:
                      accountNumber: '1111111111111111'
                      financialInstitutionRoutingNumber: '123456789'
                      accountType: CHECKING
                  accountHolder:
                    firstName: JANE
                    lastName: SMITH
              GooglePay Auth And Capture:
                value:
                  captureMethod: NOW
                  amount: 10000
                  currency: USD
                  statementDescriptor: Statement Descriptor
                  merchant:
                    merchantSoftware:
                      companyName: Payment Company
                      productName: Application Name
                      version: '1.235'
                    softMerchant:
                      merchantPurchaseDescription: Merchant Purchase Description
                  paymentMethodType:
                    googlepay:
                      latLong: 1,1
                      encryptedPaymentBundle:
                        encryptedPayload: '{"encryptedMessage":"6gBXPtw3Oy7wBRv72MXlmjIHFwLC2FdafLaeekiySZljbnudn/6xJLJulh+Gkk6WegNYaB0Iqti8x4/nX5344SyT6UfWrd1tU8jIwjAP5e+La6LWkD296DZ1pIsKDuh0jRbNAp6PaqpByjsgjDFnNBaFdEcv9InH73OPPQU6AxGMAspoZ2du3LOtu4y1WsP5BqZsA24TPp/+lGauK1r+61AuTh88PbT6l6YKCLQGtNN0Ug2UzPodsKbRM8DiTtUW3TaIpQjHd7or5p3EAhLi8TZETZDC6J+lgeI4dQRlsvxOPdOFPf+fK7IdCyGQpLqjf9jBf69QPkVh5+6XXEJfVjjUY4TX2KVU2+42a5sLjQy9rzU1oXUa+IAi6pTziBi4RdIlFFRGFOKlLNRIfZw8+mulejDxHt93r1GPTooBjeLrXD6GW8gN2n4IXgnEZAyu7w\u003d\u003d","ephemeralPublicKey":"BCN6XUyxRN252w17DvzQMH0rWzwt18gAqJE7+1byl7Tz3rpzdPOVfJWRU3sKgJNAXicMcvcV4g67YCJEng52DuY\u003d","tag":"NnB9WQib+A1lakfPJMcQzBbh2+z5kL/UBCKxevQYTjs\u003d"}'
                        encryptedPaymentHeader:
                          ephemeralPublicKey: BCN6XUyxRN252w17DvzQMH0rWzwt18gAqJE7+1byl7Tz3rpzdPOVfJWRU3sKgJNAXicMcvcV4g67YCJEng52DuY\u003d
                        signature: MEYCIQDu7OB2NaHmlSCk2nqYWY6hoiCvmquK82g763VkfaybrAIhANgJSN4MMtfbMMvZKKVGzuPCCN4zVXk6ejioe87+oWaR
                        protocolVersion: ECv1
              ApplePay Auth And Capture:
                value:
                  captureMethod: NOW
                  amount: 10000
                  currency: USD
                  statementDescriptor: Statement Descriptor
                  merchant:
                    merchantSoftware:
                      companyName: Payment Company
                      productName: Application Name
                      version: '1.235'
                    softMerchant:
                      merchantPurchaseDescription: Merchant Purchase Description
                  paymentMethodType:
                    applepay:
                      latLong: 1,1
                      encryptedPaymentBundle:
                        encryptedPayload: MWRE1bbBoR9a6vXaoLXEkNCKskqNgzPaNlfB00fWOqs+LS8BsJhyvod0koenorWEQCRv41oViq70dvx7ilArOhvlCTRR1RdQyIlksZKuRF0IzyCqdA7bXALnBq/8SQQFBKM+TEmP9UEwD21l5RzKZcZMw3xidKoRjyVZiyauG4Oaea91dycFZ4EAg2st//rEj6fN+do4BAhl+Wqcg7BkiWIe30Jze2jJKrRCJxC5prRQ6Gh8C9rqeoVVCeqxIZf8p/WTKsVr1qWZ28/EviP6+VBwR7OcZyAp4er8jfYf3oQcuN/N8119d2JSwzAmGyXrmw==
                        encryptedPaymentHeader:
                          ephemeralPublicKey: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExuTcV20bPh6FjIig0rwvPfyAWoYVuu+GL3E9KyFFVBQe0FoXN8gH8r/ae57prtjA0SIFXE8gY8pzsSLgPs8A9w==
                          publicKeyHash: 7LPgkHSCBXf/xq4zv59spY9j35fqgkfz7AcUYsASyS4=
                          walletTransactionId: 27ed51c15512070be3058fb6070c2e63ddd69ca2e75b3187e2af6faf92ba2901
                          walletApplicationData: 27ed51c15512070be3058fb6070c2e63ddd69ca2e75b3187e2af6faf92ba2901
                        signature: MIAGCSqGSIb3DQEHAqCAMIACAQExDTALBglghkgBZQMEAgEwgAYJKoZIhvcNAQcBAACggDCCAWIwggEIoAMCAQICBgFdZTj7ATAKBggqhkjOPQQDAzA4MSEwHwYDVQQDDBhQYXltZW50ZWNoIE1vYmlsZSBTREsgQ0ExEzARBgNVBAoMClBheW1lbnRlY2gwHhcNMTcwNzIxMTI1NjU5WhcNMzQwNzIxMTI1NjU5WjA4MSEwHwYDVQQDDBhQYXltZW50ZWNoIE1vYmlsZSBTREsgQ0ExEzARBgNVBAoMClBheW1lbnRlY2gwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARCrlzB/UN22ZXpHk7iJqI8T7h0J8QOIyCohcBd8Dh+p0GPeGrDpiyy8LNyQ/bb9jNj+6aVJfeta9eWsOPBp69lMAoGCCqGSM49BAMDA0gAMEUCIQCL3CzFvN8IHbx9DIYtWSWvdwleW2OkbuRimP9LzW9ReAIgTuGzzqlu2EfBpSesfNt78fgAE04OYKHGBq4/Larj540AADGCAUIwggE+AgEBMEIwODEhMB8GA1UEAwwYUGF5bWVudGVjaCBNb2JpbGUgU0RLIENBMRMwEQYDVQQKDApQYXltZW50ZWNoAgYBXWU4+wEwCwYJYIZIAWUDBAIBoIGTMBgGCSqGSIb3DQEJAzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8XDTI0MDMxOTE1MjgwN1owKAYJKoZIhvcNAQk0MRswGTALBglghkgBZQMEAgGhCgYIKoZIzj0EAwIwLwYJKoZIhvcNAQkEMSIEILIY0263HyS7qPTL7X+hEaFAiE4ypmDpvmvO3DCRKqOOMAoGCCqGSM49BAMCBEYwRAIgFPRiS/H7PHJLT8kdfNUGnUL5YFSmj9MlTwmwV+X5t+ECIDBVTShzAoUaN5O3YBdNxXrQkFjhKx7qm5FXYsfZZ5xAAAAAAAAA
                        protocolVersion: EC_v1
              Approve With Page encryption:
                value:
                  captureMethod: NOW
                  amount: 1234
                  currency: USD
                  merchant:
                    merchantSoftware:
                      companyName: Payment Company
                      productName: Application Name
                      version: '1.235'
                    merchantCategoryCode: '4899'
                  paymentMethodType:
                    card:
                      accountNumberType: SAFETECH_PAGE_ENCRYPTION
                      accountNumber: 401200biVPmDPKh0026
                      cvv: '517'
                      encryptionIntegrityCheck: c8a96cd789c86fcd
                      expiry:
                        month: 5
                        year: 2040
                      isBillPayment: true
                  initiatorType: CARDHOLDER
                  accountOnFile: NOT_STORED
                  isAmountFinal: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentResponse'
              examples:
                Approved Auth Basic:
                  value:
                    transactionId: cdf62f90-6440-496f-817c-c05dd3b7b01a
                    requestId: 10cc0270-7bed-11e9-a188-1763956dd7f6
                    transactionState: CLOSED
                    responseStatus: SUCCESS
                    responseCode: APPROVED
                    responseMessage: Transaction approved by Issuer
                    paymentMethodType:
                      card:
                        expiry:
                          month: 5
                          year: 2027
                        cardType: VI
                        cardTypeName: VISA
                        isBillPayment: true
                        maskedAccountNumber: 411234XXXXXX4113
                        cardTypeIndicators:
                          issuanceCountryCode: USA
                          isDurbinRegulated: false
                          cardProductTypes:
                            - PINLESS_DEBIT
                        networkResponse:
                          addressVerificationResult: NOT_REQUESTED
                          addressVerificationResultCode: ''
                          cardVerificationResultCode: ''
                    captureMethod: NOW
                    isCapture: true
                    initiatorType: CARDHOLDER
                    accountOnFile: NOT_STORED
                    transactionDate: '2022-05-04T16:04:27.027Z'
                    approvalCode: tst269
                    hostMessage: Approved
                    amount: 1234
                    currency: USD
                    remainingRefundableAmount: 1234
                    remainingAuthAmount: 1234
                    hostReferenceId: NjKmDGcGYAJ6wsedRnMCj4
                    merchant:
                      merchantId: '998482157630'
                      merchantSoftware:
                        companyName: Payment Company
                        productName: Application Name
                        version: '1.235'
                      merchantCategoryCode: '4899'
                Approved Auth CIT Onetime Stored:
                  value:
                    transactionId: c9d21e9e-9263-4c6e-a6b7-ef60cbceeb49
                    requestId: 11cc0270-7bed-11e9-a188-1763956dd7f6
                    transactionState: AUTHORIZED
                    responseStatus: SUCCESS
                    responseCode: APPROVED
                    responseMessage: Transaction approved by Issuer
                    paymentMethodType:
                      card:
                        expiry:
                          month: 10
                          year: 2040
                        cardType: VI
                        cardTypeName: VISA
                        maskedAccountNumber: 401200XXXXXX0026
                        cardTypeIndicators:
                          issuanceCountryCode: USA
                          isDurbinRegulated: false
                          cardProductTypes:
                            - PINLESS_DEBIT
                        networkResponse:
                          addressVerificationResult: NOT_REQUESTED
                          addressVerificationResultCode: ''
                          cardVerificationResultCode: M
                          networkTransactionId: '012125692162451'
                    isCapture: true
                    captureMethod: NOW
                    initiatorType: CARDHOLDER
                    accountOnFile: TO_BE_STORED
                    transactionDate: '2022-05-04T20:04:25.025Z'
                    approvalCode: tst904
                    hostMessage: Approved
                    amount: 10000
                    currency: USD
                    remainingRefundableAmount: 1500
                    hostReferenceId: sGD8MSXuJan0ytfXIJAP57
                    merchant:
                      merchantId: '998482157631'
                      merchantSoftware:
                        companyName: Payment Company
                        productName: Application Name
                      merchantCategoryCode: '4899'
                    accountHolder:
                      referenceId: '1245'
                      IPAddress: 104.18.127.1
                Approved Auth MIT Subsequent Stored:
                  value:
                    transactionId: d461bd0c-2f6d-4b85-9ce7-552651d0edea
                    requestId: 12cc0270-7bed-11e9-a188-1763956dd7f6
                    transactionState: AUTHORIZED
                    responseStatus: SUCCESS
                    responseCode: APPROVED
                    responseMessage: Transaction approved by Issuer
                    paymentMethodType:
                      card:
                        expiry:
                          month: 4
                          year: 2025
                        cardType: VI
                        cardTypeName: VISA
                        maskedAccountNumber: 411234XXXXXX4113
                        cardTypeIndicators:
                          issuanceCountryCode: USA
                          isDurbinRegulated: false
                          cardProductTypes:
                            - PINLESS_DEBIT
                        networkResponse:
                          addressVerificationResult: NOT_REQUESTED
                          addressVerificationResultCode: ''
                          cardVerificationResultCode: M
                    initiatorType: MERCHANT
                    accountOnFile: STORED
                    transactionDate: '2022-05-04T20:04:25.025Z'
                    approvalCode: tst982
                    hostMessage: Approved
                    amount: 10000
                    currency: USD
                    hostReferenceId: G0i19bLbf0L02Z9g1GiEz4
                    merchant:
                      merchantSoftware:
                        companyName: Payment Company
                        productName: Application Name
                    recurring:
                      recurringSequence: FIRST
                      agreementId: '1235'
                      paymentAgreementExpiryDate: '2040-10-30'
                    shipTo:
                      shippingDescription: Personal Item shipping to my home
        '400':
          description: Badly formatted request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
    get:
      summary: Get a specific payment transaction by request Id
      operationId: V2PaymentGet
      tags:
        - Transactions
      description: Request Original Authorization Transaction details
      parameters:
        - name: request-id
          in: header
          required: true
          schema:
            type: string
            example: 10cc0270-7bed-11e9-a188-1763956dd7f6
            maxLength: 40
          description: Merchant identifier for the request. The value must be unique.
          examples:
            Success Basic Auth:
              value: 10cc0270-7bed-11e9-a188-1763956dd7f6
            Success Authentication:
              value: 12cc0270-7bed-11e9-a188-1763956dd7f6
            Error:
              value: 11cc0270-7bed-11e9-a188-1763956dd7f6
        - name: requestIdentifier
          in: query
          required: true
          schema:
            type: string
            example: 12cc0270-7bed-11e9-a188-1763956dd7f6
            maxLength: 40
          description: The request identifier for the previous attempted transaction to query by.
          examples:
            Success Basic Auth:
              value: 14cc0270-7bed-11e9-a188-1763956dd7f6
            Success Authentication:
              value: 16cc0270-7bed-11e9-a188-1763956dd7f6
            Error:
              value: 15cc0270-7bed-11e9-a188-1763956dd7f6
        - name: merchant-id
          in: header
          required: true
          schema:
            type: string
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: Identifier for the merchant account
          examples:
            Success Basic Auth:
              value: '998482157632'
            Success Authentication:
              value: '998482157630'
            Error:
              value: '991234567890'
        - name: minorVersion
          in: header
          schema:
            type: string
            example: '1'
          description: Identifier for the minor release version
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentResponse'
        '400':
          description: Badly formatted request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /payments/{id}:
    patch:
      summary: Update payment transaction by transaction Id
      operationId: V2PaymentPatch
      tags:
        - Transactions
      description: Update an existing payment 1.Capture a payment for settlement. 2. Void a payment and authorization. The transaction will not settle. 3. Update a payment.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 12cc0270-7bed-11e9-a188-1763956dd7f6
          description: Identifier for the transaction
          examples:
            Success Capture:
              value: 44444444-7bea-11e9-a188-1763956dd7f6
            Success Void:
              value: 66666666-7bea-11e9-a188-1763956dd7f6
            Error:
              value: 22222222-7bea-11e9-a188-1763956dd7f6
        - name: request-id
          in: header
          required: true
          schema:
            type: string
            example: 10cc0270-7bed-11e9-a188-1763956dd7f6
            maxLength: 40
          description: Merchant identifier for the request. The value must be unique.
          examples:
            Success Capture:
              value: 11cc0270-7bed-11e9-a188-1763956dd7f6
            Success Void:
              value: 12cc0270-7bed-11e9-a188-1763956dd7f6
            Error:
              value: 22cc0270-7bed-11e9-a188-1763956dd7f6
        - name: merchant-id
          in: header
          required: true
          schema:
            type: string
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: Identifier for the merchant account
          examples:
            Success Capture:
              value: '998482157631'
            Success Void:
              value: '998482157632'
            Error:
              value: '998482157630'
        - name: minorVersion
          in: header
          schema:
            type: string
            example: '1'
          description: Identifier for the minor release version
      requestBody:
        description: The payment update request.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paymentPatch'
            examples:
              Success Capture:
                value:
                  captureMethod: NOW
              Success Void:
                value:
                  isVoid: true
              Error:
                value:
                  captureMethod: NOW
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentResponse'
        '400':
          description: Badly formatted request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
    get:
      summary: Get a specific payment transaction by transaction Id
      operationId: V2PaymentByIdGet
      tags:
        - Transactions
      description: Get a specific payment transaction by transaction Id
      parameters:
        - name: merchant-id
          in: header
          required: true
          schema:
            type: string
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: Identifier for the merchant account
          examples:
            Success:
              value: '998482157632'
            Error:
              value: '998482157630'
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 12cc0270-7bed-11e9-a188-1763956dd7f6
          description: Identifier for the transaction
          examples:
            Success:
              value: 66666666-7bea-11e9-a188-1763956dd7f6
            Error:
              value: 22222222-7bea-11e9-a188-1763956dd7f6
        - name: minorVersion
          in: header
          schema:
            type: string
            example: '1'
          description: Identifier for the minor release version
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentResponse'
        '400':
          description: Badly formatted request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /payments/{id}/captures:
    post:
      summary: Capture a payment
      operationId: V2CapturePost
      tags:
        - Transactions
      description: Capture a payment request for existing authorized transaction
      parameters:
        - name: request-id
          in: header
          required: true
          schema:
            type: string
            example: 10cc0270-7bed-11e9-a188-1763956dd7f6
            maxLength: 40
          description: Merchant identifier for the request. The value must be unique.
          examples:
            Success First Capture:
              value: 252f0171-9512-4f54-94e5-5c046dc55eab
            Success Final Capture:
              value: f9c75448-0764-4eee-b67f-d6e9d2fb167f
        - name: merchant-id
          in: header
          required: true
          schema:
            type: string
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: Identifier for the merchant account
          examples:
            Success First Capture:
              value: '000017904371'
            Success Final Capture:
              value: '000017904372'
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 12cc0270-7bed-11e9-a188-1763956dd7f6
          description: Identifies a unique occurrence of a transaction.
          examples:
            Success First Capture:
              value: e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a
            Success Final Capture:
              value: 22b88670-272d-4d69-a011-b728b7b45991
        - name: minorVersion
          in: header
          schema:
            type: string
            example: '1'
          description: Identifier for the minor release version
      requestBody:
        description: Capture Request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/captureRequest'
            examples:
              Success First Capture:
                value:
                  amount: 100
                  currency: USD
                  multiCapture:
                    multiCaptureSequenceNumber: '1'
                    multiCaptureRecordCount: 2
                    isFinalCapture: false
              Success Final Capture:
                value:
                  amount: 100
                  currency: USD
                  multiCapture:
                    multiCaptureSequenceNumber: '2'
                    multiCaptureRecordCount: 2
                    isFinalCapture: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentResponse'
              examples:
                Success First Capture:
                  value:
                    transactionId: e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a
                    requestId: 252f0171-9512-4f54-94e5-5c046dc55eab
                    transactionState: CLOSED
                    responseStatus: SUCCESS
                    responseCode: ACCEPTED
                    responseMessage: Transaction accepted
                    paymentMethodType:
                      card:
                        cardType: VI
                        isBillPayment: true
                        maskedAccountNumber: 401200XXXXXX0026
                        networkResponse:
                          cardVerificationResult: MATCH
                          networkTransactionId: '013094692162180'
                          paymentAccountReference: Q1J4Z28RKA1EBL470G9XYG90R5D3E
                    captureMethod: NOW
                    initiatorType: MERCHANT
                    transactionDate: '2023-04-04T21:04:33.764Z'
                    isAmountFinal: true
                    amount: 100
                    currency: USD
                    remainingRefundableAmount: 100
                    remainingAuthAmount: 1134
                    hostReferenceId: aTWjsNr8fCy2ZjS6LdpEm
                    merchant:
                      merchantId: '000017904371'
                      merchantSoftware:
                        companyName: Payment Company
                        productName: Application Name
                        version: '1.235'
                    paymentRequest:
                      paymentRequestId: e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a
                      paymentRequestStatus: OPEN
                      authorizations:
                        - authorizationId: e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a
                          amount: 1234
                          transactionStatusCode: AUTHORIZED
                          authorizationType: INITIAL
                      captures:
                        - captureId: e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a
                          amount: 100
                          transactionStatusCode: CLOSED
                          captureRemainingRefundableAmount: 100
                Success Final Capture:
                  value:
                    transactionId: 22b88670-272d-4d69-a011-b728b7b45991
                    requestId: f9c75448-0764-4eee-b67f-d6e9d2fb167f
                    transactionState: CLOSED
                    responseCode: ACCEPTED
                    responseStatus: SUCCESS
                    responseMessage: Transaction accepted
                    paymentMethodType:
                      card:
                        cardType: VI
                        isBillPayment: true
                        maskedAccountNumber: 401200XXXXXX0026
                        networkResponse:
                          cardVerificationResult: MATCH
                          networkTransactionId: '013094692162180'
                          paymentAccountReference: Q1J4Z28RKA1EBL470G9XYG90R5D3E
                    captureMethod: NOW
                    initiatorType: MERCHANT
                    transactionDate: '2023-04-04T21:04:33.764Z'
                    isAmountFinal: true
                    amount: 100
                    currency: USD
                    remainingRefundableAmount: 100
                    remainingAuthAmount: 1034
                    hostReferenceId: aTWjsNr8fCy2ZjS6LdpEm
                    merchant:
                      merchantId: '000017904372'
                      merchantSoftware:
                        companyName: Payment Company
                        productName: Application Name
                        version: '1.235'
                      merchantCategoryCode: '4899'
                    paymentRequest:
                      paymentRequestId: e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a
                      paymentRequestStatus: CLOSED
                      authorizations:
                        - authorizationId: e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a
                          amount: 1234
                          transactionStatusCode: AUTHORIZED
                          authorizationType: INITIAL
                      captures:
                        - captureId: 22b88670-272d-4d69-a011-b728b7b45991
                          amount: 100
                          transactionStatusCode: CLOSED
                          captureRemainingRefundableAmount: 100
                        - captureId: e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a
                          amount: 100
                          transactionStatusCode: CLOSED
                          captureRemainingRefundableAmount: 100
        '400':
          description: Badly formatted request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /captures/{id}:
    get:
      summary: Retrieve Payment Details by transaction Id
      operationId: V2CaptureByIdGet
      tags:
        - Transactions
      description: Request capture details for a specific capture request by captureId
      parameters:
        - name: request-id
          in: header
          required: true
          schema:
            type: string
            example: 10cc0270-7bed-11e9-a188-1763956dd7f6
            maxLength: 40
          description: Merchant identifier for the request. The value must be unique.
          examples:
            Success Final Capture:
              value: f9c65662-0764-4eee-b67f-d6e9d2fb167f
        - name: merchant-id
          in: header
          required: true
          schema:
            type: string
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: Identifier for the merchant account
          examples:
            Success Final Capture:
              value: '000017904371'
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 12cc0270-7bed-11e9-a188-1763956dd7f6
          description: Identifies a unique occurrence of a transaction.
          examples:
            Success Final Capture:
              value: 22b88670-272d-4d69-a011-b728b7b45991
        - name: minorVersion
          in: header
          schema:
            type: string
            example: '1'
          description: Identifier for the minor release version
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentResponse'
              examples:
                Success Final Capture:
                  value:
                    transactionId: 22b88670-272d-4d69-a011-b728b7b45991
                    requestId: f9c65662-0764-4eee-b67f-d6e9d2fb167f
                    transactionState: CLOSED
                    responseCode: ACCEPTED
                    responseStatus: SUCCESS
                    responseMessage: Transaction accepted
                    paymentMethodType:
                      card:
                        cardType: VI
                        isBillPayment: true
                        maskedAccountNumber: 401200XXXXXX0026
                        networkResponse:
                          cardVerificationResult: MATCH
                          networkTransactionId: '013094692162180'
                          paymentAccountReference: Q1J4Z28RKA1EBL470G9XYG90R5D3E
                    captureMethod: NOW
                    initiatorType: MERCHANT
                    transactionDate: '2023-04-04T21:04:33.764Z'
                    isAmountFinal: true
                    amount: 100
                    currency: USD
                    remainingRefundableAmount: 100
                    remainingAuthAmount: 1034
                    hostReferenceId: aTWjsNr8fCy2ZjS6LdpEm
                    merchant:
                      merchantId: '000017904371'
                      merchantSoftware:
                        companyName: Payment Company
                        productName: Application Name
                        version: '1.235'
                      merchantCategoryCode: '4899'
                    paymentRequest:
                      paymentRequestId: e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a
                      paymentRequestStatus: CLOSED
                      authorizations:
                        - authorizationId: e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a
                          amount: 1234
                          transactionStatusCode: AUTHORIZED
                          authorizationType: INITIAL
                      captures:
                        - captureId: 22b88670-272d-4d69-a011-b728b7b45991
                          amount: 100
                          transactionStatusCode: CLOSED
                          captureRemainingRefundableAmount: 100
                        - captureId: e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a
                          amount: 100
                          transactionStatusCode: CLOSED
                          captureRemainingRefundableAmount: 100
        '400':
          description: Badly formatted request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /captures:
    get:
      summary: Retrieve Payment Details
      operationId: V2CaptureGet
      tags:
        - Transactions
      description: Request capture details for a specific capture request
      parameters:
        - name: request-id
          in: header
          required: true
          schema:
            type: string
            example: 10cc0270-7bed-11e9-a188-1763956dd7f6
            maxLength: 40
          description: Merchant identifier for the request. The value must be unique.
          examples:
            Success Final Capture:
              value: f9c65662-0764-4eee-b67f-d6e9d2fb167f
        - name: requestIdentifier
          in: query
          required: true
          schema:
            type: string
            example: 10cc0270-7bed-11e9-a188-1763956dd7f6
            maxLength: 40
          description: Merchant identifier for the request. The value must be unique.
          examples:
            Success Final Capture:
              value: f9c75448-0764-4eee-b67f-d6e9d2fb167f
        - name: merchant-id
          in: header
          required: true
          schema:
            type: string
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: Identifier for the merchant account
          examples:
            Success Final Capture:
              value: '000017904371'
        - name: minorVersion
          in: header
          schema:
            type: string
            example: '1'
          description: Identifier for the minor release version
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentResponse'
              examples:
                Success Final Capture:
                  value:
                    transactionId: 22b88670-272d-4d69-a011-b728b7b45991
                    requestId: f9c75448-0764-4eee-b67f-d6e9d2fb167f
                    transactionState: CLOSED
                    responseCode: ACCEPTED
                    responseStatus: SUCCESS
                    responseMessage: Transaction accepted
                    paymentMethodType:
                      card:
                        cardType: VI
                        isBillPayment: true
                        maskedAccountNumber: 401200XXXXXX0026
                        cardTypeIndicators:
                          issuanceCountryCode: USA
                          isDurbinRegulated: false
                          cardProductTypes:
                            - COMMERCIAL
                            - PINLESS_DEBIT
                        networkResponse:
                          cardVerificationResult: MATCH
                          networkTransactionId: '013094692162180'
                          paymentAccountReference: Q1J4Z28RKA1EBL470G9XYG90R5D3E
                        paymentTokens:
                          - tokenProvider: SAFETECH
                            responseStatus: ERROR
                            tokenServiceResponseMessage: Merchant record not found or not enabled for Acquirer Token
                            tokenServiceResponseCode: BAD_REQUEST
                    captureMethod: NOW
                    initiatorType: CARDHOLDER
                    accountOnFile: NOT_STORED
                    transactionDate: '2023-04-04T21:04:33.764Z'
                    isAmountFinal: true
                    amount: 100
                    currency: USD
                    remainingRefundableAmount: 100
                    remainingAuthAmount: 1034
                    hostReferenceId: aTWjsNr8fCy2ZjS6LdpEm
                    merchant:
                      merchantId: '000017904371'
                      merchantSoftware:
                        companyName: Payment Company
                        productName: Application Name
                        version: '1.235'
                      merchantCategoryCode: '4899'
                    paymentRequest:
                      paymentRequestId: e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a
                      paymentRequestStatus: CLOSED
                      authorizations:
                        - authorizationId: e9468a04-7ad5-47ad-b2a8-cd3d76be0f6a
                          amount: 1234
                          transactionStatusCode: AUTHORIZED
                          authorizationType: INITIAL
                      captures:
                        - captureId: 22b88670-272d-4d69-a011-b728b7b45991
                          amount: 100
                          transactionStatusCode: CLOSED
                          captureRemainingRefundableAmount: 100
        '400':
          description: Badly formatted request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /refunds:
    post:
      summary: Create a refund
      operationId: V2RefundPost
      tags:
        - Transactions
      description: Creates a refund request and returns funds to the consumer. 1. For refund associated with a previous payment, send transactionReferenceId. 2. For standalone refunds, send order and payment objects.
      parameters:
        - name: request-id
          in: header
          required: true
          schema:
            type: string
            example: 10cc0270-7bed-11e9-a188-1763956dd7f6
            maxLength: 40
          description: Merchant identifier for the request. The value must be unique.
          examples:
            Stand Alone Refund:
              value: 4c459160-635e-4b12-b111-6dfd4ca6c951
            Referenced Refund:
              value: 12cc0270-7bed-11e9-a188-1763956dd7f6
        - name: merchant-id
          in: header
          required: true
          schema:
            type: string
            example: '000017904371'
            minLength: 8
            maxLength: 12
          description: Identifier for the merchant account
          examples:
            Stand Alone Refund:
              value: '000017904371'
            Referenced Refund:
              value: '000017904372'
        - name: minorVersion
          in: header
          schema:
            type: string
            example: '1'
          description: Identifier for the minor release version
      requestBody:
        description: The refund request.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refund'
            examples:
              Stand Alone Refund:
                value:
                  merchant:
                    merchantSoftware:
                      companyName: Payment Company
                      productName: Application Name
                      version: '1.235'
                  amount: 1234
                  currency: USD
                  initiatorType: CARDHOLDER
                  accountOnFile: NOT_STORED
                  paymentMethodType:
                    card:
                      accountNumber: '4012000033330026'
                      expiry:
                        month: 4
                        year: 2025
              Referenced Refund:
                value:
                  merchant:
                    merchantSoftware:
                      companyName: Payment Company
                      productName: Application Name
                      version: '1.235'
                  amount: 1234
                  currency: USD
                  initiatorType: CARDHOLDER
                  accountOnFile: STORED
                  paymentMethodType:
                    transactionReference:
                      transactionReferenceId: 669b0915-af58-42b9-8815-ad375a658adb
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refundResponse'
              examples:
                Stand Alone Refund:
                  value:
                    transactionId: 9af6cc71-7b5f-47db-b90c-353ba46693fa
                    requestId: 4c459160-635e-4b12-b111-6dfd4ca6c951
                    transactionState: AUTHORIZED
                    amount: 1234
                    currency: USD
                    responseStatus: SUCCESS
                    responseCode: APPROVED
                    responseMessage: Transaction approved by Issuer
                    approvalCode: tst217
                    hostMessage: Approved
                    initiatorType: MERCHANT
                    accountOnFile: NOT_STORED
                    transactionDate: '2023-08-15T21:32:30.059Z'
                    merchant:
                      merchantId: '000017904371'
                      merchantSoftware:
                        companyName: Payment Company
                        productName: Application Name
                        version: '1.235'
                    paymentMethodType:
                      card:
                        cardTypeName: VISA
                        cardType: VI
                        maskedAccountNumber: 401200XXXXXX0026
                        cardTypeIndicators:
                          issuanceCountryCode: USA
                          isDurbinRegulated: false
                          cardProductTypes:
                            - COMMERCIAL
                            - PINLESS_DEBIT
                        networkResponse:
                          addressVerificationResult: NOT_REQUESTED
                    hostReferenceId: wIFalgah4FkjKaomCCEk82
                    paymentRequest:
                      paymentRequestId: 9af6cc71-7b5f-47db-b90c-353ba46693fa
                      paymentRequestStatus: CLOSED
                      refunds:
                        - refundId: 9af6cc71-7b5f-47db-b90c-353ba46693fa
                          amount: 1234
                          transactionStatusCode: CLOSED
                Referenced Refund:
                  value:
                    transactionId: ae05aa5a-706b-4b7e-861f-dfddfc196a28
                    requestId: a3c93558-9671-497e-9046-74e902823ed8
                    transactionState: AUTHORIZED
                    amount: 1234
                    currency: USD
                    responseStatus: SUCCESS
                    responseCode: APPROVED
                    responseMessage: Transaction approved by Issuer
                    transactionReferenceId: 669b0915-af58-42b9-8815-ad375a658adb
                    remainingRefundableAmount: 0
                    approvalCode: tst905
                    hostMessage: Approved
                    initiatorType: CARDHOLDER
                    accountOnFile: STORED
                    transactionDate: '2023-08-16T16:22:50.485Z'
                    merchant:
                      merchantId: '000017904372'
                      merchantSoftware:
                        companyName: Payment Company
                        productName: Application Name
                        version: '1.235'
                    paymentMethodType:
                      card:
                        cardTypeName: VISA
                        cardType: VI
                        maskedAccountNumber: 401200XXXXXX0026
                        cardTypeIndicators:
                          issuanceCountryCode: USA
                          isDurbinRegulated: false
                          cardProductTypes:
                            - COMMERCIAL
                            - PINLESS_DEBIT
                        networkResponse:
                          addressVerificationResult: NOT_REQUESTED
                    hostReferenceId: 8GvObatjEv5lVYBQ3xNbm6
                    paymentRequest:
                      paymentRequestId: 669b0915-af58-42b9-8815-ad375a658adb
                      paymentRequestStatus: CLOSED
                      authorizations:
                        - authorizationId: 669b0915-af58-42b9-8815-ad375a658adb
                          amount: 1234
                          transactionStatusCode: CAPTURED
                          authorizationType: INITIAL
                      captures:
                        - captureId: 669b0915-af58-42b9-8815-ad375a658adb
                          amount: 1234
                          transactionStatusCode: CLOSED
                          captureRemainingRefundableAmount: 0
                      refunds:
                        - refundId: ae05aa5a-706b-4b7e-861f-dfddfc196a28
                          amount: 1234
                          transactionStatusCode: CLOSED
        '400':
          description: Badly formatted request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
    get:
      summary: Get a specific refund transaction by request Id
      operationId: V2RefundGet
      tags:
        - Transactions
      description: Get a specific refund transaction by request Id.
      parameters:
        - name: request-id
          in: header
          required: true
          schema:
            type: string
            example: 10cc0270-7bed-11e9-a188-1763956dd7f6
            maxLength: 40
          description: Merchant identifier for the request. The value must be unique.
          examples:
            Success:
              value: a3c93558-9671-497e-9046-74e902823ed8
        - name: requestIdentifier
          in: query
          required: true
          schema:
            type: string
            example: 12cc0270-7bed-11e9-a188-1763956dd7f6
            maxLength: 40
          description: The request identifier for the previous attempted transaction to query by.
          examples:
            Success:
              value: ae05aa5a-706b-4b7e-861f-dfddfc196a28
        - name: merchant-id
          in: header
          required: true
          schema:
            type: string
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: Identifier for the merchant account
          examples:
            Success:
              value: '000017904371'
        - name: minorVersion
          in: header
          schema:
            type: string
            example: '1'
          description: Identifier for the minor release version
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refundResponse'
              examples:
                Success:
                  value:
                    transactionId: ae05aa5a-706b-4b7e-861f-dfddfc196a28
                    requestId: a3c93558-9671-497e-9046-74e902823ed8
                    transactionState: CLOSED
                    amount: 1234
                    currency: USD
                    responseStatus: SUCCESS
                    responseCode: APPROVED
                    responseMessage: Transaction approved by Issuer
                    transactionReferenceId: 669b0915-af58-42b9-8815-ad375a658adb
                    remainingRefundableAmount: 0
                    approvalCode: tst905
                    hostMessage: Approved
                    initiatorType: CARDHOLDER
                    accountOnFile: NOT_STORED
                    transactionDate: '2023-08-16T16:22:50.485Z'
                    merchant:
                      merchantId: '000017904371'
                      merchantSoftware:
                        companyName: Payment Company
                        productName: Application Name
                        version: '1.235'
                    paymentMethodType:
                      card:
                        cardTypeName: VISA
                        cardType: VI
                        maskedAccountNumber: 411234XXXXXX4113
                        cardTypeIndicators:
                          issuanceCountryCode: USA
                          isDurbinRegulated: false
                          cardProductTypes:
                            - COMMERCIAL
                            - PINLESS_DEBIT
                        networkResponse:
                          addressVerificationResult: NOT_REQUESTED
                        isBillPayment: true
                    hostReferenceId: 8GvObatjEv5lVYBQ3xNbm6
                    paymentRequest:
                      paymentRequestId: 669b0915-af58-42b9-8815-ad375a658adb
                      paymentRequestStatus: CLOSED
                      authorizations:
                        - authorizationId: 669b0915-af58-42b9-8815-ad375a658adb
                          amount: 1234
                          transactionStatusCode: CAPTURED
                          authorizationType: INITIAL
                      captures:
                        - captureId: 669b0915-af58-42b9-8815-ad375a658adb
                          amount: 1234
                          transactionStatusCode: CLOSED
                          captureRemainingRefundableAmount: 0
                      refunds:
                        - refundId: ae05aa5a-706b-4b7e-861f-dfddfc196a28
                          amount: 1234
                          transactionStatusCode: CLOSED
        '400':
          description: Badly formatted request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /refunds/{id}:
    get:
      summary: Get a specific refund transaction by transaction Id
      operationId: V2RefundByIdGet
      tags:
        - Transactions
      description: Get a specific refund transaction by transaction Id
      parameters:
        - name: merchant-id
          in: header
          required: true
          schema:
            type: string
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: Identifier for the merchant account
          examples:
            Success:
              value: '000017904371'
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 12cc0270-7bed-11e9-a188-1763956dd7f6
          description: Identifier for the transaction
          examples:
            Success:
              value: 66666666-7bea-11e9-a188-1763956dd7f6
        - name: minorVersion
          in: header
          schema:
            type: string
            example: '1'
          description: Identifier for the minor release version
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refundResponse'
              examples:
                Success:
                  value:
                    transactionId: ae05aa5a-706b-4b7e-861f-dfddfc196a28
                    requestId: a3c93558-9671-497e-9046-74e902823ed8
                    transactionState: CLOSED
                    amount: 1234
                    currency: USD
                    responseStatus: SUCCESS
                    responseCode: APPROVED
                    responseMessage: Transaction approved by Issuer
                    transactionReferenceId: 669b0915-af58-42b9-8815-ad375a658adb
                    remainingRefundableAmount: 0
                    approvalCode: tst905
                    hostMessage: Approved
                    initiatorType: CARDHOLDER
                    accountOnFile: NOT_STORED
                    transactionDate: '2023-08-16T16:22:50.485Z'
                    merchant:
                      merchantId: '000017904371'
                      merchantSoftware:
                        companyName: Payment Company
                        productName: Application Name
                        version: '1.235'
                    paymentMethodType:
                      card:
                        cardTypeName: VISA
                        cardType: VI
                        maskedAccountNumber: 411234XXXXXX4113
                        cardTypeIndicators:
                          issuanceCountryCode: USA
                          isDurbinRegulated: false
                          cardProductTypes:
                            - COMMERCIAL
                            - PINLESS_DEBIT
                        networkResponse:
                          addressVerificationResult: NOT_REQUESTED
                        isBillPayment: true
                    hostReferenceId: 8GvObatjEv5lVYBQ3xNbm6
                    paymentRequest:
                      paymentRequestId: 669b0915-af58-42b9-8815-ad375a658adb
                      paymentRequestStatus: CLOSED
                      authorizations:
                        - authorizationId: 669b0915-af58-42b9-8815-ad375a658adb
                          amount: 1234
                          transactionStatusCode: CAPTURED
                          authorizationType: INITIAL
                      captures:
                        - captureId: 669b0915-af58-42b9-8815-ad375a658adb
                          amount: 1234
                          transactionStatusCode: CLOSED
                          captureRemainingRefundableAmount: 0
                      refunds:
                        - refundId: ae05aa5a-706b-4b7e-861f-dfddfc196a28
                          amount: 1234
                          transactionStatusCode: CLOSED
        '400':
          description: Badly formatted request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /verifications:
    post:
      summary: Verify a payment instrument
      operationId: V2VerificationPost
      tags:
        - Transactions
      description: Validate a payment instrument with cardholder information without placing a funds hold on the consumer account (Not supported by all payment methods)
      parameters:
        - name: request-id
          in: header
          required: true
          schema:
            type: string
            example: 10cc0270-7bed-11e9-a188-1763956dd7f6
            maxLength: 40
          description: Merchant identifier for the request. The value must be unique.
          examples:
            Basic Verification AVS:
              value: bf51d288-1d1c-4772-89e1-13289435077a
            Basic Verification CVV:
              value: 3af75aad-111b-4830-abfa-9d657ee79883
            Verification with authentication:
              value: 4af75aad-111b-4830-abfa-9d657ee79883
        - name: merchant-id
          in: header
          required: true
          schema:
            type: string
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: Identifier for the merchant account
          examples:
            Basic Verification AVS:
              value: '000017904371'
            Basic Verification CVV:
              value: '000017904372'
            Verification with authentication:
              value: '000017904373'
        - name: minorVersion
          in: header
          schema:
            type: string
            example: '1'
          description: Identifier for the minor release version
      requestBody:
        description: The verification request.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/verification'
            examples:
              Basic Verification AVS:
                value:
                  merchant:
                    merchantSoftware:
                      companyName: Payment Company
                      productName: Application Name
                      version: '1.235'
                  currency: USD
                  paymentMethodType:
                    card:
                      accountNumber: '4012000033330026'
                      expiry:
                        month: 5
                        year: 2027
                  initiatorType: CARDHOLDER
                  accountOnFile: NOT_STORED
                  accountHolder:
                    billingAddress:
                      line1: 123 some street
                      line2: Apartment 3b
                      city: Tampa
                      state: FL
                      postalCode: '33626'
              Basic Verification CVV:
                value:
                  merchant:
                    merchantSoftware:
                      companyName: Payment Company
                      productName: Application Name
                      version: '1.235'
                  currency: USD
                  paymentMethodType:
                    card:
                      accountNumber: '4012000033330026'
                      expiry:
                        month: 5
                        year: 2027
                      cvv: '411'
                  initiatorType: CARDHOLDER
                  accountOnFile: STORED
              Verification with authentication:
                value:
                  currency: EUR
                  initiatorType: CARDHOLDER
                  merchant:
                    merchantSoftware:
                      companyName: Payment Company
                      productName: Application Name
                      version: '1.235'
                  paymentMethodType:
                    card:
                      accountNumber: '4012000033330026'
                      expiry:
                        month: 5
                        year: 2037
                      verificationAuthenticationRequest:
                        accountType: CREDIT
                        authenticationReturnUrl: https://merchantreturnurl.com
                        authenticationSupportUrl: https://merchantsupporturl.com
                        threeDSAccountAdditionalInfo:
                          consumerAccountCreateLength: NO_ACCOUNT
                          consumerAccountCreateTimestamp: '2023-08-10'
                          consumerAccountUpdateLength: CURRENT_TXN
                          consumerAccountUpdateTimestamp: '2023-06-05'
                          consumerAccountPasswordUpdateTimestamp: '2023-06-05'
                          consumerAccountPasswordChangeLength: NO_CHANGE
                          consumerAccountShippingAddressLength: CURRENT_TXN_CHANGE
                          consumerAccountFirstShippingDate: '2023-06-05'
                          twentyFourHoursTransactionCount: 1
                          previousYearTransactionCount: 2
                          consumerAccount24HoursAddCardCount: 3
                          sixMonthTransactionCount: 2
                          consumerAccountSuspiciousActivityIndicator: false
                          consumerAccountShipNameIdenticalIndicator: true
                          consumerPaymentAccountLength: NO_ACCOUNT
                          consumerPaymentAccountEnrollmentDate: '2023-06-05'
                          consumerAccountAddressIdenticalIndicator: true
                        threeDSRequestorPriorAuthenticationInfo:
                          authenticationMethod: FRICTIONLESS
                          authenticationTimestamp: '2023-08-21T15:12:12Z'
                        threeDSPurchaseRisk:
                          shipmentType: DIGITAL_GOODS
                          deliveryTimeframe: ELECTRONIC
                          orderEmailAddress: john.doe@gmail.com
                          productRepurchaseIndicator: true
                          productAvailabilityCode: AVAILABLE
                          preOrderDate: '2023-06-05'
                          purchasedPrepaidCardTotalAmount: 10
                          purchasedPrepaidCardCount: 2
                          prepaidCardCurrency: USD
                        threeDSPurchaseInfo:
                          purchaseDate: '2023-08-25T15:12:12Z'
                          recurringAuthorizationDayCount: 2
                          threeDomainSecureTransactionType: GOODS_SERVICES
                        threeDSRequestorAuthenticationInfo:
                          threeDSAuthenticationTimestamp: '2023-08-25T15:12:12Z'
                          threeDSAuthenticationData: testdata
                          threeDSChallengeType: NO_CHALLENGE
                          requestorAuthenticationMethod: REQUESTOR_CRED
                          authenticationPurpose: PAYMENT_TRANSACTION
                  accountHolder:
                    referenceId: '1245'
                    consumerIdCreationDate: '2021-09-01'
                    firstName: John
                    lastName: Doe
                    email: John.Doe@gmail.com
                    phone:
                      countryCode: 1
                      phoneNumber: '8131112222'
                    billingAddress:
                      line1: 123 main street
                      line2: Apartment 2
                      city: SALEM
                      state: NH
                      postalCode: '03105'
                      countryCode: USA
                  browserInfo:
                    browserAcceptHeader: application/json
                    deviceIPAddress: 192.168.192.12
                    browserLanguage: en
                    browserColorDepth: '8'
                    browserScreenHeight: '1'
                    browserScreenWidth: '1'
                    browserUserAgent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0
                    challengeWindowSize: FULL_SCREEN
                    javaEnabled: false
                    javaScriptEnabled: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verificationResponse'
              examples:
                Basic Verification AVS:
                  value:
                    transactionId: 7c7d2a47-0d36-41ed-bf12-7a5388d4edd6
                    requestId: bf51d288-1d1c-4772-89e1-13289435077a
                    currency: USD
                    responseStatus: SUCCESS
                    responseCode: APPROVED
                    responseMessage: Transaction approved by Issuer
                    hostMessage: APPROVED
                    paymentMethodType:
                      card:
                        cardType: VI
                        cardTypeName: VISA
                        maskedAccountNumber: 411234XXXXXX4113
                        cardTypeIndicators:
                          issuanceCountryCode: GBR
                          isLevel3Eligible: false
                          isDurbinRegulated: false
                          cardProductTypes:
                            - SIGNATURE_DEBIT
                        networkResponse:
                          addressVerificationResultCode: 'N'
                          cardVerificationResult: MATCH
                          cardVerificationResultCode: I3
                          networkTransactionId: '012166692165035'
                    merchant:
                      merchantId: '000017904371'
                      merchantSoftware:
                        companyName: Payment Company
                        productName: Application Name
                        version: '1.235'
                    transactionDate: '2023-08-15T16:56:59.953Z'
                    initiatorType: CARDHOLDER
                    accountOnFile: NOT_STORED
                    hostReferenceId: sMArPWHajtkfdLufWEAyx5
                Basic Verification CVV:
                  value:
                    transactionId: 902a2fd3-3e3f-4302-a8e0-c3c52bf49087
                    requestId: 3af75aad-111b-4830-abfa-9d657ee79883
                    currency: USD
                    responseStatus: SUCCESS
                    responseCode: APPROVED
                    responseMessage: Transaction accepted
                    hostMessage: Validated
                    paymentMethodType:
                      card:
                        cardType: VI
                        cardTypeName: VISA
                        maskedAccountNumber: 411234XXXXXX4113
                        cardTypeIndicators:
                          issuanceCountryCode: USA
                          isLevel3Eligible: false
                          cardProductTypes:
                            - COMMERCIAL
                            - PINLESS_DEBIT
                        networkResponse:
                          addressVerificationResult: NOT_REQUESTED
                          cardVerificationResult: NO_MATCH
                          cardVerificationResultCode: 'N'
                          networkTransactionId: '013228692161399'
                    merchant:
                      merchantId: '000017904372'
                      merchantSoftware:
                        companyName: Payment Company
                        productName: Application Name
                        version: '1.235'
                    transactionDate: '2023-07-06T15:25:58.061Z'
                    initiatorType: CARDHOLDER
                    accountOnFile: STORED
                    hostReferenceId: 7QCZEidM5ACqwPJsixl675
        '400':
          description: Badly formatted request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
    get:
      summary: Get a specific verification transaction by request Id
      operationId: V2VerificationGet
      tags:
        - Transactions
      description: Get a specific verification transaction by request Id.
      parameters:
        - name: request-id
          in: header
          required: true
          schema:
            type: string
            example: 10cc0270-7bed-11e9-a188-1763956dd7f6
            maxLength: 40
          description: Merchant identifier for the request. The value must be unique.
          examples:
            Success Basic Verification:
              value: 12cc0270-7bed-11e9-a188-1763956dd7f6
            Success Authentication:
              value: 10cc0270-7bed-11e9-a188-1763956dd7f6
            Error:
              value: 11cc0270-7bed-11e9-a188-1763956dd7f6
        - name: requestIdentifier
          in: query
          required: true
          schema:
            type: string
            example: 12cc0270-7bed-11e9-a188-1763956dd7f6
            maxLength: 40
          description: The request identifier for the previous attempted transaction to query by.
          examples:
            Success Basic Verification:
              value: 14cc0270-7bed-11e9-a188-1763956dd7f6
            Success Authentication:
              value: 16cc0270-7bed-11e9-a188-1763956dd7f6
            Error:
              value: 15cc0270-7bed-11e9-a188-1763956dd7f6
        - name: merchant-id
          in: header
          required: true
          schema:
            type: string
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: Identifier for the merchant account
          examples:
            Success Basic Verification:
              value: '998482157632'
            Success Authentication:
              value: '998482157631'
            Error:
              value: '998482157630'
        - name: minorVersion
          in: header
          schema:
            type: string
            example: '1'
          description: Identifier for the minor release version
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verificationResponse'
        '400':
          description: Badly formatted request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /verifications/{id}:
    get:
      summary: Get a specific verification transaction by transaction Id
      operationId: V2VerificationByIdGet
      tags:
        - Transactions
      description: Get a specific verification transaction by transaction Id.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 12cc0270-7bed-11e9-a188-1763956dd7f6
          description: Identifier for the transaction
          examples:
            Success:
              value: 66666666-7bea-11e9-a188-1763956dd7f6
            Error:
              value: 44444444-7bea-11e9-a188-1763956dd7f6
        - name: request-id
          in: header
          required: true
          schema:
            type: string
            example: 10cc0270-7bed-11e9-a188-1763956dd7f6
            maxLength: 40
          description: Merchant identifier for the request. The value must be unique.
          examples:
            Success:
              value: 12cc0270-7bed-11e9-a188-1763956dd7f6
            Error:
              value: 10cc0270-7bed-11e9-a188-1763956dd7f6
        - name: merchant-id
          in: header
          required: true
          schema:
            type: string
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: Identifier for the merchant account
          examples:
            Success:
              value: '998482157632'
            Error:
              value: '998482157630'
        - name: minorVersion
          in: header
          schema:
            type: string
            example: '1'
          description: Identifier for the minor release version
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verificationResponse'
        '400':
          description: Badly formatted request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /fraudcheck:
    post:
      summary: Fraud check
      operationId: V2FraudCheckPost
      tags:
        - Fraud
      description: Validate a payment instrument with cardholder information without placing a funds hold on the consumer account (Not supported by all payment methods)
      parameters:
        - name: request-id
          in: header
          required: true
          schema:
            type: string
            example: 10cc0270-7bed-11e9-a188-1763956dd7f6
            maxLength: 40
          description: Merchant identifier for the request. The value must be unique.
          examples:
            Success Fraud Check:
              value: 10cc0270-7bed-11e9-a188-1763956dd7f6
            Fraud Check with PAGE Encryption:
              value: 11cc0270-7bed-11e9-a188-1763956dd7f6
        - name: merchant-id
          in: header
          required: true
          schema:
            type: string
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: Identifier for the merchant account
          examples:
            Success Fraud Check:
              value: '998482157632'
            Fraud Check with PAGE Encryption:
              value: '998482157633'
        - name: minorVersion
          in: header
          schema:
            type: string
            example: '1'
          description: Identifier for the minor release version
      requestBody:
        description: The fraud check request.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fraudCheckRequest'
            examples:
              Success Fraud Check:
                value:
                  amount: 10000
                  currency: USD
                  fraudScore:
                    cardholderBrowserInformation: cardholderBrowserInformation
                    isFraudRuleReturn: true
                    sessionId: d38e582e-27e1-4748-811b-79281f3bb714
                    fencibleItemAmount: 1230
                    aNITelephoneNumber: '5131234567'
                  accountHolder:
                    deviceIPAddress: 127.0.0.1
                    driverLicenseNumber: T000-000-0000
                    email: john.dow@abc.com
                    firstName: John
                    lastName: Doe
                    referenceId: '12122012'
                    consumerIdCreationDate: '2021-09-01'
                    phone:
                      countryCode: 1
                      phoneNumber: '6035551234'
                    billingAddress:
                      line1: 123 some street
                      line2: Apartment 3b
                      city: Tampa
                      state: FL
                      postalCode: '33626'
                  paymentMethodType:
                    card:
                      expiry:
                        month: 5
                        year: 2024
                      accountNumber: '4012000033330026'
                  shipTo:
                    shippingAddress:
                      line1: 123 some street
                      line2: Apartment 3b
                      city: Tampa
                      state: FL
                      postalCode: '33626'
                    shippingDescription: C
                  merchant:
                    merchantSoftware:
                      companyName: Payment Company
                      productName: Application Name
                      version: '1.235'
              Fraud Check with PAGE Encryption:
                value:
                  amount: 10000
                  currency: USD
                  fraudScore:
                    cardholderBrowserInformation: cardholderBrowserInformation
                    isFraudRuleReturn: true
                    sessionId: d38e582e-27e1-4748-811b-79281f3bb714
                    fencibleItemAmount: 1230
                    aNITelephoneNumber: '5131234567'
                  accountHolder:
                    deviceIPAddress: 127.0.0.1
                    driverLicenseNumber: T000-000-0000
                    email: john.dow@abc.com
                    firstName: John
                    lastName: Doe
                    referenceId: '12122012'
                    consumerIdCreationDate: '2021-09-01'
                    phone:
                      countryCode: 1
                      phoneNumber: '6035551234'
                    billingAddress:
                      line1: 123 some street
                      line2: Apartment 3b
                      city: Tampa
                      state: FL
                      postalCode: '33626'
                  paymentMethodType:
                    card:
                      accountNumberType: SAFETECH_PAGE_ENCRYPTION
                      accountNumber: 401200cpGlDovRz0026
                      cvv: '517'
                      encryptionIntegrityCheck: 80df99ee3467e264
                      expiry:
                        month: 5
                        year: 2024
                  shipTo:
                    shippingAddress:
                      line1: 123 some street
                      line2: Apartment 3b
                      city: Tampa
                      state: FL
                      postalCode: '33626'
                    shippingDescription: C
                  merchant:
                    merchantSoftware:
                      companyName: Payment Company
                      productName: Application Name
                      version: '1.235'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fraudCheckResponse'
              examples:
                Success Fraud Check:
                  value:
                    transactionId: 91659309-b78a-4075-a18b-84f7e7a54b21
                    requestId: 543ba35f-70d8-4370-97dd-9e602cf41b38
                    riskDecision:
                      fraudRiskScore: '34'
                      fraudRuleAction: A
                      digitalAlertRuleName: 0000=
                      fraudStatus: A000
                      fraudStatusDescription: Fraud score successful
                      fraudRiskResponse: A
                    riskElement:
                      fraudEvaluatorTransactionId: K9SD0RKS4VYV
                      highestRiskCountry: US
                      highestRiskRegion: mn
                      cardType: AX
                      fourteenDaysTransactionCount: 0
                      sixHoursTransactionCount: 0
                      fourteenDaysCardRecordCount: 1
                      fourteenDaysDeviceRecordCount: 1
                      fourteenDaysEmailRecordCount: 1
                      deviceLayers: BE5170F6F4..23EA1C3E4B.7D240F5823.2FB5A18D3
                      sessionMatchIndicator: false
                      hashedDigitalDeviceFingerprintIdentifier: OE445516POI154F34E1A3151BCE70C19
                      deviceTimestamp: 2022-08-18+11:25
                      deviceLocalTimeZone: '300'
                      deviceRegion: mn
                      deviceCountry: US
                      deviceProxyServer: false
                      browserJavaScriptEnabled: false
                      browserAdobeFlashEnabled: false
                      browserCookiesEnabled: false
                      deviceBrowserCountry: US
                      deviceBrowserLanguage: EN
                      mobileDevice: false
                      digitalDeviceType: Android
                      deviceWirelessCapability: false
                      deviceVoiceControlled: false
                      deviceRemotelyControlCapability: false
                      deviceNetworkType: 'N'
                    hostReferenceId: 5hOQTa9S8l8GqINboAbLa4
                    responseStatus: SUCCESS
                    responseCode: ACCEPTED
                    responseMessage: Transaction Accepted
                    hostMessage: Successful Action Requested
        '400':
          description: Badly formatted request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
    get:
      summary: Retrieve fraud response
      operationId: V2FraudCheckget
      tags:
        - Fraud
      description: Retrieve fraud score of a payment instrument with cardholder information without placing a funds hold on the consumer account (Not supported by all payment methods)
      parameters:
        - name: request-id
          in: header
          required: true
          schema:
            type: string
            example: 10cc0270-7bed-11e9-a188-1763956dd7f6
            maxLength: 40
          description: Merchant identifier for the request. The value must be unique.
          examples:
            Success:
              value: 10cc0270-7bed-11e9-a188-1763956dd7f6
            Error:
              value: 12cc0270-7bed-11e9-a188-1763956dd7f6
        - name: merchant-id
          in: header
          required: true
          schema:
            type: string
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: Identifier for the merchant account
          examples:
            Success:
              value: '998482157632'
            Error:
              value: '998482157630'
        - name: minorVersion
          in: header
          schema:
            type: string
            example: '1'
          description: Identifier for the minor release version
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fraudCheckResponse'
        '400':
          description: Badly formatted request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
  /fraudcheck/{id}:
    get:
      summary: Retrieve fraud response
      operationId: V2FraudCheckByIdGet
      tags:
        - Fraud
      description: Retrieve fraud score of a payment instrument with cardholder information without placing a funds hold on the consumer account (Not supported by all payment methods)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 12cc0270-7bed-11e9-a188-1763956dd7f6
          description: Identifier for the transaction
          examples:
            Success:
              value: 66666666-7bea-11e9-a188-1763956dd7f6
            Error:
              value: 44444444-7bea-11e9-a188-1763956dd7f6
        - name: merchant-id
          in: header
          required: true
          schema:
            type: string
            example: '991234567890'
            minLength: 8
            maxLength: 12
          description: Identifier for the merchant account
          examples:
            Success:
              value: '998482157632'
            Error:
              value: '998482157630'
        - name: minorVersion
          in: header
          schema:
            type: string
            example: '1'
          description: Identifier for the minor release version
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fraudCheckResponse'
        '400':
          description: Badly formatted request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'
components:
  parameters:
    merchantId:
      name: Merchant-Id
      in: header
      required: true
      schema:
        type: string
        example: '991234567890'
        minLength: 8
        maxLength: 12
      description: Identifier for the merchant account
      examples:
        Approved Auth Basic:
          value: '998482157632'
        Approved Auth CIT Onetime Stored:
          value: '998482157632'
    requestId:
      name: Request-Id
      in: header
      required: true
      schema:
        type: string
        example: 10cc0270-7bed-11e9-a188-1763956dd7f6
        maxLength: 40
      description: Merchant identifier for the request. The value must be unique.
    requestIdentifier:
      name: requestIdentifier
      in: query
      required: true
      schema:
        type: string
        example: 11cc0270-7bed-11e9-a188-1763956dd7f6
        maxLength: 40
      description: Merchant generated identifier for request
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
        example: 12cc0270-7bed-11e9-a188-1763956dd7f6
      description: Identifier for the resource
    minorVersion:
      name: minor-version
      in: header
      schema:
        type: string
      description: This is the number applied to a minor release of an API that includes some new features and functions.
  schemas:
    accountUpdater:
      description: Contains response information related to account updater request
      type: object
      properties:
        requestAccountUpdater:
          $ref: '#/components/schemas/requestAccountUpdater'
        accountNumber:
          description: Updated Account Number if available from Account Updater service.
          type: string
          readOnly: true
        newAccountExpiry:
          $ref: '#/components/schemas/panExpiry'
        accountUpdaterResponse:
          description: Result of account updater request.
          type: string
          readOnly: true
          enum:
            - NEW_ACCOUNT
            - NEW_EXPIRY
            - NEW_ACCOUNT_AND_EXPIRY
            - CLOSED_ACCOUNT
            - PROVIDED_EXPIRY_NEWER
            - CONTACT_CARDHOLDER
            - MATCH_NO_UPDATE
            - NO_MATCH_NON_PARTICIPATING_BIN
            - NO_MATCH_PARTICIPATING_BIN
            - ISSUER_NOT_PARTICIPATING
            - CARDHOLDER_OPT_OUT
            - PORTFOLIO_CONVERSION
        accountUpdaterReasonCode:
          description: Indicates whether Account Updater service was successfully evoked or if there was an error. "SUCCESS" or "ERROR."
          type: string
          readOnly: true
        accountUpdaterReasonMessage:
          description: Long description of account updater results. e.g. "Account Update provided for account expiry "
          type: string
          readOnly: true
    payment:
      description: Request information for payment endpoint
      type: object
      required:
        - amount
        - currency
        - merchant
        - paymentMethodType
      properties:
        isCapture:
          $ref: '#/components/schemas/isCapture'
        captureMethod:
          $ref: '#/components/schemas/captureMethod'
        amount:
          $ref: '#/components/schemas/amount'
        cashBackAmount:
          $ref: '#/components/schemas/cashBackAmount'
        currency:
          $ref: '#/components/schemas/currency'
        merchant:
          $ref: '#/components/schemas/merchant'
        paymentMethodType:
          $ref: '#/components/schemas/paymentMethodType'
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
        accountOnFile:
          $ref: '#/components/schemas/accountOnFile'
        originalTransactionId:
          $ref: '#/components/schemas/originalTransactionId'
        isAmountFinal:
          $ref: '#/components/schemas/isAmountFinal'
        merchantOrderNumber:
          $ref: '#/components/schemas/merchantOrderNumber'
        recurring:
          $ref: '#/components/schemas/recurring'
        installment:
          $ref: '#/components/schemas/installment'
        accountHolder:
          $ref: '#/components/schemas/accountHolder'
        shipTo:
          $ref: '#/components/schemas/shipTo'
        risk:
          $ref: '#/components/schemas/risk'
        retailAddenda:
          $ref: '#/components/schemas/retailAddenda'
        restaurantAddenda:
          $ref: '#/components/schemas/restaurantAddenda'
        statementDescriptor:
          $ref: '#/components/schemas/statementDescriptor'
        partialAuthorizationSupport:
          $ref: '#/components/schemas/partialAuthorizationSupport'
        transactionRoutingOverrideList:
          $ref: '#/components/schemas/transactionRoutingOverrideList'
        paymentMetadataList:
          type: array
          description: Payment Metadata List
          minItems: 0
          items:
            $ref: '#/components/schemas/paymentMetadata'
        directPay:
          $ref: '#/components/schemas/directPay'
        browserInfo:
          $ref: '#/components/schemas/browserInfo'
        subMerchantSupplementalData:
          $ref: '#/components/schemas/subMerchantSupplementalData'
        mandate:
          $ref: '#/components/schemas/mandate'
        pointOfInteraction:
          $ref: '#/components/schemas/pointOfInteraction'
        merchantDefined:
          $ref: '#/components/schemas/merchantDefined'
        authorizationPurpose:
          $ref: '#/components/schemas/authorizationPurpose'
    paymentResponse:
      description: Response information for payment API calls
      type: object
      required:
        - transactionId
        - requestId
        - transactionState
        - responseStatus
        - responseCode
        - responseMessage
        - paymentMethodType
      properties:
        transactionId:
          $ref: '#/components/schemas/transactionId'
        requestId:
          $ref: '#/components/schemas/requestId'
        transactionState:
          $ref: '#/components/schemas/transactionState'
        responseStatus:
          $ref: '#/components/schemas/responseStatus'
        responseCode:
          $ref: '#/components/schemas/responseCode'
        responseMessage:
          $ref: '#/components/schemas/responseMessage'
        paymentMethodType:
          $ref: '#/components/schemas/paymentMethodType'
        captureMethod:
          $ref: '#/components/schemas/captureMethod'
        isCapture:
          $ref: '#/components/schemas/isCapture'
        captureTime:
          description: Timestamp when delayed capture payment is scheduled to be automatically captured, at which point it can no longer be edited or voided.
          type: string
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
        accountOnFile:
          $ref: '#/components/schemas/accountOnFile'
        originalTransactionId:
          $ref: '#/components/schemas/originalTransactionId'
        isVoid:
          $ref: '#/components/schemas/isVoid'
        transactionDate:
          $ref: '#/components/schemas/transactionTimestamp'
        approvalCode:
          $ref: '#/components/schemas/approvalCode'
        hostMessage:
          $ref: '#/components/schemas/hostMessage'
        isAmountFinal:
          $ref: '#/components/schemas/isAmountFinal'
        amount:
          $ref: '#/components/schemas/amount'
        cashBackAmount:
          $ref: '#/components/schemas/cashBackAmount'
        currency:
          $ref: '#/components/schemas/currency'
        remainingRefundableAmount:
          $ref: '#/components/schemas/remainingRefundableAmount'
        remainingAuthAmount:
          description: Monetary value of uncaptured, approved authorizations currently being held against the card for this transaction by a given Merchant.
          type: integer
          minimum: 1
          maximum: 999999999999
          format: int64
          example: 1234
        totalAuthorizedAmount:
          description: Specifies the monetary value of authorizations currently being held against the Card. For zero exponent currency codes (i.e. Japanese Yen) a virtual decimal of 2 is not expected.
          type: integer
          minimum: 1
          maximum: 999999999999
          format: int64
          example: 1234
        risk:
          $ref: '#/components/schemas/risk'
        merchantOrderNumber:
          $ref: '#/components/schemas/merchantOrderNumber'
        hostReferenceId:
          $ref: '#/components/schemas/hostReferenceId'
        statementDescriptor:
          $ref: '#/components/schemas/statementDescriptor'
        information:
          $ref: '#/components/schemas/information'
        merchant:
          $ref: '#/components/schemas/merchant'
        recurring:
          $ref: '#/components/schemas/recurring'
        installment:
          $ref: '#/components/schemas/installment'
        accountHolder:
          $ref: '#/components/schemas/accountHolder'
        shipTo:
          $ref: '#/components/schemas/shipTo'
        retailAddenda:
          $ref: '#/components/schemas/retailAddenda'
        restaurantAddenda:
          $ref: '#/components/schemas/restaurantAddenda'
        partialAuthorizationSupport:
          $ref: '#/components/schemas/partialAuthorizationSupport'
        balanceAuthorizationAmount:
          description: The amount returned by the issuer which indicates the balance left on the card.
          type: integer
          format: int64
          example: 12785
        requestedAuthorizationAmount:
          description: The authorized amount requested for either full or partial authorization by merchant.
          type: integer
          minimum: 1
          maximum: 999999999999
          format: int64
        partialAuthorization:
          description: Indicates that the issuer has provided the merchant an authorization for a portion of the amount requested. This service provides an alternative to receiving a decline when the available card balance is not sufficient to approve a transaction in full.
          type: boolean
        paymentRequest:
          $ref: '#/components/schemas/paymentRequest'
        sourceAccountInformation:
          $ref: '#/components/schemas/sourceAccountInformation'
        externalOrderReferenceNumber:
          description: The identifier that payment method returns after the order placed in their system.
          type: string
        transactionRoutingOverrideList:
          $ref: '#/components/schemas/transactionRoutingOverrideList'
        transactionProcessor:
          $ref: '#/components/schemas/transactionProcessor'
        multiCapture:
          $ref: '#/components/schemas/multiCapture'
        directPay:
          $ref: '#/components/schemas/directPay'
        paymentAuthenticationResult:
          $ref: '#/components/schemas/paymentAuthenticationResult'
        subMerchantSupplementalData:
          $ref: '#/components/schemas/subMerchantSupplementalData'
        mandate:
          $ref: '#/components/schemas/mandate'
        pointOfInteraction:
          $ref: '#/components/schemas/pointOfInteraction'
        extendedHostMessage:
          $ref: '#/components/schemas/hostMessage'
        extendedHostErrorCode:
          $ref: '#/components/schemas/extendedHostErrorCode'
        merchantDefined:
          $ref: '#/components/schemas/merchantDefined'
        authorizationPurpose:
          $ref: '#/components/schemas/authorizationPurpose'
    paymentPatch:
      description: Payment Update
      type: object
      properties:
        isCapture:
          $ref: '#/components/schemas/isCapture'
        captureMethod:
          $ref: '#/components/schemas/captureMethod'
        isVoid:
          $ref: '#/components/schemas/isVoid'
        amount:
          $ref: '#/components/schemas/amount'
        isTaxable:
          $ref: '#/components/schemas/isTaxable'
        taxAmount:
          $ref: '#/components/schemas/taxAmount'
        statementDescriptor:
          $ref: '#/components/schemas/statementDescriptor'
        gratuityAmount:
          $ref: '#/components/schemas/gratuityAmount'
        surchargeAmount:
          $ref: '#/components/schemas/surchargeAmount'
        subMerchantSupplementalData:
          $ref: '#/components/schemas/subMerchantSupplementalData'
        reversalReason:
          description: Codifies the explanation for an authorization of funds for a sales transaction to have an offsetting (reversal) authorization transaction before settlement occurs. The offset will release the hold of funds placed from the original authorization transaction.
          type: string
          enum:
            - NO_RESPONSE
            - LATE_RESPONSE
            - UNABLE_TO_DELIVER
            - CARD_DECLINED
            - MAC_NOT_VERIFIED
            - MAC_SYNC_ERROR
            - ZEK_SYNC_ERROR
            - SYSTEM_MALFUNCTION
            - SUSPECTED_FRAUD
    transactionState:
      description: Current state transaction is in. "Authorized" - transaction not yet captured. "Captured" - can no longer be augmented. "Closed" - payout process initiated.
      type: string
      readOnly: true
      enum:
        - AUTHORIZED
        - VOIDED
        - PENDING
        - DECLINED
        - CLOSED
        - ERROR
    refund:
      description: Input information for refund API calls
      type: object
      required:
        - merchant
      properties:
        merchant:
          $ref: '#/components/schemas/merchant'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
        accountOnFile:
          $ref: '#/components/schemas/accountOnFile'
        merchantOrderNumber:
          $ref: '#/components/schemas/merchantOrderNumber'
        statementDescriptor:
          $ref: '#/components/schemas/statementDescriptor'
        accountHolder:
          $ref: '#/components/schemas/accountHolder'
        paymentMethodType:
          $ref: '#/components/schemas/refundPaymentMethodType'
        retailAddenda:
          $ref: '#/components/schemas/retailAddenda'
        restaurantAddenda:
          $ref: '#/components/schemas/restaurantAddenda'
        paymentRequestId:
          $ref: '#/components/schemas/paymentRequestId'
        captureId:
          $ref: '#/components/schemas/captureId'
        subMerchantSupplementalData:
          $ref: '#/components/schemas/subMerchantSupplementalData'
        mandate:
          $ref: '#/components/schemas/mandate'
        pointOfInteraction:
          $ref: '#/components/schemas/pointOfInteraction'
        paymentMetadataList:
          type: array
          description: Payment Metadata List
          minItems: 0
          items:
            $ref: '#/components/schemas/paymentMetadata'
        merchantDefined:
          $ref: '#/components/schemas/merchantDefined'
    refundResponse:
      description: Response information for refund API calls
      type: object
      required:
        - requestId
        - transactionState
        - amount
        - currency
        - responseStatus
        - responseCode
        - responseMessage
      properties:
        transactionId:
          $ref: '#/components/schemas/transactionId'
        requestId:
          $ref: '#/components/schemas/requestId'
        transactionState:
          $ref: '#/components/schemas/transactionState'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        responseStatus:
          $ref: '#/components/schemas/responseStatus'
        responseCode:
          $ref: '#/components/schemas/responseCode'
        responseMessage:
          $ref: '#/components/schemas/responseMessage'
        transactionReferenceId:
          $ref: '#/components/schemas/transactionReferenceId'
        remainingRefundableAmount:
          $ref: '#/components/schemas/remainingRefundableAmount'
        approvalCode:
          $ref: '#/components/schemas/approvalCode'
        hostMessage:
          $ref: '#/components/schemas/hostMessage'
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
        accountOnFile:
          $ref: '#/components/schemas/accountOnFile'
        transactionDate:
          $ref: '#/components/schemas/transactionTimestamp'
        merchant:
          $ref: '#/components/schemas/merchant'
        statementDescriptor:
          $ref: '#/components/schemas/statementDescriptor'
        merchantOrderNumber:
          $ref: '#/components/schemas/merchantOrderNumber'
        accountHolder:
          $ref: '#/components/schemas/accountHolder'
        paymentMethodType:
          $ref: '#/components/schemas/refundPaymentMethodType'
        retailAddenda:
          $ref: '#/components/schemas/retailAddenda'
        restaurantAddenda:
          $ref: '#/components/schemas/restaurantAddenda'
        information:
          $ref: '#/components/schemas/information'
        hostReferenceId:
          $ref: '#/components/schemas/hostReferenceId'
        paymentRequest:
          $ref: '#/components/schemas/paymentRequest'
        transactionRoutingOverrideList:
          $ref: '#/components/schemas/transactionRoutingOverrideList'
        subMerchantSupplementalData:
          $ref: '#/components/schemas/subMerchantSupplementalData'
        mandate:
          $ref: '#/components/schemas/mandate'
        pointOfInteraction:
          $ref: '#/components/schemas/pointOfInteraction'
        recurring:
          $ref: '#/components/schemas/recurring'
        extendedHostMessage:
          $ref: '#/components/schemas/hostMessage'
        extendedHostErrorCode:
          $ref: '#/components/schemas/extendedHostErrorCode'
        merchantDefined:
          $ref: '#/components/schemas/merchantDefined'
    verification:
      description: Input verification information for API call
      type: object
      required:
        - merchant
        - currency
        - paymentMethodType
      properties:
        merchant:
          $ref: '#/components/schemas/merchant'
        currency:
          $ref: '#/components/schemas/currency'
        paymentMethodType:
          $ref: '#/components/schemas/verificationPaymentMethodType'
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
        accountOnFile:
          $ref: '#/components/schemas/accountOnFile'
        merchantOrderNumber:
          $ref: '#/components/schemas/merchantOrderNumber'
        recurringSequence:
          $ref: '#/components/schemas/recurringSequence'
        websiteShortMerchantUniversalResourceLocatorText:
          description: Provides textual information about data for the protocol for specifying addresses on the Internet (Universal Resource Locator - URL) for the merchant's organization.
          type: string
        accountHolder:
          $ref: '#/components/schemas/accountHolder'
        transactionRoutingOverrideList:
          $ref: '#/components/schemas/transactionRoutingOverrideList'
        browserInfo:
          $ref: '#/components/schemas/browserInfo'
        installment:
          $ref: '#/components/schemas/installment'
        subMerchantSupplementalData:
          $ref: '#/components/schemas/subMerchantSupplementalData'
        mandate:
          $ref: '#/components/schemas/mandate'
        paymentMetadataList:
          type: array
          description: Payment Metadata List
          minItems: 0
          items:
            $ref: '#/components/schemas/paymentMetadata'
    verificationResponse:
      description: Response information for verification API calls
      type: object
      required:
        - transactionId
        - requestId
        - currency
        - responseStatus
        - responseCode
        - responseMessage
        - hostMessage
        - paymentMethodType
      properties:
        transactionId:
          $ref: '#/components/schemas/transactionId'
        requestId:
          $ref: '#/components/schemas/requestId'
        currency:
          $ref: '#/components/schemas/currency'
        responseStatus:
          $ref: '#/components/schemas/responseStatus'
        responseCode:
          $ref: '#/components/schemas/responseCode'
        responseMessage:
          $ref: '#/components/schemas/responseMessage'
        hostMessage:
          $ref: '#/components/schemas/hostMessage'
        paymentMethodType:
          $ref: '#/components/schemas/verificationPaymentMethodType'
        merchant:
          $ref: '#/components/schemas/merchant'
        merchantOrderNumber:
          $ref: '#/components/schemas/merchantOrderNumber'
        transactionDate:
          $ref: '#/components/schemas/transactionTimestamp'
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
        accountOnFile:
          $ref: '#/components/schemas/accountOnFile'
        recurringSequence:
          $ref: '#/components/schemas/recurringSequence'
        risk:
          $ref: '#/components/schemas/risk'
        information:
          $ref: '#/components/schemas/information'
        accountHolder:
          $ref: '#/components/schemas/accountHolder'
        hostReferenceId:
          $ref: '#/components/schemas/hostReferenceId'
        approvalCode:
          $ref: '#/components/schemas/approvalCode'
        transactionRoutingOverrideList:
          $ref: '#/components/schemas/transactionRoutingOverrideList'
        verificationAuthenticationResult:
          $ref: '#/components/schemas/paymentAuthenticationResult'
        installment:
          $ref: '#/components/schemas/installment'
        subMerchantSupplementalData:
          $ref: '#/components/schemas/subMerchantSupplementalData'
        mandate:
          $ref: '#/components/schemas/mandate'
    transactionReference:
      description: Object for refund transaction reference
      type: object
      required:
        - transactionReferenceId
      properties:
        transactionReferenceId:
          $ref: '#/components/schemas/transactionReferenceId'
    expiry:
      description: Expiration date
      type: object
      writeOnly: true
      required:
        - month
        - year
      properties:
        month:
          $ref: '#/components/schemas/month'
        year:
          $ref: '#/components/schemas/year'
    month:
      description: The month of the expiration date
      type: integer
      format: int32
      minimum: 1
      maximum: 12
      example: 5
      writeOnly: true
    year:
      description: The year of the expiration date
      type: integer
      format: int32
      minLength: 4
      maxLength: 4
      minimum: 2018
      maximum: 2999
      example: 2020
      writeOnly: true
    panMonth:
      description: The month of the expiration date
      type: integer
      format: int32
      minimum: 1
      maximum: 12
      example: 5
      writeOnly: true
    panYear:
      description: The year of the expiration date
      type: integer
      format: int32
      minLength: 4
      maxLength: 4
      minimum: 2018
      maximum: 2999
      example: 2020
      writeOnly: true
    card:
      description: Card payment instrument
      type: object
      required:
        - accountNumber
      properties:
        accountNumberType:
          $ref: '#/components/schemas/accountNumberType'
        accountNumber:
          $ref: '#/components/schemas/accountNumber'
        expiry:
          $ref: '#/components/schemas/expiry'
        walletProvider:
          description: Identifies the organization who manages the e-wallet for a consumer. The actual e-wallet management responsibilities may include hosting, accessing, communicating, and/or updating all or some of the customer data associated with the e-wallet.  An E-wallet is an application that is created on the mobile device to interact with the Point of Sale (POS) device as a catalyst for a transaction. This value may be sent to the Firm (as in Visa Tokenization) or created by the Firm.
          type: string
          enum:
            - APPLE_PAY
            - GOOGLE_PAY
            - PAZE
        cardType:
          $ref: '#/components/schemas/cardType'
        cardTypeName:
          $ref: '#/components/schemas/cardTypeName'
        cvv:
          $ref: '#/components/schemas/cvv'
        originalNetworkTransactionId:
          $ref: '#/components/schemas/originalNetworkTransactionId'
        isBillPayment:
          $ref: '#/components/schemas/isBillPayment'
        maskedAccountNumber:
          $ref: '#/components/schemas/maskedAccountNumber'
        maskedCardNumber:
          description: Identifies a concealed number associated with the card number recognized by the Payment Networks. This is typically concealed by storing only the first 6 and or last 4 digits of the card number or some variation.
          type: string
          readOnly: true
        cardTypeIndicators:
          $ref: '#/components/schemas/cardTypeIndicators'
        accountUpdater:
          $ref: '#/components/schemas/accountUpdater'
        networkResponse:
          $ref: '#/components/schemas/networkResponse'
        authentication:
          $ref: '#/components/schemas/authentication'
        encryptionIntegrityCheck:
          $ref: '#/components/schemas/encryptionIntegrityCheck'
        unmaskedAccountNumber:
          $ref: '#/components/schemas/unmaskedAccountNumber'
        preferredPaymentNetworkNameList:
          $ref: '#/components/schemas/preferredPaymentNetworkNameList'
        merchantSalesChannelName:
          $ref: '#/components/schemas/merchantSalesChannelName'
        merchantPreferredRouting:
          $ref: '#/components/schemas/merchantPreferredRouting'
        cardTypeFunding:
          description: Codifies the funding source for a card payment transaction. This will support debit enablement to merchant during processing transaction. Sample values are CREDIT_CARD and DEBIT_CARD
          type: string
          enum:
            - DEBIT
            - CREDIT
        pieKeyId:
          description: Identifier for the key that corresponds to the encryption key used for Safetech page encryption. This is used as parameter for the getKey process used by the merchant as part of the Page Integrated Encryption. Page-Integrated Encryption encrypts sensitive user data in the browser, and allows that data to travel encrypted through intermediate application tiers.
          type: string
        piePhaseId:
          description: Identifier to denote the stage or point of the encryption process used for Safetech page encryption. This is used as parameter for the getKey process used by the merchant as part of the Page Integrated Encryption. Page-Integrated Encryption encrypts sensitive user data in the browser, and allows that data to travel encrypted through intermediate application tiers.
          type: string
        paymentTokens:
          type: array
          readOnly: true
          description: List of payment tokens for the transaction
          minItems: 0
          items:
            $ref: '#/components/schemas/paymentToken'
        paymentAuthenticationRequest:
          $ref: '#/components/schemas/paymentAuthenticationRequest'
        walletCardData:
          $ref: '#/components/schemas/walletCardData'
        encryptedPayload:
          $ref: '#/components/schemas/encryptedPayload'
    merchant:
      description: Information about the merchant
      type: object
      required:
        - merchantSoftware
      properties:
        merchantId:
          description: Identifier for the merchant account.
          type: string
          readOnly: true
          minLength: 8
          maxLength: 12
          example: '991234567890'
        merchantSoftware:
          $ref: '#/components/schemas/merchantSoftware'
        merchantCategoryCode:
          $ref: '#/components/schemas/merchantCategoryCode'
        merchantLogoUrl:
          description: Internet address of merchant logo applicable to some alternative payment methods.
          type: string
        softMerchant:
          $ref: '#/components/schemas/softMerchant'
        locationId:
          description: Identifies the merchant location in which card present transactions are accepted.
          type: string
          readOnly: true
    shipTo:
      description: Object containing information about the recipients
      type: object
      properties:
        shippingDescription:
          description: Description of shipping or delivery method
          type: string
          maxLength: 120
        shippingAddress:
          $ref: '#/components/schemas/address'
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          $ref: '#/components/schemas/email'
        mobile:
          $ref: '#/components/schemas/phone'
        phone:
          $ref: '#/components/schemas/phone'
        firstName:
          $ref: '#/components/schemas/firstName'
        lastName:
          $ref: '#/components/schemas/lastName'
        middleName:
          $ref: '#/components/schemas/middleName'
    installment:
      description: Object containing information in the file
      type: object
      properties:
        installmentCount:
          description: "Indicates which payment, out of total number of payments to be made. "
          type: integer
          minimum: 1
          maximum: 99
        totalInstallments:
          description: Indicates the total number of installments payments that will be processed.
          type: integer
          minimum: 1
          maximum: 999
        numberOfDeferrals:
          $ref: '#/components/schemas/numberOfDeferrals'
        planId:
          $ref: '#/components/schemas/planId'
    amount:
      description: Total monetary value of the payment including all taxes and fees.
      type: integer
      format: int64
      minimum: 0
      maximum: 999999999999
      example: 1234
    isTaxable:
      description: Indicates whether tax has been added to the payment.
      type: boolean
    currency:
      description: Describes the currency type of the transaction
      type: string
      enum:
        - USD
        - EUR
        - GBP
        - AUD
        - NZD
        - SGD
        - CAD
        - JPY
        - HKD
        - KRW
        - TWD
        - MXN
        - BRL
        - DKK
        - NOK
        - ZAR
        - SEK
        - CHF
        - CZK
        - PLN
        - TRY
        - AFN
        - ALL
        - DZD
        - AOA
        - ARS
        - AMD
        - AWG
        - AZN
        - BSD
        - BDT
        - BBD
        - BYN
        - BZD
        - BMD
        - BOB
        - BAM
        - BWP
        - BND
        - BGN
        - BIF
        - BTN
        - XOF
        - XAF
        - XPF
        - KHR
        - CVE
        - KYD
        - CLP
        - CNY
        - COP
        - KMF
        - CDF
        - CRC
        - HRK
        - DJF
        - DOP
        - XCD
        - EGP
        - ETB
        - FKP
        - FJD
        - GMD
        - GEL
        - GHS
        - GIP
        - GTQ
        - GYD
        - HTG
        - HNL
        - HUF
        - ISK
        - INR
        - IDR
        - ILS
        - JMD
        - KZT
        - KES
        - LAK
        - LBP
        - LSL
        - LRD
        - MOP
        - MKD
        - MGA
        - MWK
        - MYR
        - MVR
        - MRU
        - MUR
        - MDL
        - MNT
        - MAD
        - MZN
        - MMK
        - NAD
        - NPR
        - ANG
        - PGK
        - NIO
        - NGN
        - PKR
        - PAB
        - PYG
        - PEN
        - PHP
        - QAR
        - RON
        - RWF
        - SHP
        - WST
        - STN
        - SAR
        - RSD
        - SCR
        - SLL
        - SBD
        - SOS
        - LKR
        - SRD
        - SZL
        - TJS
        - TZS
        - THB
        - TOP
        - TTD
        - UGX
        - UAH
        - AED
        - UYU
        - UZS
        - VUV
        - VND
        - YER
        - ZMW
    recurringSequence:
      description: Identifies whether payment is the first in a series of recurring payments or a subsequent payment. Required for recurring billing.
      type: string
      enum:
        - FIRST
        - SUBSEQUENT
    initiatorType:
      description: Describes the initiator of the transaction for the stored credential framework (MIT/CIT)
      type: string
      default: CARDHOLDER
      example: CARDHOLDER
      enum:
        - CARDHOLDER
        - MERCHANT
    accountHolderReferenceId:
      description: Merchant defined identifier for a consumer
      type: string
      minLength: 0
      maxLength: 25
      example: AB12345678
      writeOnly: true
    electronicCommerceIndicator:
      description: Describes the Electronic Commerce Indicator used in cardholder authentication on a network token
      type: string
      pattern: ^\d{1,2}$
      example: '05'
    transactionId:
      description: Identifier of a transaction.
      type: string
      minLength: 4
      maxLength: 40
      example: 5a4c3500-4017-11e9-b649-8de064224186
    originalNetworkTransactionId:
      description: When submitting a merchant-initiated payment, submit the networkTransactionId received from the first payment in this field.
      type: string
      minLength: 4
      maxLength: 40
      example: 1c4b1100-4017-11e9-b649-8de064224186
    transactionReferenceId:
      description: Reference to an existing payment.
      type: string
      minLength: 4
      maxLength: 40
      example: 6b4c7800-4017-11e9-b649-8de064224186
    responseCode:
      description: Short explanation for response status
      type: string
      minLength: 2
      maxLength: 50
    responseMessage:
      description: Long explanation of response code
      type: string
    3dsCode:
      description: 3-D Secure authentication response code
      type: string
      readOnly: true
      minLength: 1
      maxLength: 50
    3dsMessage:
      description: 3-D Secure authentication response message
      type: string
      readOnly: true
    resultCode:
      description: Token result code
      type: string
      readOnly: true
      minLength: 2
      maxLength: 50
    resultMessage:
      description: Token result message
      type: string
    approvalCode:
      description: Approval code provided by the issuing bank.
      type: string
      readOnly: true
      maxLength: 50
      example: '54321'
    networkResponse:
      description: Response information from payment network
      type: object
      readOnly: true
      properties:
        addressVerificationResult:
          description: Indicates which aspects of address included in payment request match according to issuer.
          type: string
          readOnly: true
          enum:
            - ADDRESS_MATCH
            - ADDRESS_POSTALCODE_MATCH
            - NAME_ADDRESS_MATCH
            - NAME_MATCH
            - NAME_POSTALCODE_MATCH
            - NO_MATCH
            - NOT_AVAILABLE
            - NOT_REQUESTED
            - NOT_VERIFIED
            - POSTALCODE_MATCH
            - SERVICE_NOT_AVAILABLE_RETRY
            - SERVICE_NOT_SUPPORTED
        addressVerificationResultCode:
          description: Indicates the address verification result code (e.g. Z = zip code match, A = address match).
          type: string
        additionalData:
          $ref: '#/components/schemas/additionalData'
        banknetReferenceNumber:
          description: Identifies the number assigned by MasterCard to each authorization message between a card acceptor and an issuer.
          type: string
        bankNetDate:
          description: Designates the year (YYYY), month (MM), and day (DD) the transaction was authorized at MasterCard.
          type: string
          format: date
          example: '2022-10-30'
        cardVerificationResult:
          description: Indicates if the card verification values (CVV/CV2) match.
          type: string
          readOnly: true
          enum:
            - MATCH
            - NOT_PRESENT
            - NOT_PROCESSED
            - NOT_SUPPORTED
            - NO_MATCH
        cardVerificationResultCode:
          description: Indicates whether card holder authentication values matched or not. (e.g., M = CVV2 matched, N = CVV2 did not match).
          type: string
        emailVerificationResult:
          description: Provides the textual detail information of the issuer's authorization response code to a merchant when verifying the cardholder's email address to help authenticate transactions and prevent fraud. This is Amex only field.
          type: string
          enum:
            - MATCH
            - NO_MATCH
            - NOT_VERIFIED
            - SERVICE_NOT_AVAILABLE_RETRY
            - SERVICE_NOT_SUPPORTED
        emailVerificationResultCode:
          description: Indicates whether the account holder's email address matched or not. This is Amex only field.
          type: string
        last4CardNumber:
          description: Masked Card Number
          type: string
        networkTransactionId:
          description: A unique identifier for the transaction returned by the issuer. For Mastercard, this includes the    BanknetReferenceNumber.
          type: string
          readOnly: true
        networkAccountUpdater:
          $ref: '#/components/schemas/networkResponseAccountUpdater'
        paymentAccountReference:
          $ref: '#/components/schemas/par'
        phoneVerificationResult:
          description: Indicates whether the account holder's phone number matched or not. This is an Amex only field.
          type: string
          enum:
            - MATCH
            - NO_MATCH
            - NOT_VERIFIED
            - SERVICE_NOT_AVAILABLE_RETRY
            - SERVICE_NOT_SUPPORTED
        phoneVerificationResultCode:
          description: Provides the textual detail information of the issuer's authorization response code to a merchant when verifying the cardholder's billing telephone number to help authenticate transactions and prevent fraud. This is Amex only field.
          type: string
        tokenRequestorIdentifier:
          description: Identifier for the merchant given by the token requestor
          type: string
          example: '98765432101'
        tokenAssuranceScore:
          description: Indicates assurance level associated with the token
          type: string
          readOnly: true
          example: '0'
        tokenStatus:
          description: Indicates the status of the token. For Visa - A= Active for payment, I = Inactive for payment, S= Temporarily suspended for payments, D = Permanently deactivated for payments.
          type: string
          readOnly: true
          example: A
        networkResponseCode:
          $ref: '#/components/schemas/networkResponseCode'
        debitTraceNumber:
          description: Identifies a reference number generated at transaction time.
          type: string
          readOnly: true
        billingVerification:
          $ref: '#/components/schemas/billingVerification'
        pointOfSaleDataCode:
          description: Code to identify terminal capability, security data, and specific conditions present at the time a transaction occurred at the point of sale.
          type: string
    networkResponseAccountUpdater:
      description: Account update information as returned by the network
      type: object
      properties:
        accountStatus:
          description: Identifies response code as defined by network. "A" PAN or PAN/Expiry change "E" Expiry change only "C" Closed account "Q" Contact cardholder
          type: string
          readOnly: true
          enum:
            - A
            - C
            - E
            - Q
        replacementCode:
          description: Indicates if replacement of any information has occurred
          type: boolean
          readOnly: true
        networkResponseCode:
          $ref: '#/components/schemas/networkResponseCode'
    additionalData:
      description: Additional information received from the payment network.
      type: object
      properties:
        acquirerReferenceNumber:
          description: Contains identifier generated by the acquirer.  For Visa, this is the ARN.  For Mastercard, this is the ARD.
          type: string
          readOnly: true
          maxLength: 30
          example: '1234567890123456'
        acquirerName:
          description: The label of the entity acting as the acquiring bank through the payment processing network during settlement to the cardholders bank (the issuer). This may be different from Firm in Gateway solution such as Stone and Elavon.
          type: string
        authorizationDate:
          description: The local date on which the authorization occurred (MMDD).
          type: string
          readOnly: true
        downgradeReasonCode:
          $ref: '#/components/schemas/downgradeReasonCode'
        electronicCommerceSecurityLevelCode:
          description: Contains the electronic commerce indicators representing the security level and cardholder authentication associated with the transaction.
          type: string
          readOnly: true
        electronicCommerceIndicator:
          $ref: '#/components/schemas/electronicCommerceIndicator'
        marketSpecificData:
          description: Indicates Visa's classification of the merchant's industry.
          type: string
          readOnly: true
        merchantAdviceCode:
          description: 'Indicates the reason for declining a MasterCard or Visa transaction and the actions merchants can take.  Valid values: 01?New account information available. Obtain new account information.  02?Try again later. Recycle transaction in 72 hours.  03?Do not try again. Obtain another type of payment from customer.  04?Token requirements not fulfilled for this token type. Resubmit with proper cryptography.  21?Do not try again. Issuer has blocked recurring payment transaction.  22?Merchant does not qualify for product code. Obtain another type of payment from customer.  24?Retry after 1 hour (Mastercard use only)  25?Retry after 24 hours (Mastercard use only)  26?Retry after 2 days (Mastercard use only)  27?Retry after 4 days (Mastercard use only)  28?Retry after 6 days (Mastercard use only)  29-Retry after 8 days (Mastercard use only)  30?Retry after 10 days (Mastercard use only)  40 ? Non-reloadable prepaid card (Mastercard use only) 41?Single-use virtual card number (Mastercard use only) 43 - Consumer multi-use virtual card number (Mastercard use only)'
          type: string
          readOnly: true
        originalElectronicCommerceIndicator:
          description: Contains the original UCAF Collection Indicator sent by the acquirer in the Authorization Request message before the Identity Check downgrade or MDES SLI modification occurred.
          type: string
          readOnly: true
        originalElectronicCommerceSecurityLevelCode:
          description: Contains the original Security Level Indicators sent by the acquirer in the Authorization Request message before the Identity Check downgrade or MDES SLI modification occurred.
          type: string
          readOnly: true
        processingCode:
          description: 'A constructed data element that is composed of three fields: 1. Transaction type code - describes the specific transaction type; 2. Account type code 1 - describes the account type affected for debits ("from"); 3. Account type code 2 - describes the account type affected for credits ("to"). Aligns to ISO 8583 field 3.'
          type: string
          readOnly: true
        productId:
          description: 'Issuer-supplied product identifier. Sample Visa values: A - Visa Traditional/NA C - Visa Signature I - Visa Commerce L - Visa Corporate Sample MasterCard values: MCF - MasterCard Fleet Card MCW - World MasterCard MDS - Debit MasterCard MCO - MasterCard Corporate.'
          type: string
          readOnly: true
        posConditionCode:
          description: Additional information about the conditions present when the transaction occurred. Examples include Normal Transaction, Card Not Present, Suspicious Transaction.
          type: string
          readOnly: true
        posEntryModeChanged:
          description: If the entry mode has changed, the Issuer will respond with the 1-byte POS Entry Mode Change (Y)
          type: boolean
          readOnly: true
        posEnvironment:
          description: Identifies the type of periodic billing provided to the payment network in the authorization request.
          type: string
          readOnly: true
        posEntryMode:
          description: Indicates how payment information is captured during the exchange of goods and services at the time of purchase.
          type: string
          readOnly: true
        retrievalReferenceNumber:
          description: A unique number assigned to each payment by the payment network.
          type: string
          readOnly: true
        returnAci:
          description: Authorization Characteristics Indicator (ACI) provided by the payment networks.
          type: string
          readOnly: true
        responseReasonCode:
          description: Indicates whether authorization request is approved or declined by the issuer.
          type: string
          readOnly: true
        systemTraceAuditNumber:
          description: The System Trace Audit Number (STAN) is assigned by a transaction originator to assist in identifying a card transaction. The STAN remains unchanged for the life of the card transaction.
          type: string
          readOnly: true
        validationCode:
          description: Result code when CAVV is sent in payment request.
          type: string
          readOnly: true
        authorizationResponseCategory:
          description: 'Codifies the Firm''s high level grouping of the Payment Network Authorization Response Code to provide a consistent response to the merchant regardless of the payment network.  valid Values: 1 ? Issuer will never approve  2 ? Issuer cannot approve at this time  3 ? Issuer cannot approve with these details  4 ? Generic response codes  N ? Not available  A ? Approved  X ? Not supported MOP'
          type: string
    address:
      description: Address Object
      type: object
      writeOnly: true
      properties:
        line1:
          description: First line of street address.
          type: string
          maxLength: 40
          pattern: ^[^<>{}]*$
          example: 123 Some Street
        line2:
          description: Second line of street address.
          type: string
          maxLength: 40
          pattern: ^[^<>{}]*$
          example: Apartment 3b
        city:
          description: Name of municipality.
          type: string
          maxLength: 40
          pattern: '[\p{L}''. ]*'
          example: Nowhere
        state:
          description: Name of state or province.
          type: string
          minLength: 2
          maxLength: 3
          pattern: '[A-Za-z]*'
          example: FL
        postalCode:
          description: The portion of a party?s address that is the encoded representation of a geographic area to facilitate mail delivery services.
          type: string
          minLength: 3
          maxLength: 12
          pattern: ^[a-zA-Z0-9]+(-|\s?)[a-zA-Z0-9]+$
          example: '99999'
        countryCode:
          description: The country code of the address based on Alpha 3 ISO standards.
          type: string
          maxLength: 3
          format: ^[A-Za-z]*$
          example: USA
    responseStatus:
      description: Indicates whether API request resulted in success, error, or denial.
      type: string
      enum:
        - SUCCESS
        - DENIED
        - ERROR
    messages:
      description: Contains information on responses, errors, and informational messages.
      type: object
      required:
        - responseStatus
        - responseCode
      properties:
        responseStatus:
          $ref: '#/components/schemas/responseStatus'
        responseCode:
          $ref: '#/components/schemas/responseCode'
        responseMessage:
          $ref: '#/components/schemas/responseMessage'
        validationErrors:
          type: array
          description: Information about errors occurred in transaction validation
          minItems: 0
          items:
            $ref: '#/components/schemas/validationMessage'
        information:
          $ref: '#/components/schemas/information'
    information:
      description: A list of informational messages
      type: object
      properties:
        code:
          description: Codifies the instruction provided in the application
          type: string
          maxLength: 40
        message:
          description: Long explanation of the instruction provided in the application
          type: string
          maxLength: 120
    purchaseOrderNumber:
      description: The purchase order number provided by the consumer.
      type: string
      pattern: ^[A-Za-z0-9.$@&/\\-]*$
      maxLength: 17
    merchantCategoryCode:
      description: MCC or Merchant Category Code. Defaults to MCC configured at the merchant profile level. Some configurations allow multiple MCC's under a single Merchant ID. Sending an MCC not configured will result in an error.
      type: string
      pattern: ^\d{4}$
      minLength: 4
      maxLength: 4
      example: '4819'
    agreementId:
      description: System generated value used to uniquely identify a set of statements presented to the customer whom has acknowledged the acceptance in order to use the online systems.
      type: string
      minLength: 1
      maxLength: 100
    paymentAgreementExpiryDate:
      description: Designates the year (YYYY), month (MM), and day (D) at which the agreement with the payer to process payments expires. Used with recurring transaction.
      type: string
      format: date
      example: '2020-09-20'
    email:
      description: Optional value for merchants to provide for a transaction
      type: string
      minLength: 6
      maxLength: 60
      example: john.doe@email.xyz
      writeOnly: true
    cardTypeIndicators:
      description: The card type indicators provide additional information about the card. For example, if the card is a prepaid card and thus less likely to         support recurring payments or if the card is a healthcare or commercial  card.
      type: object
      readOnly: true
      properties:
        issuanceCountryCode:
          $ref: '#/components/schemas/countryCodeText'
        isLevel3Eligible:
          description: Whether the card is eligible for Level 3 fields
          type: boolean
          readOnly: true
        cardTypeCategory:
          $ref: '#/components/schemas/paymentBrandCardTypeCode'
        cardIssuerName:
          $ref: '#/components/schemas/cardIssuerName'
        isDurbinRegulated:
          description: Whether the card is regulated as per the Durbin Amendment
          type: boolean
          readOnly: true
        cardProductName:
          $ref: '#/components/schemas/cardProductName'
        cardProductTypes:
          type: array
          description: List of card products applicable for the account number.
          minItems: 0
          items:
            type: string
            enum:
              - COMMERCIAL
              - PAYROLL
              - HEALTHCARE
              - AFFLUENT_CATEGORY
              - SIGNATURE_DEBIT
              - PINLESS_DEBIT
              - PREPAID_RELOADABLE
        prepaidCardCategoryCode:
          description: Codifies the high level grouping of prepaid payment card supported by payment processing system.
          type: string
          enum:
            - RELOADABLE
            - NON_RELOADABLE
            - NOT_PREPAID
        combinationCardCode:
          description: Codifies the card's ability to support both CREDIT and DEBIT payment transactions under the same Primary Account Number (PAN) as chosen by the consumer. Some subscription merchants can also decide to route transactions on one modality and retrial on the second one, upon consumer acknowledge/approval.
          type: string
          enum:
            - CREDIT_AND_PREPAID
            - CREDIT_AND_DEBIT
            - NOT_A_COMBOCARD
        nonMoneyTransferPushFundsCrossBorderIndicator:
          description: Indicates whether the payment card is used for Non-Money Transfer and Push Fund service and cross border transaction .
          type: boolean
        nonMoneyTransferPushFundsDomesticIndicator:
          description: Indicates whether the payment card is used for Non-Money Transfer and Push Fund service and domestic transaction .
          type: boolean
        nonMoneyTransferFastFundsCrossBorderIndicator:
          description: Indicates whether the payment card is used for Non-Money Transfer and Fast Fund service and cross border transaction .
          type: boolean
        nonMoneyTransferFastFundsDomesticIndicator:
          description: Indicates whether the payment card is used for Non-Money Transfer and Fast Fund service and domestic transaction .
          type: boolean
        onlineGamblingFastFundsCrossBorderIndicator:
          description: Indicates whether the payment card is used for online gambling and Fast Fund service and cross border transaction .
          type: boolean
        onlineGamblingFastFundsDomesticIndicator:
          description: Indicates whether the payment card is used for online gambling and Fast Fund service and domestic transaction .
          type: boolean
        onlineGamblingPushFundsCrossBorderIndicator:
          description: Indicates whether the payment card is used for online gambling and Push Fund service and cross border transaction .
          type: boolean
        onlineGamblingPushFundsDomesticIndicator:
          description: Indicates whether the payment card is used for online gambling and Push Fund service and domestic transaction .
          type: boolean
        moneyTransferFastFundsCrossBorderIndicator:
          description: Indicates whether the payment card is used for money transfer and Fast Fund service and cross border transaction .
          type: boolean
        moneyTransferFastFundsDomesticIndicator:
          description: Indicates whether the payment card is used for money transfer and Fast Fund service and domestic transaction .
          type: boolean
        moneyTransferPushFundsCrossBorderIndicator:
          description: Indicates whether the payment card is used for money transfer and Push Fund service and cross border transaction .
          type: boolean
        moneyTransferPushFundsDomesticIndicator:
          description: Indicates whether the payment card is used for money transfer and Push Fund service and domestic transaction .
          type: boolean
    maskedAccountNumber:
      description: Identifies a concealed number associated with the card number recognized by various payment systems. This is typically concealed by storing only the first 6 and/or last 4 digits of the payment account number or some variation.
      type: string
      readOnly: true
      example: 123456XXXXXX9876
    authenticationValue:
      description: 3DS Base 64 cryptogram obtained prior to payment request.
      type: string
      format: base64
      maxLength: 56
      writeOnly: true
    authentication:
      description: The authentication object allows you to opt in to additional security features like 3-D Secure
      type: object
      properties:
        authenticationId:
          $ref: '#/components/schemas/authenticationId'
        threeDS:
          $ref: '#/components/schemas/threeDS'
        electronicCommerceIndicator:
          $ref: '#/components/schemas/electronicCommerceIndicator'
        authenticationValueResponse:
          $ref: '#/components/schemas/authenticationValueResponse'
        tokenAuthenticationResult:
          $ref: '#/components/schemas/tokenAuthenticationResult'
        tokenAuthenticationValue:
          description: Contains authentication value received from Payment Networks for network token transactions
          type: string
          maxLength: 80
          format: base64
          writeOnly: true
        SCAExemptionReason:
          description: Indicates the justification why a transaction does not have to meet Strong Customer Authentication (SCA) requirements.
          type: string
          enum:
            - TRUSTED_MERCHANT
            - SECURE_CORPORATE_PAYMENT
            - TRANSACTION_RISK_ANALYSIS
            - LOW_VALUE_PAYMENT
            - MERCHANT_INITIATED_TRANSACTION
            - RECURRING_PAYMENT
            - SCA_DELEGATION
    threeDS:
      description: Contains information about payer authentication using 3-D Secure authentication
      type: object
      properties:
        authenticationValue:
          $ref: '#/components/schemas/authenticationValue'
        authenticationTransactionId:
          description: Identifier provided by the merchant plug in system (MPI) or scheme directory server during payer authentication using 3-D Secure authentication.
          type: string
        threeDSProgramProtocol:
          description: Indicates 3-D Secure program protocol used in the transaction.
          type: string
          minLength: 0
          maxLength: 20
          example: '2'
        version1:
          $ref: '#/components/schemas/version1'
        version2:
          $ref: '#/components/schemas/version2'
    version1:
      description: Contains information about payer authentication using 3-D Secure authentication version 1
      type: object
      properties:
        threeDSVEResEnrolled:
          description: Contains value returned in the 'enrolled' field of the Verify Enrollment Response (VERes) message from the card scheme's Directory Server. Y=Authentication successful;  N=Authentication failed; U=Authentication unavailable;  A=Attempted authentication
          type: string
          enum:
            - 'Y'
            - 'N'
            - U
            - A
        threeDSPAResStatus:
          description: Contains value returned in the transaction status field of the Payer Authentication Response (PARes) message from the card Issuer's Access Control Server (ACS). Y=Authentication successful ; N=Authentication failed ; U=Authentication unavailable ; A=Attempted authentication
          type: string
          enum:
            - 'Y'
            - 'N'
            - U
            - A
    version2:
      description: Contains information about payer authentication using 3-D Secure authentication version 2
      type: object
      properties:
        threeDSTransactionStatus:
          $ref: '#/components/schemas/threeDSTransactionStatus'
        threeDSTransactionStatusReasonCode:
          description: Contains code indicating the reason for the transaction status in threeDSTransactionStatus.
          type: string
          maxLength: 2
          example: '01'
    transactionTimestamp:
      description: Designates the hour, minute, seconds and date (if timestamp) or year, month, and date (if date) when the transaction (monetary or non-monetary) occurred.
      type: string
    timestampReturned:
      description: Provides a timestamp (UTC). Designates the hour (hh), minute (mm), seconds (ss) and date (if timestamp) or year (YYYY), month (MM), and day (DD) (if date)
      type: string
      readOnly: true
      example: '2018-12-21T09:30:15.987Z'
    requestId:
      description: Merchant identifier for the request. The value must be unique.
      type: string
      maxLength: 40
      example: 10cc0270-7bed-11e9-a188-1763956dd7f6
    statementDescriptor:
      description: "Merchant name to appear on account holder statement. If not provided, defaults to merchant profile descriptor value.  To send both company identifier and transaction-specific information, use one of these formats: Option 1 ? 3-byte company identifier * 18-byte descriptor (example: XYZ*PAYMENT1OF3) Option 2 ? 7-byte company identifier * 14-byte descriptor (example: XYZCOMP*PAYMENT1OF3) Option 3 ? 12-byte company identifier * 9-byte descriptor (example: XYZCOMPANY1*PAYMT1OF3)"
      type: string
      minLength: 4
      maxLength: 100
    ipAddress:
      description: IP Address from where the transaction is originating
      type: string
      minLength: 0
      maxLength: 40
      example: 127.0.0.1
      writeOnly: true
    merchantReturnUrl:
      description: Information on where consumer needs to be redirected after payment process completion. Ensure that the URL begins with 'https'.
      type: string
      readOnly: true
      minLength: 0
      maxLength: 120
      example: https://www.merchantecommerce.test
    redirectUrl:
      description: Information on where consumer needs to be redirected for payment process completion. Ensure that the URL begins with 'https'
      type: string
      readOnly: true
      minLength: 0
      maxLength: 120
      example: https://www.examplebank.test/authentication
    qrCodeUrl:
      description: Information on where consumer needs to be redirected for payment process completion. Ensure that the URL begins with either 'http' or 'https'
      type: string
      readOnly: true
      minLength: 0
      maxLength: 120
    barcodeUrl:
      description: A reference to a web resource on the internet specifying its location on a computer network and a mechanism for retrieving.  In this context, this is the URL provided by merchant for the barcode. Customer can complete the transaction by paying the transaction amount using barcode from the link.
      type: string
      readOnly: true
      minLength: 0
      maxLength: 120
      example: https://apac-api.merchant.jpmorgan.com/v1/payments/transactions/tran_DELdydqcVH5vq/barcode
    pdfUrl:
      description: A reference to a web resource on the internet specifying its location on a computer network and a mechanism for retrieving.  In this context, this is the URL provided by merchant for the payment document in PDF format. The document contain payment instruction to pay at store to complete the transaction.
      type: string
      readOnly: true
      minLength: 0
      maxLength: 120
      example: https://apac-api.merchant.jpmorgan.com/v1/payments/transactions/tran_DELdydqcVH5vq/pdf
    processorStatus:
      description: Indicates the payment status from the processor. Examples include COMPLETED ,PAID, OVERPAID,ERRORED. Brazil only.
      type: string
      readOnly: true
      enum:
        - INITIATED
        - COMPLETED
        - REDIRECTED
        - RETURNED
        - UNDERPAID
        - OVERPAID
        - PAID
        - VOIDED
        - ERROR
        - EXPIRED
    paidAmount:
      description: Actual amount paid.
      type: string
    paidDate:
      description: Date and time in which the voucher or ticket was paid.
      type: string
      example: '2018-12-21T09:30:15.987Z'
    risk:
      description: Response information for transactions
      type: object
      properties:
        requestFraudScore:
          description: Indicates the true/false value of whether or not the transaction need to be assessed for fraud check.
          type: boolean
        transactionRiskScore:
          $ref: '#/components/schemas/transactionRiskScore'
        tokenRiskScore:
          $ref: '#/components/schemas/tokenRiskScore'
        riskReasonCode:
          description: Codifies adverse action reason associated with the Risk Index Score for the transaction. This reason can be given with a adverse decision made using the Risk Index Score.
          type: string
          readOnly: true
          minLength: 0
          maxLength: 3
          example: '9'
    transactionRiskScore:
      description: Risk score for transaction
      type: integer
      minimum: 0
      maximum: 100
      example: 42
    tokenRiskScore:
      description: Risk score for token
      type: integer
      minimum: 0
      maximum: 100
      example: 42
    par:
      description: A unique identifier associated with a specific cardholder primary account number (PAN) used to link a payment account represented by that PAN to affiliated payment tokens. This 29 character identification number can be used in place of sensitive consumer identification fields, and transmitted across the payments ecosystem to facilitate consumer identification.
      type: string
      minLength: 0
      maxLength: 29
      example: VI019876543210987654321098765
    authenticationValueResponse:
      description: Returned when more information about authentication is received from the  network
      type: object
      readOnly: true
      properties:
        code:
          $ref: '#/components/schemas/3dsCode'
        message:
          $ref: '#/components/schemas/3dsMessage'
    hostMessage:
      description: Message received from Issuer, network or processor. Can be blank
      type: string
    phone:
      description: Phone number in ITU-T E.164 format. Country code and phone number (subscriber number) are mandatory values
      type: object
      writeOnly: true
      required:
        - phoneNumber
      properties:
        countryCode:
          description: Telephone country code.
          type: integer
          minimum: 1
          maximum: 999
          example: 1
        phoneNumber:
          description: Phone number.
          type: string
          maxLength: 12
          writeOnly: true
    validationMessage:
      description: Object containing information about transaction validation
      type: object
      properties:
        code:
          $ref: '#/components/schemas/code'
        message:
          $ref: '#/components/schemas/message'
        entity:
          $ref: '#/components/schemas/entity'
    code:
      description: Short informative code about error
      type: string
    message:
      description: Long informative message about error
      type: string
    entity:
      description: The moniker given to the module or program where the error generated.
      type: string
    merchantSoftware:
      description: Contains information related to the merchant software
      type: object
      required:
        - companyName
        - productName
      properties:
        companyName:
          description: Company name of software integrated to this API. If merchant is directly integrated, send "JPMC."
          type: string
          maxLength: 256
          pattern: ^[^<>{}]*$
          example: Payment Company
        productName:
          description: The name of the product used for marketing purposes from a customer perspective. I. e. what the customer would recognize.
          type: string
          maxLength: 256
          pattern: ^[^<>{}]*$
          example: Application Name
        version:
          description: Designates the unique state of computer software as it is developed and released. The version identifier can be a word, or a number, or both.
          type: string
          maxLength: 50
          pattern: ^[^<>{}]*$
          example: '1.235'
        softwareId:
          description: Unique identifier assigned by Merchant Services at time of integration testing.
          type: string
    panExpiry:
      description: Contains expiry for masked PAN if received from network
      type: object
      readOnly: true
      properties:
        month:
          $ref: '#/components/schemas/panMonth'
        year:
          $ref: '#/components/schemas/panYear'
    accountOnFile:
      description: Indicates whether payment method is stored by merchant. Possible values:STORED - Use if already stored and current payment is either cardholder-initiated stored payment or subsequent recurring or installment transaction. NOT_STORED - Use when payment method obtained for purpose of single payment. TO_BE_STORED - Use when consumer is intentionally storing their payment method after this payment for subsequent recurring or stored payments.
      type: string
      example: NOT_STORED
      enum:
        - NOT_STORED
        - STORED
        - TO_BE_STORED
    isAmountFinal:
      description: Indicates if the amount is final and will not change
      type: boolean
    numberOfDeferrals:
      description: The number of months an installment payment can be postponed or suspended. See documentation for regional requirements.
      type: integer
      minimum: 0
      maximum: 99
    planId:
      description: Contains the payment plan identifier.
      type: string
      maxLength: 50
      example: BANORTE_WITHOUT_INTEREST
    cardTypeName:
      description: Name of the payment network.
      type: string
      readOnly: true
      maxLength: 40
      example: VISA
      enum:
        - VISA
        - MASTERCARD
        - AMERICAN_EXPRESS
        - DISCOVER
        - JCB
        - DINERS_CLUB
        - CHINA_UNION_PAY
        - CHASENET_CREDIT
        - CHASENET_SIGNATURE_DEBIT
        - INTERNATIONAL_MAESTRO
        - STAR_PINLESS
        - PULSE_PINLESS
        - EFTPOS_PINLESS
        - ACCEL_PINLESS
        - NYCE_PINLESS
        - VISA_RESTRICTED_DEBIT
        - MASTERCARD_RESTRICTED_DEBIT
    cardType:
      description: Abbreviation of card name
      type: string
      readOnly: true
      maxLength: 10
      example: VI
      enum:
        - VI
        - MC
        - AX
        - DI
        - JC
        - DC
        - CC
        - CZ
        - CR
        - IM
        - SP
        - PP
        - EP
        - AP
        - NP
        - VR
        - MR
    healthCheckResource:
      description: Contains health check information about a resource
      type: object
      properties:
        status:
          description: General status of all resources
          type: string
          enum:
            - PASS
            - FAIL
            - WARN
          example: PASS
    dueDate:
      description: Date payment is due by
      type: string
      format: date
      example: '2020-09-20'
    boleto:
      description: Boleto payment information
      type: object
      deprecated: true
      required:
        - bankCode
        - type
        - uniqueNumber
        - dueDate
        - paidAmount
        - paidDate
        - documentNumber
        - ticketInstructions
      properties:
        bankCode:
          description: Indicates the bank issuing the Boleto
          type: string
          enum:
            - JPM
        type:
          description: Boleto type of Duplicata Mercantil or Boleto de Proposta
          type: string
          enum:
            - DM
            - BDP
        uniqueNumber:
          description: Number that uniquely identifies a Boleto for an account
          type: string
          minLength: 1
          maxLength: 120
        dueDate:
          $ref: '#/components/schemas/dueDate'
        paidAmount:
          $ref: '#/components/schemas/paidAmount'
        paidDate:
          $ref: '#/components/schemas/paidDate'
        documentNumber:
          description: Ticket identifier
          type: string
          minLength: 1
          maxLength: 16
        ticketInstructions:
          description: Ticket instructions
          type: string
          minLength: 1
          maxLength: 256
          example: Pay to maturity
        redirectUrl:
          $ref: '#/components/schemas/redirectUrl'
        qrCodeUrl:
          $ref: '#/components/schemas/qrCodeUrl'
        barcodeUrl:
          $ref: '#/components/schemas/barcodeUrl'
        pdfUrl:
          $ref: '#/components/schemas/pdfUrl'
        status:
          $ref: '#/components/schemas/processorStatus'
        expiryDate:
          description: Designates the year, month, and day in which the Convenience Store Payment document will no longer be recognized as a valid payment document to be utilized at the convenience store.
          type: string
          format: date
          example: '2020-09-20'
    encryptedPaymentHeader:
      description: header information for Encrypted Data from ApplePay, GooglePay or Paze.
      type: object
      properties:
        ephemeralPublicKey:
          description: Provides textual information about a cipher key for exchanging data via an associated string or byte image. This is a public key generated by the merchant and shared with Firm. In this context, this key is called ephemeral for its short life span.
          type: string
        publicKeyHash:
          description: This is the hash output using a hash function for the Ephemeral Public Key.
          type: string
          example: MUwkjyUBpyRiZTVMUrIzA6+SIrr9mV8nNct6YO0rGNg=
        walletTransactionId:
          description: Identifies a unique occurrence of a transaction.
          type: string
        walletApplicationData:
          description: Contain the data provided by merchant to the wallet provider.
          type: string
    encryptedPaymentBundle:
      description: Identifies encrypted bundle protocol version as defined by wallet.
      type: object
      writeOnly: true
      properties:
        encryptedPaymentHeader:
          $ref: '#/components/schemas/encryptedPaymentHeader'
        protocolVersion:
          description: Identifies encrypted bundle protocol version as defined by wallet.
          type: string
        signature:
          description: This is the virtual signature data of the payment and header data. The signature information let the receiver know that the data is indeed sent by the sender. The signature is created using sender's key pair.
          type: string
        encryptedPayload:
          $ref: '#/components/schemas/encryptedPayload'
    applepay:
      description: Use is for encrypted bundles for web or Internet acceptance of digital device wallets such as Apple Pay
      type: object
      properties:
        latLong:
          $ref: '#/components/schemas/latLong'
        encryptedPaymentBundle:
          $ref: '#/components/schemas/encryptedPaymentBundle'
    latLong:
      description: Identifies the latitude and longitude coordinates of the digital device when it is being provisioned. Information is expressed in the order of latitude then longitude with values rounded to the nearest whole digit.
      type: string
      minLength: 3
      maxLength: 21
      example: 1,1
    googlepay:
      description: Use is for encrypted bundles for web or Internet acceptance of digital device wallets such as Google Pay
      type: object
      properties:
        latLong:
          $ref: '#/components/schemas/latLong'
        encryptedPaymentBundle:
          $ref: '#/components/schemas/encryptedPaymentBundle'
    fullName:
      description: Name of accountholder
      type: string
      pattern: '[\p{L}\p{P}0-9''. ]*'
      minLength: 4
      maxLength: 70
      example: Jane Doe
      writeOnly: true
    accountHolderNationalId:
      description: An identifier for the consumer or business assigned by a government authority.
      type: string
      minLength: 1
      maxLength: 30
      writeOnly: true
    fundingStatus:
      description: Specifies the funding status of the transaction
      type: string
      readOnly: true
    captureMethod:
      description: To capture via separate API call, send captureMethod= ?Manual.? For immediate capture, send captureMethod= ?Now.? For automated delayed capture based on merchant profile setting (default is 120 minutes), send captureMethod= ?Delayed.?
      type: string
      enum:
        - NOW
        - DELAYED
        - MANUAL
    isVoid:
      description: Void a payment
      type: boolean
      example: false
    preferredLanguage:
      description: Language preference indicated by consumer for pages displayed. Using language tags indicated in RFC5646.
      type: string
      minLength: 2
      maxLength: 36
    requestAccountUpdater:
      description: Indicates whether Visa Real-Time Account Updater service should be utilized. Merchants must be enrolled in service and payments must be recurring or stored. If enrolled merchant does not pass field and transaction qualifies, default is "TRUE."
      type: boolean
      example: true
      writeOnly: true
    countryCodeText:
      description: Identifies country of card issuing bank, using ISO Alpha 3 standards.
      type: string
      readOnly: true
    paymentBrandCardTypeCode:
      description: Indicates how the issuer account is funded or used, e.g. Debit, Credit, Prepaid, Single Use..
      type: string
      readOnly: true
      enum:
        - CREDIT_CARD
        - DEBIT_CARD
        - PREPAID_CARD
        - CHARGE_CARD
        - DEFERRED_DEBIT
        - NON_MASTERCARD
    cardProductName:
      description: Card product name as defined by payment networks. e.g. Signature Premium Debit.
      type: string
    cardIssuerName:
      description: The label given to the issuer of a card-based payment account. The term "issuer" may refer to either the payment brand itself, as for the American Express and Discover payment brands, or the issuer will be a financial institution authorized to issue cards with the payment brand logo, as is the case for Visa and MasterCard.
      type: string
      readOnly: true
    isBillPayment:
      description: Indicates whether or not the transaction is identified as a bill payment, prearranged between the cardholder and the merchant.
      type: boolean
    downgradeReasonCode:
      description: Network-provided reason code indicating why the authorization did not qualify for Customer Payment Service (CPS).
      type: string
    recurring:
      description: Recurring Payment Object
      type: object
      properties:
        recurringSequence:
          $ref: '#/components/schemas/recurringSequence'
        agreementId:
          $ref: '#/components/schemas/agreementId'
        paymentAgreementExpiryDate:
          $ref: '#/components/schemas/paymentAgreementExpiryDate'
        isVariableAmount:
          description: Identifies the recurring amount as a variable amount rather than a fixed amount.
          type: boolean
    originalTransactionId:
      description: Identifies a unique occurrence of a transaction.
      type: string
    paymentMethodType:
      description: paymentType
      type: object
      properties:
        card:
          $ref: '#/components/schemas/card'
        boleto:
          $ref: '#/components/schemas/boleto'
        googlepay:
          $ref: '#/components/schemas/googlepay'
        applepay:
          $ref: '#/components/schemas/applepay'
        ach:
          $ref: '#/components/schemas/ach'
        sepa:
          $ref: '#/components/schemas/sepa'
        consumerProfile:
          $ref: '#/components/schemas/consumerProfile'
        paypal:
          $ref: '#/components/schemas/paypal'
        alipay:
          $ref: '#/components/schemas/alipay'
        wechatpay:
          $ref: '#/components/schemas/wechatpay'
        ideal:
          $ref: '#/components/schemas/ideal'
        sofort:
          $ref: '#/components/schemas/sofort'
        giropay:
          $ref: '#/components/schemas/giropay'
        trustly:
          $ref: '#/components/schemas/trustly'
        paze:
          $ref: '#/components/schemas/paze'
        tapToPay:
          $ref: '#/components/schemas/tapToPay'
    merchantOrderNumber:
      description: A unique merchant assigned identifier for the confirmation of goods and/or services purchased. The merchant order provides the merchant a reference to the prices, quantity and description of goods and/or services to be delivered for all transactions included in the sale.
      type: string
      pattern: '[A-Za-z0-9 .-]*'
      minLength: 1
      maxLength: 40
      example: X1234
    accountNumber:
      description: The card or token number.
      type: string
      maxLength: 19
      writeOnly: true
    retailAddenda:
      description: Industry-specific attributes.
      type: object
      properties:
        purchaseOrderNumber:
          $ref: '#/components/schemas/purchaseOrderNumber'
        orderDate:
          description: Designates the year, month, and day the request to purchase a service(s) or good(s) took place.
          type: string
        taxAmount:
          $ref: '#/components/schemas/taxAmount'
        isTaxable:
          $ref: '#/components/schemas/isTaxable'
        level3:
          $ref: '#/components/schemas/level3'
        gratuityAmount:
          $ref: '#/components/schemas/gratuityAmount'
        surchargeAmount:
          $ref: '#/components/schemas/surchargeAmount'
        healthcareData:
          $ref: '#/components/schemas/healthcareData'
    refundPaymentMethodType:
      description: Object with one of the payment method type applicable for refund processing
      type: object
      properties:
        card:
          $ref: '#/components/schemas/refundCard'
        transactionReference:
          $ref: '#/components/schemas/transactionReference'
        ach:
          $ref: '#/components/schemas/ach'
        sepa:
          $ref: '#/components/schemas/sepa'
        consumerProfile:
          $ref: '#/components/schemas/refundConsumerProfile'
        tapToPay:
          $ref: '#/components/schemas/tapToPay'
    verificationPaymentMethodType:
      description: Object with one of the payment method type applicable for verification processing
      type: object
      properties:
        card:
          $ref: '#/components/schemas/verificationCard'
        ach:
          $ref: '#/components/schemas/verificationACH'
        sepa:
          $ref: '#/components/schemas/verificationSEPA'
        consumerProfile:
          $ref: '#/components/schemas/verificationConsumerProfile'
    taxAmount:
      description: Monetary value of the tax amount assessed to the payment.
      type: integer
      format: int64
      minimum: 0
      maximum: 999999999999
      example: 1234
    tokenAuthenticationResult:
      description: Returned when more information about token authentication is received from the network
      type: object
      readOnly: true
      properties:
        code:
          $ref: '#/components/schemas/resultCode'
        message:
          $ref: '#/components/schemas/resultMessage'
    remainingRefundableAmount:
      description: This is the amount of the transaction that is currently available for refunds.  It takes into account the original transaction amount as well as any previous refunds that were applied to the transaction.
      type: integer
      format: int64
      minimum: 0
      maximum: 999999999999
      example: 1234
    accountHolder:
      description: Card owner properties
      type: object
      properties:
        referenceId:
          $ref: '#/components/schemas/accountHolderReferenceId'
        consumerIdCreationDate:
          description: Designates the century, year, month and day that a merchant's customer profile has been first defined.
          type: string
          format: date
          example: '2020-09-20'
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          $ref: '#/components/schemas/email'
        mobile:
          $ref: '#/components/schemas/phone'
        phone:
          $ref: '#/components/schemas/phone'
        IPAddress:
          $ref: '#/components/schemas/ipAddress'
        billingAddress:
          $ref: '#/components/schemas/address'
        nationalId:
          $ref: '#/components/schemas/accountHolderNationalId'
        firstName:
          $ref: '#/components/schemas/firstName'
        lastName:
          $ref: '#/components/schemas/lastName'
        middleName:
          $ref: '#/components/schemas/middleName'
        consumerProfileInfo:
          $ref: '#/components/schemas/consumerProfileInfo'
    paypal:
      description: Paypal payment method
      type: object
      properties:
        preferredLanguage:
          $ref: '#/components/schemas/preferredLanguage'
        creationTime:
          $ref: '#/components/schemas/timestampReturned'
        redirectedPayment:
          $ref: '#/components/schemas/redirectedPayment'
        returnTime:
          $ref: '#/components/schemas/timestampReturned'
        completionTime:
          $ref: '#/components/schemas/timestampReturned'
        fundingStatus:
          $ref: '#/components/schemas/fundingStatus'
    redirectedPayment:
      description: Redirected Payment attributes
      type: object
      properties:
        merchantReturnUrl:
          $ref: '#/components/schemas/merchantReturnUrl'
        redirectUrl:
          $ref: '#/components/schemas/redirectUrl'
        timestampReturned:
          $ref: '#/components/schemas/timestampReturned'
        secretKey:
          description: Provides textual information about a cipher key using random string returned by payment processor for session validity
          type: string
          readOnly: true
    fraudCheckRequest:
      description: Object for passing fraud check request parameters
      type: object
      required:
        - amount
        - currency
        - paymentMethodType
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        fraudScore:
          $ref: '#/components/schemas/fraudScore'
        accountHolder:
          $ref: '#/components/schemas/accountHolderInformation'
        paymentMethodType:
          $ref: '#/components/schemas/fraudCheckPaymentMethodType'
        shipTo:
          $ref: '#/components/schemas/fraudShipTo'
        merchant:
          $ref: '#/components/schemas/merchant'
    fraudCheckResponse:
      description: Responses for the fraud check
      type: object
      properties:
        transactionId:
          $ref: '#/components/schemas/transactionId'
        requestId:
          $ref: '#/components/schemas/requestId'
        riskDecision:
          $ref: '#/components/schemas/riskDecision'
        riskElement:
          $ref: '#/components/schemas/riskElement'
        hostReferenceId:
          description: Identifies unique identifier generated by the acquirer processing system and return to merchant for reference purposes.
          type: string
        responseStatus:
          $ref: '#/components/schemas/responseStatus'
        responseCode:
          $ref: '#/components/schemas/responseCode'
        responseMessage:
          $ref: '#/components/schemas/responseMessage'
        hostMessage:
          $ref: '#/components/schemas/hostMessage'
        merchant:
          $ref: '#/components/schemas/merchant'
    riskDecision:
      description: Object containing Risk Decision information.
      type: object
      properties:
        fraudRiskScore:
          description: industryType
          type: string
        fraudRuleAction:
          description: Codifies the next step of the fraud analysis based on the risk rule result as defined by the merchant.
          type: string
        digitalAlertRuleName:
          description: The moniker given to the alert rule used to identify potential fraud online. (e.g. 200Billpay, 300ACH, QPRT Quickpay V005)
          type: string
        fraudStatus:
          description: 'Codifies the status of card at time of suspected fraud. Note: Used in conjunction with the Fraud Method Code field. Contains the first character the 2-character alphanumeric Fraud Type entered in the Code1 field of the Work Suspect Fraud screen. Code used to further define an account status. Specifically, the fraud type codes defined by credit card associations. Commonly known as Fraud Type 1 Code.'
          type: string
        fraudStatusDescription:
          description: 'The label for the status of card at time of suspected fraud. Note: Used in conjunction with the Fraud Method Code field. Contains the first character the 2-character alphanumeric Fraud Type entered in the Code1 field of the Work Suspect Fraud screen. Code used to further define an account status. Specifically, the fraud type codes defined by credit card associations. Commonly known as Fraud Type 1 Code.'
          type: string
        fraudRiskResponse:
          description: Codifies the success or failure of a request to the fraud engine to assign a risk score to a payment transaction. This request is done prior to the authorization.
          type: string
    riskElement:
      description: Object containing Risk Element information
      type: object
      properties:
        fraudEvaluatorTransactionId:
          description: Identifies a unique occurrence of a transaction. In this context, this is the fraud evaluator provided transaction id.
          type: string
        highestRiskCountry:
          description: The portion of a party's address that is the encoded representation of a geographic area representing a country. Tn this context, this represents the country with the highest level of known e-commerce risk, as determined by the US State Department, that has been associated with a particular persona within the last 14 days.
          type: string
        highestRiskRegion:
          description: Codifies a geographic area represented by one or more Countries, States or Provinces. Country, State or Province identifies a geographic area that represents a Firm recognized geopolitical unit. In this context, this is the region which represents the highest level of known e-commerce risk, as determined by the US State Department, that has been associated with a particular persona within the last 14 days.
          type: string
        cardType:
          $ref: '#/components/schemas/cardType'
        fourteenDaysTransactionCount:
          description: Enumerates the occurrences of any transaction within a given period. In this context, this represent how many times the persona has been seen for the merchant in last 14 days.
          type: integer
          format: int32
        sixHoursTransactionCount:
          description: Enumerates the occurrences of any transaction within a given period. In this context, this represent how many times the persona has been seen for the merchant in last 6 hours.
          type: integer
          format: int32
        fourteenDaysCardRecordCount:
          description: Enumerates the quantity of records in a data object that is processed or transmitted. In this context, this is the number of cards associated with transaction that the fraud system has recorded.
          type: integer
          format: int32
        fourteenDaysDeviceRecordCount:
          description: Enumerates the quantity of records in a data object that is processed or transmitted. In this context, this is the record count of the email associated with the transaction that the fraud system has recorded.
          type: integer
          format: int32
        fourteenDaysEmailRecordCount:
          description: Enumerates the quantity of records in a data object that is processed or transmitted. In this context, this is the record count of the devices associated with the transaction that the fraud system has recorded.
          type: integer
          format: int32
        deviceLayers:
          description: Identifies a unique occurrence of an electronic device (and the software) used by the customer to communicate with the Firm or a third party to receive, store, process or send digital information.
          type: string
        sessionMatchIndicator:
          description: Indicates the Kaptcha session identifier generated by the fraud engine during checkout is validated and matches the session identifier received on the transaction.
          type: boolean
        hashedDigitalDeviceFingerprintIdentifier:
          description: Identifies a unique occurrence of an electronic device (and the software) used by the customer to communicate with the Firm or a third party to receive, store, process or send digital information. In this context, this identifier consists of the 5 device layers representing the operating system, browser, JavaScript settings, cookie setting and flash settings.
          type: string
        deviceTimestamp:
          description: Designates the current hour (hh), minute (mm), seconds (ss) and date on the electronic instrument used by a consumer for a payment authorization during the fraud analysis. This may differ from the actual current time if changed by the device owner.
          type: string
        deviceLocalTimeZone:
          description: Represents a unique code assigned by the firm for a geographical area that observes a uniform standard time for legal, commercial, and social purposes. In this context, this is the local time the device owner has set in the device settings.
          type: string
        deviceRegion:
          description: Codifies a geographic area represented by one or more Countries, States or Provinces. Country, State or Province identifies a geographic area that represents a Firm recognized geopolitical unit. In this context, this is the region associated to the Device Location.
          type: string
        deviceCountry:
          description: Codifies the country, a geographic area, that is recognized as an independent political unit in world affairs where the point of sale device was used for a transaction. Null value indicates country code is not provided.
          type: string
        deviceProxyServer:
          description: Indicates if a device uses a proxy server as an intermediary between an endpoint device, such as a computer or mobile device, and the server from which a user or client is making a purchase.
          type: boolean
        browserJavaScriptEnabled:
          description: Indicates if the device's application software, used to communicate between users of the Internet's World Wide Web, allows JavaScript.
          type: boolean
        browserAdobeFlashEnabled:
          description: Indicates if the device's application software, used to communicate between users of the Internet's World Wide Web, allows Adobe flash.
          type: boolean
        browserCookiesEnabled:
          description: Indicates if the device's application software, used to communicate between users of the Internet's World Wide Web, allows cookies.
          type: boolean
        deviceBrowserCountry:
          description: Uniquely represents a firm-recognized geopolitical area, including the ISO 3166 alpha 2-character country codes and other firm-created country codes. In this context, this is the country code associated with browser.
          type: string
        deviceBrowserLanguage:
          description: Codifies the method of communication, either spoken or written, consisting of the use of words in a structured and conventional way. The gold (master) set of values is defined by the International Standards Organization in ISO standard 639-3. In this context, this is the language the device owner has set in the device settings.
          type: string
        mobileDevice:
          description: Indicate if the device placing the order a mobile device.
          type: boolean
        digitalDeviceType:
          description: The label given to the type of electronic device that can receive, store, process or send digital information that can be used to communicate with a web page.
          type: string
        deviceWirelessCapability:
          description: Indicate if the device placing the order has capability to connect to internet wirelessly.
          type: boolean
        deviceVoiceControlled:
          description: Indicate if the device placing the order voice activated (related to mobile devices).
          type: boolean
        deviceRemotelyControlCapability:
          description: Indicate if the device placing the order is enabled to use PC Remote software.
          type: boolean
        deviceNetworkType:
          description: Codifies the categorization of the internet network using the Internet Protocol (IP) Address associated with the party (consumer). This category is assigned by the fraud engine based on the IP address/domain.
          type: string
    fraudScore:
      description: Object for Fraud Score Information
      type: object
      properties:
        cardholderBrowserInformation:
          description: The label for a web browser which is used to access and view websites for the merchant's products and services by consumer who is making a purchase.
          type: string
        isFraudRuleReturn:
          description: Indicates the fraud checking rules that flagged the payment transaction as potentially fraudulent are returned to the merchant.
          type: boolean
        fraudCheckShoppingCart:
          description: 'Provides textual information about the purchase of a product or service via an online retailer that is stored via a digital basket that enables consumers to select products, review what they selected and make modifications before finalizing the purchase.  Supplemental: In this context, User (merchant) defined information may be included such as fraud rule values. Examples of fraud rules value may be a maximum basket value, a maximum product quantity, etc.'
          type: string
        sessionId:
          description: Identifies an interaction between a customer and a representative with the Firm within a given application tool.
          type: string
        websiteRootDomainName:
          description: The label given to combination of the Web Address Top Level and the Web Address Second Level domain identifiers. This is commonly referred to as the website name.
          type: string
        fencibleItemAmount:
          description: The monetary value of items that are typically locked or stored behind the counter and aren't available for general selection on store shelves by customers.
          type: integer
          format: int64
        aNITelephoneNumber:
          description: 'A locator whose value identifies the formatted numeric address for routing voice or data communications via telephony, to reach a party. NOTE: Telephone number formats may vary; this field can include domestic and international telephone numbers.'
          type: string
          writeOnly: true
    fraudCheckPaymentMethodType:
      description: Object with information for Payment Method Type for  Fraud Check
      type: object
      properties:
        card:
          $ref: '#/components/schemas/fraudCard'
    refundCard:
      description: Card payment instrument for refund
      type: object
      required:
        - accountNumber
      properties:
        accountNumber:
          $ref: '#/components/schemas/accountNumber'
        expiry:
          $ref: '#/components/schemas/expiry'
        cardTypeName:
          $ref: '#/components/schemas/cardTypeName'
        cardType:
          $ref: '#/components/schemas/cardType'
        maskedAccountNumber:
          $ref: '#/components/schemas/maskedAccountNumber'
        cardTypeIndicators:
          $ref: '#/components/schemas/cardTypeIndicators'
        networkResponse:
          $ref: '#/components/schemas/networkResponse'
        walletProvider:
          description: Name of wallet provider.
          type: string
          enum:
            - APPLE_PAY
            - GOOGLE_PAY
            - PAZE
        originalNetworkTransactionId:
          $ref: '#/components/schemas/originalNetworkTransactionId'
        isBillPayment:
          $ref: '#/components/schemas/isBillPayment'
        authentication:
          $ref: '#/components/schemas/refundAuthentication'
        preferredPaymentNetworkNameList:
          $ref: '#/components/schemas/preferredPaymentNetworkNameList'
        merchantSalesChannelName:
          $ref: '#/components/schemas/merchantSalesChannelName'
        merchantPreferredRouting:
          $ref: '#/components/schemas/merchantPreferredRouting'
        paymentTokens:
          type: array
          readOnly: true
          description: List of payment tokens for the transaction
          minItems: 0
          items:
            $ref: '#/components/schemas/paymentToken'
        encryptedPayload:
          $ref: '#/components/schemas/encryptedPayload'
    refundAuthentication:
      description: The authentication object allows you to opt in to additional security features specific for refund
      type: object
      properties:
        electronicCommerceIndicator:
          $ref: '#/components/schemas/electronicCommerceIndicator'
        tokenAuthenticationResult:
          $ref: '#/components/schemas/tokenAuthenticationResult'
        tokenAuthenticationValue:
          description: Contains authentication value received from Payment Networks for network token transactions
          type: string
          maxLength: 40
          format: base64
          writeOnly: true
    accountHolderInformation:
      description: Information about the card Account Holder for which fraud checking is performed.
      type: object
      properties:
        deviceIPAddress:
          description: 'A unique string of numbers separated by periods that identifies each device using the Internet Protocol (IP) to communicate over a network.  An IP address is assigned to every single computer, printer, switch, router or any other device that is part of a TCP/IP-based network which allows users to send and receive data. The numerals in an IP address are divided into two parts:  1) The network part specifies which networks this address belongs to and 2) The host part further pinpoints the exact location. In this context, this is the IP address of the devices associated with the transaction.'
          type: string
        birthDate:
          description: Specifies the year month and day on which the individual was born.
          type: string
          format: date
          example: '2000-09-20'
          writeOnly: true
        driverLicenseNumber:
          description: A unique identifier assigned by a government agency that is not used by a Tax Authority to administer tax laws or by another government body to administer social and government programs. It may be used in conjunction with the party non tax government issued identifier type code. Examples include Driver's License number, green card id, and Passport number.
          type: string
          writeOnly: true
        addressCountryCode:
          description: 'A code that identifies the Country, a Geographic Area, that is recognized as an independent political unit in world affairs. Note: This data element is a child of the Country Code CDE and valid values are based on ISO standards. In this context, this is the country code of the consumer making the purchase.'
          type: string
          readOnly: true
        email:
          $ref: '#/components/schemas/email'
        fullName:
          $ref: '#/components/schemas/fullName'
        referenceId:
          $ref: '#/components/schemas/accountHolderReferenceId'
        consumerIdCreationDate:
          description: Designates the century, year, month and day that a merchant's customer profile has been first defined.
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        billingAddress:
          $ref: '#/components/schemas/address'
        firstName:
          $ref: '#/components/schemas/firstName'
        lastName:
          $ref: '#/components/schemas/lastName'
        middleName:
          $ref: '#/components/schemas/middleName'
    fraudCard:
      description: Card payment instrument for fraud checking
      type: object
      required:
        - accountNumber
      properties:
        accountNumberType:
          $ref: '#/components/schemas/accountNumberType'
        expiry:
          $ref: '#/components/schemas/expiry'
        cardTypeName:
          $ref: '#/components/schemas/cardTypeName'
        cardType:
          $ref: '#/components/schemas/cardType'
        accountNumber:
          $ref: '#/components/schemas/accountNumber'
        cvv:
          $ref: '#/components/schemas/cvv'
        maskedAccountNumber:
          $ref: '#/components/schemas/maskedAccountNumber'
        encryptionIntegrityCheck:
          $ref: '#/components/schemas/encryptionIntegrityCheck'
        cardTypeIndicators:
          $ref: '#/components/schemas/cardTypeIndicators'
        networkResponse:
          $ref: '#/components/schemas/networkResponse'
    verificationCard:
      description: Card payment instrument for card verification
      type: object
      properties:
        accountNumberType:
          $ref: '#/components/schemas/accountNumberType'
        cvv:
          $ref: '#/components/schemas/cvv'
        expiry:
          $ref: '#/components/schemas/expiry'
        cardTypeName:
          $ref: '#/components/schemas/cardTypeName'
        cardType:
          $ref: '#/components/schemas/cardType'
        accountNumber:
          $ref: '#/components/schemas/accountNumber'
        maskedAccountNumber:
          $ref: '#/components/schemas/maskedAccountNumber'
        cardTypeIndicators:
          $ref: '#/components/schemas/cardTypeIndicators'
        networkResponse:
          $ref: '#/components/schemas/networkResponse'
        walletProvider:
          description: Identifies the organization who manages the e-wallet for a consumer. The actual e-wallet management responsibilities may include hosting, accessing, communicating, and/or updating all or some of the customer data associated with the e-wallet.  An E-wallet is an application that is created on the mobile device to interact with the Point of Sale (POS) device as a catalyst for a transaction. This value may be sent to the Firm (as in Visa Tokenization) or created by the Firm.
          type: string
          enum:
            - APPLE_PAY
            - GOOGLE_PAY
        originalNetworkTransactionId:
          $ref: '#/components/schemas/originalNetworkTransactionId'
        isBillPayment:
          $ref: '#/components/schemas/isBillPayment'
        authentication:
          $ref: '#/components/schemas/authentication'
        encryptionIntegrityCheck:
          $ref: '#/components/schemas/encryptionIntegrityCheck'
        tokenServiceResponseCode:
          $ref: '#/components/schemas/tokenServiceResponseCode'
        paymentTokens:
          type: array
          readOnly: true
          description: List of payment tokens for the transaction
          minItems: 0
          items:
            $ref: '#/components/schemas/paymentToken'
        verificationAuthenticationRequest:
          $ref: '#/components/schemas/paymentAuthenticationRequest'
        merchantSalesChannelName:
          $ref: '#/components/schemas/merchantSalesChannelName'
    hostReferenceId:
      description: Identifies unique identifier generated by the acquirer processing system and return to merchant for reference purposes.
      type: string
    fraudShipTo:
      description: Ship To Information used for fraud checking services.
      type: object
      properties:
        shippingAddress:
          $ref: '#/components/schemas/address'
        shippingDescription:
          description: Description of shipping or delivery method
          type: string
          maxLength: 120
        fullName:
          $ref: '#/components/schemas/fullName'
        phone:
          $ref: '#/components/schemas/phone'
        firstName:
          $ref: '#/components/schemas/firstName'
        lastName:
          $ref: '#/components/schemas/lastName'
        middleName:
          $ref: '#/components/schemas/middleName'
    partialAuthorizationSupport:
      description: Indicates ability to support a partial approval amount on payments including prompting consumer for another method of payment for the balance.
      type: string
      enum:
        - SUPPORTED
        - NOT_SUPPORTED
    encryptionIntegrityCheck:
      description: The alphanumeric string generated by voltage to verify the soundness of the encrypted key used by merchant and payment process. The merchant passed this in the API call. The backend process validates the subscriber id and format matches - between the merchant request for a key and the UPG request
      type: string
      writeOnly: true
    isCapture:
      description: (Deprecated) For auth only, send isCapture=false. For sale or update an authorized payment to capture, send isCapture=true.
      type: boolean
    financialInstitutionRoutingNumber:
      description: Identifies the routing and transit number. In the United  States it's 8-9 numeric characters.
      type: string
      maxLength: 9
    mandateId:
      description: Identifies an agreement between the consumer, debtor bank (checking account of the consumer) and the merchant. This agreement (mandate) gives the merchant permission to debit funds from the consumer's checking account for some specific financial purpose (defined by the "Mandate Type"). Typically mandates are used for recurring or installment payments; that is, a fixed amount to be debited over a specific period of time (defined by the ?Mandate Date?). One-time debits are allowed. Mandates are specific to the Singe Euro Payments Area (SEPA) Direct Debit (DD) scheme. SEPA is a system of transactions created by the European Union (EU).
      type: string
      maxLength: 35
    mandateType:
      description: Codifies the category an agreement between the consumer, debtor bank (checking account of the consumer) and the merchant. This agreement (mandate) gives the merchant permission to debit funds from the consumers checking account for some specific financial purpose. Typically mandates are used for recurring or installment payments; that is, a fixed amount to be debited over a specific period of time (defined by the ?Mandate Date?). One-time debits are allowed. Mandates are specific to the Singe Euro Payments Area (SEPA) Direct Debit (DD) scheme. SEPA is a system of transactions created by the European Union (EU).
      type: string
      enum:
        - FIRST
        - RECURRENCE
        - LAST
        - ONE_OFF
        - NEW
        - CANCEL
        - CHANGE_TO_ELECTRONIC
    mandateSignatureDate:
      description: Designates the year, month and day when an agreement between the consumer, debtor bank (checking account of the consumer) and the merchant was signed. This agreement (mandate) gives the merchant permission to debit funds from the consumers checking account for some specific financial purpose. Typically mandates are used for recurring or installment payments; that is, a fixed amount to be debited over a specific period of time (defined by the ?Mandate Date?). One-time debits are allowed. Mandates are specific to the Singe Euro Payments Area (SEPA) Direct Debit (DD) scheme. SEPA is a system of transactions created by the European Union (EU).
      type: string
      format: date
      example: '2020-09-20'
    ach:
      description: Object for ACH (Automated Clearing House) payment method which occurs whenever someone instructs the ACH network to ?push? money from their account to someone else's. This is mostly used in USA.
      type: object
      required:
        - accountNumber
      properties:
        accountNumber:
          $ref: '#/components/schemas/accountNumber'
        financialInstitutionRoutingNumber:
          $ref: '#/components/schemas/financialInstitutionRoutingNumber'
        paymentType:
          $ref: '#/components/schemas/paymentType'
        accountType:
          $ref: '#/components/schemas/accountType'
        maskedAccountNumber:
          $ref: '#/components/schemas/maskedAccountNumber'
        unmaskedAccountNumber:
          $ref: '#/components/schemas/unmaskedAccountNumber'
        isTransactionMicroEntry:
          description: Indicates If a Micro-Entry  is used for account validation purposes. *Micro-Entries are defined as ACH credits of less than $1 and any offsetting ACH debits to verify a Receiver?s account.
          type: boolean
        ecpProgramName:
          description: Label of the program used for backend processing when handling electronic or paper checks at point of sale, online or in-person.
          type: string
          readOnly: true
        paymentTokens:
          type: array
          readOnly: true
          description: List of payment tokens for the transaction
          minItems: 0
          items:
            $ref: '#/components/schemas/paymentToken'
    sepa:
      description: Object for SEPA (Single Euro Payments Area) payment method is a regulatory initiative to facilitate cross border cashless payments across euro-using countries. SEPA allows people doing business across borders in euros to do so with the same ease as domestic transactions within the countries subject to SEPA.
      type: object
      required:
        - internationalBankAccountNumber
        - internationalBusinessIdentifierCode
      properties:
        internationalBankAccountNumber:
          $ref: '#/components/schemas/internationalBankAccountNumber'
        internationalBusinessIdentifierCode:
          $ref: '#/components/schemas/internationalBusinessIdentifierCode'
        mandateId:
          $ref: '#/components/schemas/mandateId'
        mandateType:
          $ref: '#/components/schemas/mandateType'
        mandateSignatureDate:
          $ref: '#/components/schemas/mandateSignatureDate'
        maskedAccountNumber:
          $ref: '#/components/schemas/maskedAccountNumber'
        unmaskedAccountNumber:
          $ref: '#/components/schemas/unmaskedAccountNumber'
        paymentTokens:
          type: array
          readOnly: true
          description: List of payment tokens for the transaction
          minItems: 0
          items:
            $ref: '#/components/schemas/paymentToken'
    verificationACH:
      description: Verification of ACH account
      type: object
      properties:
        accountNumber:
          $ref: '#/components/schemas/accountNumber'
        maskedAccountNumber:
          $ref: '#/components/schemas/maskedAccountNumber'
        financialInstitutionRoutingNumber:
          $ref: '#/components/schemas/financialInstitutionRoutingNumber'
        paymentType:
          $ref: '#/components/schemas/paymentType'
        accountType:
          $ref: '#/components/schemas/accountType'
        achVerificationType:
          description: Indicates the type of ACH verification being performed.
          type: string
          enum:
            - BASIC
            - ACCOUNT_STATUS
            - ACCOUNT_OWNER
            - PRE_NOTE_CREDIT
            - PRE_NOTE_DEBIT
        last4SSN:
          description: Identifies the last four digits of the government issued (SSN, EIN, TIN).
          type: string
          pattern: \d{4}
          example: '1234'
        consumerVerificationId:
          description: A unique identifier assigned by a government agency. Examples include Driver's License number, green card id, and Passport number.
          type: string
          maxLength: 28
        consumerVerificationIdType:
          description: Classifies the type of identifier.
          type: string
          enum:
            - US_DL
            - US_MILITARY
            - PASSPORT
            - RES_ALIEN_ID
            - STATE_ID
            - STUDENT_ID
            - FOREIGN_DL
            - CAN_DL
            - MEX_DL
            - OTH_PRIM_ID
            - MAT_CONSULAR_ID
        individualBirthDate:
          description: Specifies the year month and day on which the individual was born.
          type: string
          format: date
          example: '2000-09-20'
        consumerVerificationIdState:
          description: Classifies a geographic area that represents a first level, legal and political subdivision of a country; for example, Virginia, Bavaria.
          type: string
          minLength: 2
          maxLength: 3
          format: '[A-Za-z]*'
          example: FL
        ecpProgramName:
          description: Label of the program used for backend processing when handling electronic or paper checks at point of sale, online or in-person.
          type: string
          readOnly: true
        paymentTokens:
          type: array
          readOnly: true
          description: List of payment tokens for the transaction
          minItems: 0
          items:
            $ref: '#/components/schemas/paymentToken'
    paymentRequest:
      description: Payment request information for multi capture order
      type: object
      properties:
        paymentRequestId:
          $ref: '#/components/schemas/paymentRequestId'
        paymentRequestStatus:
          description: Indicates the status of payment request from the merchant. A payment request consists of authorization, capture and refund.
          type: string
          enum:
            - PENDING
            - OPEN
            - CLOSED
            - CANCELLED
        authorizations:
          type: array
          readOnly: true
          description: List of payment authorization information
          minItems: 0
          items:
            $ref: '#/components/schemas/paymentAuth'
        captures:
          type: array
          readOnly: true
          description: List of payment capture information
          minItems: 0
          items:
            $ref: '#/components/schemas/paymentCapture'
        refunds:
          type: array
          description: List of payment refund information
          minItems: 0
          items:
            $ref: '#/components/schemas/paymentRefund'
    paymentAuth:
      description: Authorization request information for multi capture order
      type: object
      properties:
        authorizationId:
          description: Identifies a unique occurrence of an authorization that is associated with a purchase of goods and/or services. More than one authorization can exist for a purchase, as an example in fuel and hotel services a merchant can send multiple authorization requests when the exact amount is unknown until completion of the sale.
          type: string
        amount:
          $ref: '#/components/schemas/amount'
        transactionStatusCode:
          description: Indicates the status of payment transaction. For example, a typical transaction is authorized, then captured for clearing and settlement; "CLOSED" is when the transaction is ready for clearing and "COMPLETED" is when the transaction is sent to the payment network for clearing.
          type: string
        authorizationType:
          description: Specifies the type of authorization requested.
          type: string
          enum:
            - INITIAL
            - REAUTH
            - INCREMENTAL
    paymentCapture:
      description: Payment capture information for multi capture order
      type: object
      properties:
        captureId:
          $ref: '#/components/schemas/captureId'
        amount:
          $ref: '#/components/schemas/amount'
        transactionStatusCode:
          description: Indicates the status of payment transaction. For example, a typical transaction is authorized, then captured for clearing and settlement; "CLOSED" is when the transaction is ready for clearing and "COMPLETED" is when the transaction is sent to the payment network for clearing.
          type: string
        captureRemainingRefundableAmount:
          description: Capture amount available to be refunded
          type: integer
          format: int64
        transactionStatusReason:
          description: Provides more context about the status of payment transaction (specifically, the review status of the payment capture information)
          type: string
          enum:
            - RISK_APPROVED
            - RISK_REVIEW
            - MANUAL_RISK_REVIEW
            - RISK_DENIED
            - RISK_ACKNOWLEDGED
            - MANUAL_RISK_ACKNOWLEDGED
            - VOIDED
    paymentRefund:
      description: Payment refund information for multi capture order
      type: object
      properties:
        refundId:
          description: Identifies a unique occurrence of a payment settlement request when the authorization is complete and the transaction is ready for settlement. The transaction can no longer be edited but can be voided.
          type: string
        amount:
          $ref: '#/components/schemas/amount'
        transactionStatusCode:
          description: Indicates the status of payment transaction. For example, a typical transaction is authorized, then captured for clearing and settlement; "CLOSED" is when the transaction is ready for clearing and "COMPLETED" is when the transaction is sent to the payment network for clearing.
          type: string
    paymentType:
      description: Identifies how accountholders  initiated debits to their accounts .
      type: string
      enum:
        - WEB
        - TEL
        - RECURRING
    accountType:
      description: Type of banking account.
      type: string
      enum:
        - CHECKING
        - SAVING
        - CORPORATE_CHECKING
    paymentRequestId:
      description: Identifies a unique occurrence of an payment processing request from merchant that is associated with a purchase of goods and/or services. A payment request consist of authorization, captures and refunds.
      type: string
    captureRequest:
      description: Request information for capture a payment
      type: object
      properties:
        captureMethod:
          $ref: '#/components/schemas/captureMethod'
        merchant:
          $ref: '#/components/schemas/merchant'
        recurring:
          $ref: '#/components/schemas/recurring'
        installment:
          $ref: '#/components/schemas/installment'
        paymentMethodType:
          $ref: '#/components/schemas/multiCapturePaymentMethodType'
        shipTo:
          $ref: '#/components/schemas/shipTo'
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
        accountOnFile:
          $ref: '#/components/schemas/accountOnFile'
        originalTransactionId:
          $ref: '#/components/schemas/originalTransactionId'
        isAmountFinal:
          $ref: '#/components/schemas/isAmountFinal'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        merchantOrderNumber:
          $ref: '#/components/schemas/merchantOrderNumber'
        risk:
          $ref: '#/components/schemas/risk'
        retailAddenda:
          $ref: '#/components/schemas/retailAddenda'
        accountHolder:
          $ref: '#/components/schemas/accountHolder'
        statementDescriptor:
          $ref: '#/components/schemas/statementDescriptor'
        partialAuthorizationSupport:
          $ref: '#/components/schemas/partialAuthorizationSupport'
        paymentRequestId:
          $ref: '#/components/schemas/paymentRequestId'
        multiCapture:
          $ref: '#/components/schemas/multiCapture'
        subMerchantSupplementalData:
          $ref: '#/components/schemas/subMerchantSupplementalData'
    internationalBankAccountNumber:
      description: Identifies the International Bank Account Number (IBAN) for the account.  IBAN is an internationally agreed system of identifying bank accounts across national borders to facilitate the communication and processing of cross border transactions with a reduced risk of transcription errors. Based on ISO 13616 standards, the IBAN consists of up to 34 alphanumeric characters, comprising a country code, two check digits and a long and detailed bank account-number. The check digits enable a sanity check of the bank account number to confirm its integrity before submitting a transaction.
      type: string
      maxLength: 34
      writeOnly: true
    internationalBusinessIdentifierCode:
      description: 'A valid Bank Identification Code (BIC) according to ISO 9362 standards, that can only contain 8 or 11 alphanumeric characters. Eg: For iDEAL issuer, one of valid BICs is RABONL2U.'
      type: string
      maxLength: 11
    verificationSEPA:
      description: Object for SEPA (Single Euro Payments Area) payment method is a regulatory initiative to facilitate cross border cashless payments across euro-using countries. SEPA allows people doing business across borders in euros to do so with the same ease as domestic transactions within the countries subject to SEPA.
      type: object
      properties:
        internationalBankAccountNumber:
          $ref: '#/components/schemas/internationalBankAccountNumber'
        internationalBusinessIdentifierCode:
          $ref: '#/components/schemas/internationalBusinessIdentifierCode'
        maskedAccountNumber:
          $ref: '#/components/schemas/maskedAccountNumber'
        sepaVerificationType:
          description: Codifies the classification of the payment transaction verification during payment processing which is part if digital safety precaution by sellers to reduce financial risk when handling check payments at point of sale, online or in-person. In this context, this is the verification type for the SEPA transaction.
          type: string
          readOnly: true
          enum:
            - BASIC
            - ACCOUNT_STATUS
            - ACCOUNT_OWNER
            - PRE_NOTE_CREDIT
            - PRE_NOTE_DEBIT
            - FORWARD_MANDATE
        paymentTokens:
          type: array
          readOnly: true
          description: List of payment tokens for the transaction
          minItems: 0
          items:
            $ref: '#/components/schemas/paymentToken'
    giropay:
      description: Giropay is German based payment method that allows customers to complete transactions online using their online banking environment, with funds debited from their bank account.
      type: object
      properties:
        preferredLanguage:
          $ref: '#/components/schemas/preferredLanguage'
        creationTime:
          $ref: '#/components/schemas/timestampReturned'
        redirectedPayment:
          $ref: '#/components/schemas/redirectedPayment'
        completionTime:
          $ref: '#/components/schemas/timestampReturned'
    ideal:
      description: Ideal is Netherland based payment method that allows customers to buy on the Internet using direct online transfers from their bank account.
      type: object
      properties:
        preferredLanguage:
          $ref: '#/components/schemas/preferredLanguage'
        redirectedPayment:
          $ref: '#/components/schemas/redirectedPayment'
        internationalBusinessIdentifierCode:
          $ref: '#/components/schemas/internationalBusinessIdentifierCode'
        creationTime:
          $ref: '#/components/schemas/timestampReturned'
        merchantOrderDescription:
          $ref: '#/components/schemas/merchantOrderDescription'
        completionTime:
          $ref: '#/components/schemas/timestampReturned'
        internationalBankAccountNumber:
          description: Identifies the International Bank Account Number (IBAN) for the account.  IBAN is an internationally agreed system of identifying bank accounts across national borders to facilitate the communication and processing of cross border transactions with a reduced risk of transcription errors. Based on ISO 13616 standards, the IBAN consists of up to 34 alphanumeric characters, comprising a country code, two check digits and a long and detailed bank account-number. The check digits enable a sanity check of the bank account number to confirm its integrity before submitting a transaction.
          type: string
          readOnly: true
        fullName:
          description: consumerReferenceId
          type: string
          readOnly: true
    merchantOrderDescription:
      description: Merchant provided textual information about the goods and/or services purchased. This text may include details about the prices, quantity and description of goods and/or services to be delivered for all transactions included in the sale.
      type: string
    sourceAccountInformation:
      description: Source Account Information
      type: object
      properties:
        fullName:
          $ref: '#/components/schemas/fullName'
        accountNumber:
          $ref: '#/components/schemas/accountNumber'
        internationalBusinessIdentifierCode:
          $ref: '#/components/schemas/internationalBusinessIdentifierCode'
        internationalBankAccountNumber:
          $ref: '#/components/schemas/internationalBankAccountNumber'
        bankName:
          description: The label given to a financial institution authorized by a government to accept deposits, make loans, pay interest, clear checks, and provide other financial services to its customers.
          type: string
    firstName:
      description: That part of an individual's full name considered a personal name or given name and generally positioned before the last name or family name.
      type: string
      pattern: '[\p{L}\p{P}0-9''. ]*'
      minLength: 1
      maxLength: 70
      writeOnly: true
    lastName:
      description: Last name or surname.
      type: string
      pattern: '[\p{L}\p{P}0-9''. ]*'
      minLength: 1
      maxLength: 70
      writeOnly: true
    middleName:
      description: Given name between first name and last name/surname.
      type: string
      pattern: '[\p{L}\p{P}0-9''. ]*'
      minLength: 1
      maxLength: 70
      writeOnly: true
    tokenServiceResponseMessage:
      description: Long explanation of response Message received from token service
      type: string
      readOnly: true
    tokenServiceResponseCode:
      description: Short explanation of response Code
      type: string
      readOnly: true
    tokenNumber:
      description: The token number is a secure surrogate value generated for an account number in a payment transaction. The token is substituted for the card number or primary account number (PAN), Demand Deposit Account (DDA) Number or other payment account and is used to process and identify transactions originating from that account.
      type: string
      readOnly: true
    transactionRoutingOverrideList:
      type: array
      description: List of transaction routing providers where the transaction be routed preferred by the merchant .
      minItems: 0
      items:
        type: string
        enum:
          - STONE
          - CIELO
          - GETNET
          - REDECARD
    transactionProcessor:
      description: Codifies specific system a client's program operates on within the Firm and through which cardholder transactions are submitted and processed
      type: string
    networkResponseCode:
      description: Network provided error or reason code
      type: string
      readOnly: true
    multiCapture:
      description: Split Shipment Information
      type: object
      properties:
        multiCaptureSequenceNumber:
          description: Identifies the number indicating the location of this record in the sorting sequence of the specified data.
          type: string
          maxLength: 2
        multiCaptureRecordCount:
          description: Enumerates the quantity of records in a data object that is processed or transmitted. In this context, this is the total number of expected shipments associated with a single authorization.
          type: integer
          format: int32
          minimum: 0
          maximum: 99
        isFinalCapture:
          description: Indicates if it is the final shipment associated with a single authorization.
          type: boolean
    tokenProvider:
      description: The label given to a provider who creates the digital token for cards.
      type: string
      readOnly: true
      enum:
        - NETWORK
        - SAFETECH
    level3:
      description: Level 3 data provides commercial shoppers with additional information about purchases on their card statements.
      type: object
      properties:
        totalShippingAmount:
          description: Specifies the monetary value to be paid for the postage and related transportation to get a package from the shipping carrier to the consumer for all items purchased.
          type: integer
          format: int64
        dutyAmount:
          description: The monetary value for an additional tax levied or tariff charged against the purchase of goods or services imported from another country.
          type: integer
          format: int64
        shipToAddressPostalCode:
          description: The postal code of the shipping address.
          type: string
        shipToAddressCountryCode:
          description: The country code of the shipping address based on Alpha 3 ISO standards.
          type: string
        shipFromAddressPostalCode:
          description: The postal code from which the goods were shipped.
          type: string
          example: USA
        totalTransactionDiscountAmount:
          description: Monetary value of total discount amount applied to the payment.
          type: integer
          format: int64
        valueAddedTaxAmount:
          description: Monetary value of the value added tax (VAT) included on the payment.
          type: integer
          format: int64
        valueAddedTaxPercent:
          description: The percentage of value added tax (VAT) added to the payment. Two decimals implied, e.g. 250 = 2.5%.
          type: string
        shippingValueAddedTaxPercent:
          description: The percentage of Value added tax (VAT) for shipping or freight added to the payment. Two decimals implied, e.g. 250 = 2.5%.
          type: string
        orderDiscountTreatmentCode:
          description: 'Indicates how the merchant is managing discounts for the order. Valid values: 0 ? No invoice level discount provided 1 ? Tax calculated on the post-discount invoice total 2 ? Tax calculated on the pre-discount invoice total'
          type: string
        valueAddedTaxInvoiceReferenceNumber:
          description: Identifies the additional sub-element used to identify the value-added tax (VAT) invoice or tax receipt.
          type: string
        shippingValueAddedTaxAmount:
          description: Monetary value of value added tax (VAT) amount on shipping or freight.
          type: integer
          format: int64
        partyTaxGovernmentIssuedIdentifier:
          description: Tax ID number assigned by a government agency for the alternate tax associated with this payment.
          type: string
        alternateTaxAmount:
          description: Total monetary value of alternate tax associated with this payment.
          type: integer
          format: int64
        lineItems:
          type: array
          description: List Of line Items
          minItems: 0
          items:
            $ref: '#/components/schemas/lineItem'
        transactionAdvices:
          type: array
          description: List of transaction advices from American Express
          minItems: 0
          items:
            $ref: '#/components/schemas/transactionAdvice'
        taxTreatmentCode:
          description: 'Identifies the type of processing that will be applied to the invoice, such as whether gross or net pricing is used, if tax will be calculated at the line item or invoice level, or if zero tax is applied.  Valid values:  0- Net prices with tax calculated at line item level  1 ? Net prices with tax calculated at invoice level  2 ? Gross prices given with tax information provided at line item level  3 ? Gross prices given with tax information provided at invoice level  4 ? No tax applies.'
          type: string
    lineItem:
      description: Line Item data within the Level 3
      type: object
      properties:
        lineItemDescriptionText:
          description: Description of the item purchased.
          type: string
        merchantProductIdentifier:
          description: Product code assigned by merchant of the item purchased.
          type: string
        itemComodityCode:
          description: Commodity code used to classify the item purchased.
          type: string
        lineItemUnitQuantity:
          description: Number of units purchased.
          type: string
        lineItemUnitofMeasureCode:
          description: 'Item Bulk/Unit of measure code. (example: LBR = pound, MIN = minute, Acre=ACR)'
          type: string
        unitPriceAmount:
          description: Specifies the monetary value of the per-item cost of a good or service.
          type: integer
          format: int64
        taxInclusiveLineItemTotalAmount:
          description: Specifies the monetary value (inclusive of tax) for the price of the product or service multiplied by the quantity of the items purchased recorded in the transaction addendum data.
          type: integer
          format: int64
        transactionDiscountAmount:
          description: Monetary value of total discount amount applied to order.
          type: integer
          format: int64
        purchaseTransactionDiscountPercent:
          description: Specifies the ratio of the reduction amount applied by the merchant (e.g., based on a percentage or fixed amount) to the purchase amount on a transaction. Discount percentages could be calculated at individual line item, or total transaction levels.
          type: string
        lineItemDiscountTreatmentCode:
          description: 'Indicates how the merchant is managing discounts on the item. Valid values: Y ? Amount is discounted N ? Amount is not discounted'
          type: string
        lineItemDetailCode:
          description: 'Indicates type of line item detail record. Valid values: 0 ? Normal line item detail record; 1 ? Normal last line item detail record; 2 ? Credit line item detail record; 3 ? Credit last line item detail record; 4 ? Payment line item detail record; 5 ? Payment last line item detail record; Note: If this field is not populated, 0 will be sent to Visa'
          type: string
        lineItemTaxIndicator:
          description: Indicates whether tax amount is included in item amount.
          type: boolean
        lineItemDiscountIndicator:
          description: Indicates whether the amount is discounted.
          type: boolean
        lineItemTaxes:
          type: array
          description: List Of line Items Tax Information
          minItems: 0
          items:
            $ref: '#/components/schemas/lineItemTax'
    lineItemTax:
      description: Tax information in the Line Item data within the Level 3.
      type: object
      properties:
        taxTypeCode:
          description: Identifies the form of tax applied to a transaction. Valid values are  01= Federal/National Sales Tax; 02 = State Sales Tax; 03 = City Sales Tax; 04 = Local Sales Tax; 05 = Municipal Sales Tax; 06 = Other Tax; 10 = Value Added Tax (VAT); 11 = Goods and Services (GST); 12 = Provincial Sales Tax (PST); 13 = Harmonized Sales Tax (HST); 14 = Quebec Sales Tax (QST); 22 = Energy Tax
          type: string
        lineItemTaxAmount:
          description: The amount added to the transaction for taxes.
          type: integer
          format: int64
        taxPercent:
          description: Specifies the ratio of the tax levied by a governmental authority on a product or service.
          type: string
    transactionAdvice:
      description: Transaction advice information for Amex transaction
      type: object
      properties:
        transactionAdviceText:
          description: Textual information containing Level 3 data for American Express Advice Addendum
          type: string
    captureId:
      description: Identifies a unique occurrence of a payment settlement request when the authorization is complete and the transaction is ready for settlement. The transaction can no longer be edited but can be voided.
      type: string
    multiCapturePaymentMethodType:
      description: Multi Capture Payment Method Type contains all the payment method code supported for multi capture payment processing capability
      type: object
      properties:
        card:
          $ref: '#/components/schemas/card'
    accountNumberType:
      description: Specifies the type of payment method used by the account number in payment transaction.
      type: string
      enum:
        - PAN
        - NETWORK_TOKEN
        - DEVICE_TOKEN
        - SAFETECH_TOKEN
        - SAFETECH_PAGE_ENCRYPTION
    unmaskedAccountNumber:
      description: Identifies a unique occurrence of a payment account.
      type: string
      readOnly: true
      maxLength: 19
    gratuityAmount:
      description: Specifies the monetary value paid by the consumer over and above the payment due for service.
      type: integer
      format: int64
      minimum: 0
      maximum: 999999999999
      example: 234
    softMerchant:
      description: Soft merchant information is passed to the card association along with the transaction. This soft merchant information may also be used for cases where smaller businesses or franchise outlets are making a sale in which a merchant aggregator or payment facilitator processes the payment transaction on their behalf.
      type: object
      properties:
        name:
          description: Name of merchant recognizable to account holder intended to be used in the event where the merchant of record is a payment facilitator.
          type: string
        phone:
          description: Soft Merchant phone number
          type: string
        email:
          description: Soft merchant email address
          type: string
        url:
          description: Soft merchant URL
          type: string
        address:
          $ref: '#/components/schemas/address'
        merchantPurchaseDescription:
          description: Description of goods or services sold according to merchant's internal systems.
          type: string
        visaMerchantVerificationValueId:
          description: Identifies the unique number assigned by payment brands to merchants that have registered  to participate in unique interchange programs. Some of the programs that a merchant can register for are the Utility program and the Purchasing Card Large ticket.  Participating in the program allows the merchants to receive a better than priced rate.
          type: string
        masterCardMerchantVerificationValueId:
          description: Identifies the unique number assigned by payment brands to merchants that have registered  to participate in unique interchange programs. Some of the programs that a merchant can register for are the Utility program and the Purchasing Card Large ticket.  Participating in the program allows the merchants to receive a better than priced rate.
          type: string
        merchantIncorporationStatus:
          description: Identifies the incorporation status of the merchant location (6=Tax exempt organizations (501C), 0=Invalid value, blank - Not incorporated (default)).
          type: string
        foreignMerchantIndicator:
          description: Used to identify a foreign retailer under the Visa Marketplace program
          type: boolean
        isMerchantVerificationValueAccepted:
          description: Identifies if the Merchant Verification Value is accepted by the payment brand.
          type: boolean
          readOnly: true
    preferredPaymentNetworkNameList:
      type: array
      description: Define the list of Payment Network Name preferred by merchant.  Payment Network Name is the label for primary transactions processing network through which card's (Debit or credit) account transactions are processed.
      minItems: 0
      items:
        $ref: '#/components/schemas/preferredPaymentNetworkName'
    merchantSalesChannelName:
      description: Label given to a merchant client of the Firm's medium for reaching its customers and facilitating and/or performing sales of its merchandise or services.
      type: string
      enum:
        - MAIL_ORDER_TELEPHONE_ORDER
        - INTERNET
        - INTERACTIVE_VOICE_RESPONSE
    merchantPreferredRouting:
      description: Indicates the routing model used to route the transaction as preferred by merchant.
      type: string
      enum:
        - PINLESS
        - CREDIT
    preferredPaymentNetworkName:
      description: The label for primary transactions processing network through which card's (Debit or credit) account transactions are processed.
      type: string
      enum:
        - STAR_PINLESS
        - PULSE_PINLESS
        - NYCE_PINLESS
        - ACCEL_PINLESS
        - EFTPOS_PINLESS
    consumerProfileId:
      description: "Identifies a unique occurrence of a consumer maintained in the firm as requested by merchant. Consumer profile contains information relevant to processing transactions such as name, address, account and payment methods information."
      type: string
    paymentMethodId:
      description: Identifies a unique occurrence of the type of payment accepted by a level of the hierarchy of the merchant acquiring account.
      type: string
    consumerProfile:
      description: Consumer Profile Payment method and attributes needed to process a transaction.
      type: object
      required:
        - consumerProfileId
      properties:
        consumerProfileId:
          $ref: '#/components/schemas/consumerProfileId'
        paymentMethodId:
          $ref: '#/components/schemas/paymentMethodId'
        originalNetworkTransactionId:
          $ref: '#/components/schemas/originalNetworkTransactionId'
        isBillPayment:
          $ref: '#/components/schemas/isBillPayment'
        authentication:
          $ref: '#/components/schemas/authentication'
        cvv:
          $ref: '#/components/schemas/cvv'
        merchantSalesChannelName:
          $ref: '#/components/schemas/merchantSalesChannelName'
        paymentAuthenticationRequest:
          $ref: '#/components/schemas/paymentAuthenticationRequest'
        preferredPaymentNetworkNameList:
          $ref: '#/components/schemas/preferredPaymentNetworkNameList'
        merchantPreferredRouting:
          $ref: '#/components/schemas/merchantPreferredRouting'
        cardTypeFunding:
          description: Codifies the funding source for a card payment transaction. This will support debit enablement to merchant during processing transaction. Sample values are CREDIT_CARD and DEBIT_CARD
          type: string
          enum:
            - DEBIT
            - CREDIT
        paymentType:
          $ref: '#/components/schemas/paymentType'
        accountType:
          $ref: '#/components/schemas/accountType'
        isTransactionMicroEntry:
          description: Indicates If a Micro-Entry  is used for account validation purposes. *Micro-Entries are defined as ACH credits of less than $1 and any offsetting ACH debits to verify a Receiver?s account.
          type: boolean
    verificationConsumerProfile:
      description: Consumer Profile Payment method and attributes needed to process a verification transaction.
      type: object
      required:
        - consumerProfileId
      properties:
        consumerProfileId:
          $ref: '#/components/schemas/consumerProfileId'
        paymentMethodId:
          $ref: '#/components/schemas/paymentMethodId'
        originalNetworkTransactionId:
          $ref: '#/components/schemas/originalNetworkTransactionId'
        isBillPayment:
          $ref: '#/components/schemas/isBillPayment'
        authentication:
          $ref: '#/components/schemas/authentication'
        cvv:
          $ref: '#/components/schemas/cvv'
        merchantSalesChannelName:
          $ref: '#/components/schemas/merchantSalesChannelName'
        verificationAuthenticationRequest:
          $ref: '#/components/schemas/paymentAuthenticationRequest'
        paymentType:
          $ref: '#/components/schemas/paymentType'
        accountType:
          $ref: '#/components/schemas/accountType'
        achVerificationType:
          description: Indicates the type of ACH verification being performed.
          type: string
          enum:
            - BASIC
            - ACCOUNT_STATUS
            - ACCOUNT_OWNER
            - PRE_NOTE_CREDIT
            - PRE_NOTE_DEBIT
        last4SSN:
          description: Identifies the last four digits of the government issued (SSN, EIN, TIN).
          type: string
          pattern: \d{4}
          example: '1234'
        consumerVerificationId:
          description: A unique identifier assigned by a government agency. Examples include Driver's License number, green card id, and Passport number.
          type: string
          maxLength: 28
        consumerVerificationIdType:
          description: Classifies the type of identifier.
          type: string
          enum:
            - US_DL
            - US_MILITARY
            - PASSPORT
            - RES_ALIEN_ID
            - STATE_ID
            - STUDENT_ID
            - FOREIGN_DL
            - CAN_DL
            - MEX_DL
            - OTH_PRIM_ID
            - MAT_CONSULAR_ID
        individualBirthDate:
          description: Specifies the year month and day on which the individual was born.
          type: string
          format: date
          example: '2000-09-20'
        consumerVerificationIdState:
          description: Classifies a geographic area that represents a first level, legal and political subdivision of a country; for example, Virginia, Bavaria.
          type: string
          minLength: 2
          maxLength: 3
          format: '[A-Za-z]*'
          example: FL
    refundConsumerProfile:
      description: Consumer Profile Payment method and attributes needed to process a refund transaction.
      type: object
      required:
        - consumerProfileId
      properties:
        consumerProfileId:
          $ref: '#/components/schemas/consumerProfileId'
        paymentMethodId:
          $ref: '#/components/schemas/paymentMethodId'
        originalNetworkTransactionId:
          $ref: '#/components/schemas/originalNetworkTransactionId'
        isBillPayment:
          $ref: '#/components/schemas/isBillPayment'
        authentication:
          $ref: '#/components/schemas/authentication'
        merchantSalesChannelName:
          $ref: '#/components/schemas/merchantSalesChannelName'
        paymentType:
          $ref: '#/components/schemas/paymentType'
        isTransactionMicroEntry:
          description: Indicates If a Micro-Entry  is used for account validation purposes. *Micro-Entries are defined as ACH credits of less than $1 and any offsetting ACH debits to verify a Receiver?s account.
          type: boolean
    paymentToken:
      description: Token Information for the payment transaction
      type: object
      properties:
        tokenProvider:
          $ref: '#/components/schemas/tokenProvider'
        tokenNumber:
          $ref: '#/components/schemas/tokenNumber'
        responseStatus:
          $ref: '#/components/schemas/responseStatus'
        tokenServiceResponseMessage:
          $ref: '#/components/schemas/tokenServiceResponseMessage'
        tokenServiceResponseCode:
          $ref: '#/components/schemas/tokenServiceResponseCode'
    cvv:
      description: Card verification value (CVV/CV2)
      type: string
      pattern: ^\d{3,6}$
      minLength: 3
      maxLength: 6
      writeOnly: true
    consumerProfileInfo:
      description: Consumer profile Information if saved
      type: object
      properties:
        consumerProfileRequestType:
          description: Codifies the nature of the ask for regarding consumer profile management
          type: string
          enum:
            - CREATE
          writeOnly: true
        legacyConsumerProfileId:
          description: "Identifies a unique occurrence of a consumer maintained in the firm as requested by merchant. Consumer profile contains information relevant to processing transactions such as name, address, account and payment methods information. Within this context, this is the Consumer Profile Identifier maintained in the firm's legacy system for the consumer."
          type: string
          writeOnly: true
          deprecated: true
        consumerProfileId:
          description: "Identifies a unique occurrence of a consumer maintained in the firm as requested by merchant. Consumer profile contains information relevant to processing transactions such as name, address, account and payment methods information."
          type: string
          readOnly: true
        paymentMethodId:
          description: Identifies a unique occurrence of the type of payment accepted by a level of the hierarchy of the merchant acquiring account.
          type: string
          readOnly: true
        consumerProfileResponseCode:
          description: Indicates whether profile creation was successful or resulted in an error.
          type: string
          readOnly: true
        consumerProfileResponseMessage:
          description: Confirms profile creation successful or describes reason for error.
          type: string
          readOnly: true
        externalConsumerProfileIdentifier:
          description: Identifies a unique occurrence of a consumer maintained by the merchant or a vendor. Consumer profile contains information relevant to processing transactions such as name, address, account and payment methods information.
          type: string
          writeOnly: true
    alipay:
      description: Alipay payment method is a single-use payment method where customers are required to authenticate their payment.
      type: object
      properties:
        preferredLanguage:
          $ref: '#/components/schemas/preferredLanguage'
        creationTime:
          $ref: '#/components/schemas/timestampReturned'
        redirectedPayment:
          $ref: '#/components/schemas/redirectedPayment'
        completionTime:
          $ref: '#/components/schemas/timestampReturned'
        merchantOrderDescription:
          $ref: '#/components/schemas/merchantOrderDescription'
        customUrl:
          description: A reference to a web resource on the internet specifying its location on a computer network and a mechanism for retrieving.
          type: string
          readOnly: true
        mobileDevice:
          description: Indicate if the device placing the order a mobile device.
          type: boolean
    wechatpay:
      description: Wechatpay payment method is linked to consumer bank accounts and/or payment network cards
      type: object
      properties:
        preferredLanguage:
          $ref: '#/components/schemas/preferredLanguage'
        creationTime:
          $ref: '#/components/schemas/timestampReturned'
        redirectedPayment:
          $ref: '#/components/schemas/redirectedPayment'
        completionTime:
          $ref: '#/components/schemas/timestampReturned'
        merchantOrderDescription:
          $ref: '#/components/schemas/merchantOrderDescription'
        qrCodeUrl:
          $ref: '#/components/schemas/qrCodeUrl'
        paymentArrangementExpirationTimestamp:
          description: Designates the hour (hh), minute (mm), seconds (ss) and date (if timestamp) or year (YYYY), month (MM), and day (DD) (if date) when the relationship expires. If there is no defined expiration date, the field will be blank.
          type: string
          readOnly: true
    sofort:
      description: Sofort payment method is a single use, delayed notification payment method that requires customers to authenticate their payment
      type: object
      properties:
        preferredLanguage:
          $ref: '#/components/schemas/preferredLanguage'
        creationTime:
          $ref: '#/components/schemas/timestampReturned'
        redirectedPayment:
          $ref: '#/components/schemas/redirectedPayment'
        completionTime:
          $ref: '#/components/schemas/timestampReturned'
        merchantOrderDescription:
          $ref: '#/components/schemas/merchantOrderDescription'
        internationalBankAccountNumber:
          description: Identifies the International Bank Account Number (IBAN) for the account.  IBAN is an internationally agreed system of identifying bank accounts across national borders to facilitate the communication and processing of cross border transactions with a reduced risk of transcription errors. Based on ISO 13616 standards, the IBAN consists of up to 34 alphanumeric characters, comprising a country code, two check digits and a long and detailed bank account-number. The check digits enable a sanity check of the bank account number to confirm its integrity before submitting a transaction.
          type: string
          readOnly: true
        internationalBusinessIdentifierCode:
          description: 'A valid Bank Identification Code (BIC) according to ISO 9362 standards, that can only contain 8 or 11 alphanumeric characters. Eg: For iDEAL issuer, one of valid BICs is RABONL2U.'
          type: string
          readOnly: true
        consumerAddressCountry:
          description: 'A code that identifies the Country, a Geographic Area, that is recognized as an independent political unit in world affairs. Note: This data element is a child of the Country Code CDE and valid values are based on ISO standards.'
          type: string
          readOnly: true
        bankName:
          description: The label given to a financial institution authorized by a government to accept deposits, make loans, pay interest, clear checks, and provide other financial services to its customers.
          type: string
          readOnly: true
        fullName:
          description: consumerReferenceId
          type: string
          readOnly: true
        maskedAccountNumber:
          $ref: '#/components/schemas/maskedAccountNumber'
        branchNumber:
          description: Uniquely identifies the brick and mortar retail branch location.
          type: string
          readOnly: true
    paymentMetadata:
      description: Additional metadata information merchant send during payment request
      type: object
      properties:
        metadataAttribute:
          description: Specifies the label of the attribute associated with a data element when used in a key-value pair.
          type: string
        metadataAttributeValue:
          description: Provides textual information about the Value assigned to a data element when used in a key-value pair.
          type: string
    directPay:
      description: Direct Pay
      type: object
      properties:
        fundsTransferType:
          description: Codifies the intended use of a payment using direct pay by the merchant. It determines the data carried in the message, the limits and economics that may apply to the transaction, and may be used by the sending and/or receiving issuer to make an authorization decision.
          type: string
          enum:
            - ACCOUNT_TO_ACCOUNT
            - FUNDS_DISBURSEMENT
            - FUNDS_TRANSFER
            - GOVERNMENT_DISBURSEMENT
            - GAMBLING_PAY
            - LOYALTY_PAY
            - MERCHANT_DISBURSEMENT
            - ONLINE_GAMBLING_PAY
            - PAYROLL_DISBURSEMENT
            - PERSON_TO_PERSON
            - PREPAID_CARD
            - WALLET_TRANSFER
        transactionReason:
          description: Codifies the purpose of the payment based on the standard values defined for respective market.
          type: string
          enum:
            - ACCOUNT_MANAGEMENT
            - PAYMENT_ALLOWANCE
            - SETTLEMENT_ANNUITY
            - UNEMPLOYMEMNT_DISABILITY_BENEFIT
            - BUSINESS_EXPENSE
            - BONUS_PAYMENT
            - BUS_TRANSPORT
            - CASH_MANAGEMENT_TRANSFER
            - GOVERNMENT_CASH_COMP
            - CREDIT_CARD_PAYMENT
            - CHARITY
            - COLLECTION
            - COMMISSION
            - COMPENSATION
            - COPYRIGHT
            - DEBIT_CARD
            - DEPOSIT
            - DIVIDENT
            - STUDY_TUITION
            - ELECTRICITY_BILL
            - ENERGIES
            - GENERAL_FEE
            - FERRY
            - FOREIGN_EXCHANGE
            - GAS_BILL
            - INSOLVENCY
            - GOVORNMENT_PAYMENT
            - HEALTH_INSURANCE
            - CC_REIMBURSEMENT
            - DEBIT_REIMBURSEMENT
            - CAR_INSURANCE
            - INSURANCE_CLAIM
            - INSTALLMENT
            - INSURANCE_PREMIUM
            - MUTUAL_FUND_INVESTMENT
            - INTRA_COMPANY
            - INTEREST
            - TAX_INCOME
            - INVESTMENT
            - LABOR_INSURANCE
            - LICENCE_FEE
            - LIFE_INSURANCE
            - LOAN
            - MEDICAL_SERVICE
            - MOBILE_P2B
            - MOBILE_P2P
            - MOBILE_TOPUP
            - NOT_OTHERWISE
            - OTHERS
            - OTHER_TEL_BILL
            - PAYROLL
            - PENSION_FUND
            - PENSION_PAYMENT
            - TEL_BILL
            - PROPERTY_INSURANCE
            - RENTAL_LEASE
            - RENT
            - RAIL_TRANSPORT
            - ROYALTY
            - SALARY
            - SAVING_RETIREMENT
            - SECURITIES
            - SOCIAL_SECURITY
            - STUDY
            - SUBSCRIPTION
            - SUPPLIER
            - REFUND_TAX
            - TAX
            - TELEPHONE_BILL
            - TRADE_SERVICE
            - TREASURY
            - TRAVEL
            - UTILITY_BILL
            - VAT
            - WITH_HOLD
            - WATER_BILL
        directPaymentType:
          description: Indicator that specifies whether you want to pull funds from a funding source or push funds to a receiving target.
          type: string
          enum:
            - PULL_FUNDS
            - PUSH_FUNDS
        serviceFeeAmount:
          description: Optional Service Fee charged by merchant for use of service.  Only applicable to AFT transactions.
          type: integer
          format: int32
        currencyConversionFeeAmount:
          description: Optional currency conversion fee charged by merchant.  Only applicable to AFT transactions.
          type: integer
        sender:
          $ref: '#/components/schemas/directPaySender'
    directPaySender:
      description: Direct Pay Sender
      type: object
      properties:
        transactionReferenceNumber:
          description: Identifies a transaction as assigned by a third-party such as the payment gateway, partner bank, facilitator, aggregator, etc.
          type: string
          maxLength: 16
        accountNumber:
          description: The number assigned to a monetary instrument (such as a Card, Direct Debit Account(DDA) or other payment account identifier provided for alternative method of payment or local payment solution) sent to the merchant acquirer to facilitate payment for the exchange of goods and services in a financial transaction. These payment account identifiers can be a secure placeholder such as a Device Primary Account Number(DPAN) or a token or the actual account identifier.
          type: string
          maxLength: 20
        taxId:
          description: An identifier assigned by a government agency that is used by a Tax Authority to administer tax laws or by another government body to administer social and government programs.
          type: string
        taxIdType:
          description: A code that classifies the type of Tax Government Identifier.
          type: string
          enum:
            - SSN
            - ITIN
            - EIN
        firstName:
          $ref: '#/components/schemas/firstName'
        middleName:
          $ref: '#/components/schemas/middleName'
        lastName:
          $ref: '#/components/schemas/lastName'
        address:
          $ref: '#/components/schemas/address'
        fundingSource:
          description: Codifies the source of the funds that is used in the transaction by the consumer.
          type: string
          enum:
            - CREDIT_CARD
            - DEBIT_CARD
            - PREPAID_CARD
            - CASH
            - DEBIT_DEPOSIT_ACCOUNT
            - CREDIT_ACCOUNT
            - MOBILE_MONEY
        birthDate:
          description: 'Specifies the year, month and day on which the individual was born. Format: mmddyyyy'
          type: string
          format: date
          example: '2000-09-20'
          writeOnly: true
    trustly:
      description: Trustly is an open banking payment method that allows customers to shop and pay from their online bank account, without the use of a card or app.
      type: object
      properties:
        accountHolderReferenceId:
          description: accountHolderReferenceId
          type: string
        preferredLanguage:
          $ref: '#/components/schemas/preferredLanguage'
        creationTime:
          $ref: '#/components/schemas/timestampReturned'
        redirectedPayment:
          $ref: '#/components/schemas/redirectedPayment'
        completionTime:
          $ref: '#/components/schemas/timestampReturned'
    authenticationId:
      description: Unique identifier for the card owner authentication provided by global authentication solution designed to make eCommerce transactions more secure and reduce fraud.
      type: string
    threeDSRequestorAuthenticationInfo:
      description: Information about how the 3DS Requestor authenticated the cardholder before or during the transaction.
      type: object
      required:
        - authenticationPurpose
      properties:
        threeDSAuthenticationTimestamp:
          description: Designates the hour, minute and second  of the cardholder authentication
          type: string
          format: date-time
        threeDSAuthenticationData:
          description: Data that documents and supports a specific authentication process.
          type: string
        threeDSChallengeType:
          description: Indicates whether a challenge is requested for this transaction.
          type: string
          enum:
            - NO_PREFERENCE
            - NO_CHALLENGE
            - CHALLENGE_REQUESTED
            - CHALLENGE_MANDATE
            - NO_CHALLENGE_TRA
            - NO_CHALLENGE_DATA
            - NO_CHALLENGE_DA
            - NO_CHALLENGE_TRUSTED
        requestorAuthenticationMethod:
          description: Information about how the 3DS Requestor authenticated the cardholder before or during the transaction.
          type: string
          enum:
            - NONE
            - REQUESTOR_CRED
            - FEDERATED_ID
            - ISSUER_CRED
            - FIDO
        authenticationPurpose:
          description: Indicates the type of Authentication request.threeDSRequestorPriorAuthenticationInfo
          type: string
          enum:
            - PAYMENT_TRANSACTION
            - RECURRING_TRANSACTION
            - INSTALLMENT_TRANSACTION
            - ADD_CARD
            - MAINTAIN_CARD
            - CARDHOLDER_VERIFICATION
            - BILLING_AGREEMENT
    threeDSRequestorPriorAuthenticationInfo:
      description: Contains information about how the 3DS Requestor authenticated the cardholder as part of a previous 3DS transaction.
      type: object
      properties:
        priorAcsTransactionId:
          description: ACS Transaction ID for a prior authenticated transaction
          type: string
        authenticationMethod:
          $ref: '#/components/schemas/authenticationMethod'
        authenticationTimestamp:
          description: Designates the hour, minute and second of the prior authentication.
          type: string
          format: date-time
    threeDSPurchaseRisk:
      description: Contains Risk related information provided by the  3DS Requestor.
      type: object
      properties:
        shipmentType:
          description: Indicates shipping method chosen for the transaction.
          type: string
          enum:
            - CARDHOLDER_ADDRESS
            - ADDRESS_ON_FILE
            - NOT_ON_FILE
            - SHIP_TO_STORE
            - DIGITAL_GOODS
            - TICKETS
            - OTHER
        deliveryTimeframe:
          description: Indicates the merchandise delivery timeframe
          type: string
          enum:
            - ELECTRONIC
            - SAME_DAY
            - OVERNIGHT
            - TWO_OR_MORE
        orderEmailAddress:
          description: For electronic delivery, the email address to which the merchandise was delivered
          type: string
        productRepurchaseIndicator:
          description: Indicates whether the cardholder is reordering previously purchased merchandise.
          type: boolean
        productAvailabilityCode:
          description: Indicates whether Cardholder is placing an order for merchandise with a future availability or release date.
          type: string
          enum:
            - AVAILABLE
            - FUTURE
        preOrderDate:
          description: For a pre-ordered purchase, the expected date that the merchandise will be available
          type: string
          format: date
        purchasedPrepaidCardTotalAmount:
          description: For prepaid or gift card purchase, the purchase amount total of prepaid or gift card(s)
          type: integer
          format: int64
        purchasedPrepaidCardCount:
          description: For prepaid or gift card purchase, total count of individual prepaid or gift cards/codes purchased.
          type: integer
          maximum: 99
        prepaidCardCurrency:
          $ref: '#/components/schemas/currency'
    browserInfo:
      description: Browser Information of the consumer
      type: object
      properties:
        browserAcceptHeader:
          description: Exact content of the HTTP accept headers as sent to the 3DS Requestor from the Cardholder's browser.
          type: string
          maxLength: 2048
        deviceIPAddress:
          description: 'A unique string of numbers separated by periods that identifies each device using the Internet Protocol (IP) to communicate over a network.  An IP address is assigned to every single computer, printer, switch, router or any other device that is part of a TCP/IP-based network which allows users to send and receive data. The numerals in an IP address are divided into two parts:  1) The network part specifies which networks this address belongs to and 2) The host part further pinpoints the exact location. In this context, this is the IP address of the devices associated with the transaction.'
          type: string
          maxLength: 45
        browserLanguage:
          description: Codifies the method of communication, either spoken or written, consisting of the use of words in a structured and conventional way. The gold (master) set of values is defined by the International Standards Organization in ISO standard 639-3. In this context, this is the language the device owner has set in the device settings.
          type: string
          minLength: 1
          maxLength: 8
        browserColorDepth:
          description: Codifies the bit depth of the color palette for displaying images, in bits per pixel. Obtained from Cardholder browser using the screen colorDepth property. The field is limited to 1-2 characters.
          type: string
        browserScreenHeight:
          description: Total height of the Cardholder's screen in pixels.
          type: string
          minLength: 1
          maxLength: 6
        browserScreenWidth:
          description: Total width of the Cardholder's screen in pixels.
          type: string
          minLength: 1
          maxLength: 6
        deviceLocalTimeZone:
          description: Represents a unique code assigned by the firm for a geographical area that observes a uniform standard time for legal, commercial, and social purposes. In this context, this is the local time the device owner has set in the device settings.
          type: string
          minLength: 1
          maxLength: 5
        browserUserAgent:
          description: Exact content of the HTTP user-agent header. The field is limited to maximum 2048 characters.
          type: string
          maxLength: 2048
        challengeWindowSize:
          $ref: '#/components/schemas/challengeWindowSize'
        javaEnabled:
          description: Boolean that represents the ability of the cardholder browser to execute Java.
          type: boolean
        javaScriptEnabled:
          description: Indicates if the device's application software, used to communicate between users of the Internet's World Wide Web, allows JavaScript.
          type: boolean
    threeDSMessageExtension:
      description: Contains Data necessary to support requirements not otherwise defined in the 3D Secure message are carried in a Message Extension. This field is limited to 81.920 characters and it is used in the Authentication Request.
      type: object
      properties:
        messageExtensionId:
          description: A unique identifier for the additional message necessary to support requirements not otherwise defined in the 3D Secure message.
          type: string
          maxLength: 64
        messageExtensionName:
          description: The label for additional message necessary to support requirements not otherwise defined in the 3D Secure message.
          type: string
          maxLength: 64
        messageExtensionCriticality:
          description: Indicate if the additional message is critical for the cardholder authentication process by the vendor. The additional message necessary to support requirements not otherwise defined in the 3D Secure message.
          type: boolean
        messageExtensionData:
          description: The additional textual data carried in the extension to support requirements not otherwise defined in the 3D Secure message.
          type: string
          maxLength: 8059
    threeDomainSecureExemption:
      description: Three Domain Secure Closure
      type: object
      properties:
        authenticationExemptionReason:
          description: EEA/UK Supported SCA exemptions
          type: string
          enum:
            - LOW_VALUE_PAYMENT
            - TRANSACTION_RISK_ANALYSIS
            - NOT_EXEMPTED
            - NOT_ENTITLED
            - MERCHANT_INITIATED_TRANSACTION
            - RECURRING_PAYMENT
            - ONE_LEG_OUT
        authenticationStatusReasonText:
          $ref: '#/components/schemas/authenticationStatusReasonText'
        updateTimestamp:
          $ref: '#/components/schemas/updateTimestamp'
    authenticationType:
      description: Indicates the type of cardholder Authentication request requested by the authentication requestor.
      type: string
      enum:
        - EXEMPTION
        - AUTHENTICATION
        - DEFAULT
    authenticationMethod:
      description: Information about how the 3DS Requestor previously  authenticated the cardholder.
      type: string
      enum:
        - FRICTIONLESS
        - CHALLENGED
        - AVS_VERIFIED
        - OTHER
    updateTimestamp:
      description: Designates the hour, minute, and second in a specific day when the record was last modified.
      type: string
    authenticationStatusReasonText:
      description: Long explanation of the Authentication Status
      type: string
    threeDSTransactionStatus:
      description: 'Indicates whether a transaction qualifies as an authenticated transaction. The accepted values are: Y -> Authentication / Account verification successful N -> Not authenticated / Account not verified; Transaction denied U -> Authentication / Account verification could not be performed; technical or other problem C -> In order to complete the authentication, a challenge is required R -> Authentication / Account verification Rejected. Issuer is rejecting authentication/verification and request that authorization not be attempted A -> Attempts processing performed; Not authenticated / verified, but a proof of attempt authentication / verification is provided The following values are also accepted if the 3DS Server has initiated authentication with EMV 3DS 2.2.0 version or greater: D -> In order to complete the authentication, a challenge is required. Decoupled Authentication confirmed. I -> Informational Only; 3DS Requestor challenge preference acknowledged'
      type: string
      enum:
        - 'Y'
        - 'N'
        - U
        - C
        - R
        - A
        - D
        - I
    paze:
      description: Use is for encrypted bundles for web or Internet acceptance of digital device wallets PAZE
      type: object
      properties:
        encryptedPaymentBundle:
          $ref: '#/components/schemas/encryptedPaymentBundle'
    surchargeAmount:
      description: Specifies the monetary value of an additional charge by a United States (US) merchant for the customer's usage of the credit card on a domestic US purchase. Surcharging is prohibited outside the US and in several US states and territories. The no-surcharge list currently includes California, Colorado, Connecticut, Florida, Kansas, Maine, Massachusetts, New York, Oklahoma, Texas and Puerto Rico.
      type: integer
      format: int64
      minimum: 0
      maximum: 999999999999
      example: 234
    paymentAuthenticationRequest:
      description: Request Authentication during payment process
      type: object
      writeOnly: true
      properties:
        threeDSAccountAdditionalInfo:
          $ref: '#/components/schemas/paymentThreeDSAccountAdditionalInfo'
        threeDSPurchaseInfo:
          $ref: '#/components/schemas/paymentThreeDSPurchaseInfo'
        threeDSRequestorPriorAuthenticationInfo:
          $ref: '#/components/schemas/threeDSRequestorPriorAuthenticationInfo'
        threeDSRequestorAuthenticationInfo:
          $ref: '#/components/schemas/threeDSRequestorAuthenticationInfo'
        threeDSMessageExtensions:
          type: array
          description: List of Three DS Message Extension information
          minItems: 0
          items:
            $ref: '#/components/schemas/threeDSMessageExtension'
        authenticationReturnUrl:
          description: Once authentication is complete this is the URL the results where the transaction results will be posted, and where the customer will be redirected. This field must be populated to initiate an authentication.
          type: string
        authenticationSupportUrl:
          $ref: '#/components/schemas/authenticationSupportUrl'
        accountType:
          description: Indicates the type of consumer account is requested for authentication.
          type: string
          enum:
            - NOT_APPLICABLE
            - CREDIT
            - DEBIT
            - JCB_PREPAID
        threeDSPurchaseRisk:
          $ref: '#/components/schemas/threeDSPurchaseRisk'
        authenticationType:
          $ref: '#/components/schemas/authenticationType'
    paymentAuthenticationResult:
      description: Cardholder Authentication Result from the Payment request.
      type: object
      properties:
        authenticationId:
          $ref: '#/components/schemas/authenticationId'
        authenticationReturnUrl:
          description: Once authentication is complete this is the URL the results where the transaction results will be posted, and where the customer will be redirected. This field must be populated to initiate an authentication.
          type: string
        authenticationOrchestrationUrl:
          description: This is the URL a merchant will need to launch to support 3ds authentication.
          type: string
        threeDomainSecureExemption:
          $ref: '#/components/schemas/threeDomainSecureExemption'
        threeDomainSecureChallenge:
          $ref: '#/components/schemas/paymentThreeDSChallenge'
        threeDomainSecureCompletion:
          $ref: '#/components/schemas/paymentThreeDSCompletion'
        threeDomainSecureServerErrorMessageText:
          description: Provides textual description of a problem that has occurred and is preventing the system from completing a task.
          type: string
    paymentThreeDSChallenge:
      description: ThreeDS Challenge response from payment call.
      type: object
      properties:
        updateTimestamp:
          $ref: '#/components/schemas/updateTimestamp'
        authenticationStatusReasonText:
          $ref: '#/components/schemas/authenticationStatusReasonText'
        threeDSAcsUrl:
          description: Fully qualified URL of the ACS in case the authentication response message indicates that further Cardholder interaction is required to complete the authentication
          type: string
          readOnly: true
    paymentThreeDSCompletion:
      description: ThreeDS Completion information from payment call.
      type: object
      properties:
        authenticationStatusReasonText:
          $ref: '#/components/schemas/authenticationStatusReasonText'
        threeDSTransactionStatus:
          $ref: '#/components/schemas/threeDSTransactionStatus'
        updateTimestamp:
          $ref: '#/components/schemas/updateTimestamp'
        threeDSVersion:
          description: Codifies the version of the Three Domain Secure (3-D Secure or 3DS) software that is used by the merchant. 3DS is a protocol designed to be an additional multi-factor security layer and is performed for online debit and credit card authorization requests. The acquirer domain initiates the transaction for 3DS authentication. The interoperability domain sends a message to the corresponding issuing bank based on the Bank Identification Number (BIN) range. The issuing bank domain authenticates the card user.
          type: string
        electronicCommerceIndicator:
          $ref: '#/components/schemas/electronicCommerceIndicator'
        threeDSAuthenticationValue:
          description: Payment System-specific value provided by the Access Control Server (ACS)  or the DS using an algorithm defined by Payment System. Authentication Value may be used to provide proof of authentication.
          type: string
        threeDSDirectoryServerTransactionId:
          description: Universally unique transaction identifier to identify a single transaction generated by the Three Domain Secure Server. This value has 36 characters in a format defined in IETF RFC 4122.
          type: string
        challengeAuthenticationMethod:
          $ref: '#/components/schemas/challengeAuthenticationMethod'
        challengeAuthenticationType:
          description: Indicates the category of authentication request the Issuer will use to challenge the Cardholder in a three domain secure authentication process.
          type: string
          enum:
            - STATIC
            - DYNAMIC
            - OOB
            - DECOUPLED
        acsTransactionId:
          description: This data element provides additional information to the ACS to determine the best approach for handling a request. The field is limited to 36 characters containing ACS Transaction ID for a prior authenticated transaction (for example, the first  recurring transaction that was authenticated with the cardholder).
          type: string
    paymentThreeDSPurchaseInfo:
      description: Three DS Purchase Information for the payment request
      type: object
      properties:
        purchaseDate:
          description: Designates the hour, minute and second  of the of the purchase which occurred on the Cardholder account
          type: string
          format: date-time
        recurringAuthorizationDayCount:
          description: Indicates the minimum number of days between authorizations. The field is limited to maximum 4 characters.
          type: integer
          maximum: 9999
        threeDomainSecureTransactionType:
          description: Identifies the type of transaction being authenticated. The values are derived from ISO 8583.
          type: string
          enum:
            - CHECK
            - GOODS_SERVICES
            - ACCOUNT_FUNDING
            - QUASI_CASH
            - PREPAID
        consumerInstallmentAuthorizationCount:
          $ref: '#/components/schemas/consumerInstallmentAuthorizationCount'
        recurringAuthorizationExpirationDate:
          $ref: '#/components/schemas/recurringAuthorizationExpirationDate'
        authenticationAmount:
          description: Specifies the monetary value of a mobile or online transaction associated with an authentication event.
          type: integer
          format: int64
    paymentThreeDSAccountAdditionalInfo:
      description: Additional account  Information used for authentication processing.
      type: object
      properties:
        consumerAccountCreateLength:
          description: Indicates how long the cardholder  has had the account with the merchant or authentication requestor in days.
          type: string
          enum:
            - NO_ACCOUNT
            - NEW_ACCOUNT
            - LESS_THAN_THIRTY
            - BETWEEN_THIRTY_AND_SIXTY
            - GREATER_THAN_SIXTY
        consumerAccountCreateTimestamp:
          description: The create date of the consumer account with merchant.
          type: string
        consumerAccountUpdateLength:
          description: Length of time since the cardholder?s account information with the 3DS Requestor was last changed. Includes Billing or Shipping address, new payment account, or new user(s) added.
          type: string
          enum:
            - CURRENT_TXN
            - LESS_THAN_THIRTY
            - BETWEEN_THIRTY_AND_SIXTY
            - GREATER_THAN_SIXTY
        consumerAccountUpdateTimestamp:
          description: Indicates  when consumer account with merchant was last modified.
          type: string
        consumerAccountPasswordUpdateTimestamp:
          description: Indicates  when consumer account password was last updated.
          type: string
          format: date
        consumerAccountPasswordChangeLength:
          $ref: '#/components/schemas/consumerAccountPasswordChangeLength'
        consumerAccountShippingAddressLength:
          description: Indicates when the shipping address used for this transaction was first used with the 3DS Requestor in days.
          type: string
          enum:
            - CURRENT_TXN_CHANGE
            - LESS_THAN_THIRTY
            - BETWEEN_THIRTY_AND_SIXTY
            - GREATER_THAN_SIXTY
        consumerAccountFirstShippingDate:
          description: Indicates when the shipping address used for this transaction was first used with the 3DS Requestor.
          type: string
          format: date
        twentyFourHoursTransactionCount:
          description: Number of transactions with the 3DS Requestor across all payment methods for this consumer account in the previous 24 hours.
          type: integer
          maximum: 32
        previousYearTransactionCount:
          description: Number of transactions with the 3DS Requestor across all payment methods for this consumer account in the previous year.
          type: integer
          maximum: 32
        consumerAccount24HoursAddCardCount:
          description: Number of Card addition attempts to  the consumer account during last 24 hours.
          type: integer
          maximum: 32
        sixMonthTransactionCount:
          description: Merchant reported number of purchases with this consumer account during the previous six months.
          type: integer
          maximum: 32
        consumerAccountSuspiciousActivityIndicator:
          description: Indicates whether the 3DS Requestor has experienced suspicious activity (including previous fraud) on the cardholder account.
          type: boolean
        consumerAccountShipNameIdenticalIndicator:
          description: Indicates if the Cardholder Name on the account is identical to the shipping Name used for this transaction.
          type: boolean
        consumerPaymentAccountLength:
          description: Indicates how long the payment method has been stored in the consumer account in days.
          type: string
          enum:
            - NO_ACCOUNT
            - CURRENT_TXN_CHANGE
            - LESS_THAN_THIRTY
            - BETWEEN_THIRTY_AND_SIXTY
            - GREATER_THAN_SIXTY
        consumerPaymentAccountEnrollmentDate:
          description: Indicates the date  the  payment method  was enrolled in the consumer account with the 3DS Requestor.
          type: string
        consumerAccountAddressIdenticalIndicator:
          description: Indicates if the Cardholder billing address and shipping address are identical for this transaction.
          type: boolean
    challengeAuthenticationMethod:
      description: Information about how the 3DS Requestor authenticated the cardholder for the challenge request.
      type: string
      enum:
        - STATIC_PASSCODE
        - SMS_OTP
        - KEY_FOB
        - APP_OTP
        - OTP_OTHER
        - KBA
        - OOB_BIOMETRICS
        - OOB_LOGIN
        - OOB_OTHER
        - OTHER
        - PUSH_CONFIRMATION
    billingVerification:
      description: Billing Verification results from payment network
      type: object
      properties:
        consumerNameVerificationResult:
          description: Codifies the result of validation performed on customer name received in the authorization request. Null value indicates that Customer name check was not performed
          type: string
          enum:
            - NAME_MATCH_ PERFORMED
            - NAME_MATCH_ NOT_PERFORMED
            - NAME_MATCH_ NOT_SUPPORTED
        consumerFullNameVerificationResult:
          description: Codifies the result of validation performed on customer name received in the authorization request. Null value indicates that Customer name check was not performed
          type: string
          enum:
            - MATCH
            - PARTIAL_MATCH
            - NO_MATCH
        consumerFirstNameVerificationResult:
          description: Codifies the result of validation performed on customer name received in the authorization request. Null value indicates that Customer name check was not performed
          type: string
          enum:
            - MATCH
            - PARTIAL_MATCH
            - NO_MATCH
        consumerLastNameVerificationResult:
          description: Codifies the result of validation performed on customer name received in the authorization request. Null value indicates that Customer name check was not performed
          type: string
          enum:
            - MATCH
            - PARTIAL_MATCH
            - NO_MATCH
        consumerMiddleNameVerificationResult:
          description: Codifies the result of validation performed on customer name received in the authorization request. Null value indicates that Customer name check was not performed
          type: string
          enum:
            - MATCH
            - PARTIAL_MATCH
            - NO_MATCH
    healthcareData:
      description: Contains Healthcare qualified transaction information. Amount fields are sub amounts that should be reflected in the total transaction amount.
      type: object
      properties:
        totalHealthcareAmount:
          description: Specifies the total monetary value of qualified healthcare purchases.
          type: integer
          format: int64
        totalVisionAmount:
          description: Specifies the total monetary value of qualified vision/optical purchase.
          type: integer
          format: int64
        totalClinicAmount:
          description: Specifies the total monetary value of qualified clinic and other purchases.
          type: integer
          format: int64
        totalDentalAmount:
          description: Specifies the total monetary value of qualified dental purchase.
          type: integer
          format: int64
        totalPrescriptionAmount:
          description: Specifies the total monetary value of qualified prescription purchases.
          type: integer
          format: int64
        isIIAS:
          description: Indicates the merchant has implemented an Inventory Information Approval System (IIAS) and used it to get the Total  Healthcare Amount for this transaction.
          type: boolean
    authenticationSupportUrl:
      description: Fully qualified URL of the 3DS Requestor website or customer care site. Provides additional information to the receiving 3D Secure system if a problem arises and should provide a contact information.
      type: string
    challengeWindowSize:
      description: Dimensions of the challenge window that has been displayed to the Cardholder. The ACS shall reply with content that is formatted to appropriately render in this window to provide the best possible user experience.
      type: string
      enum:
        - '250_400'
        - '390_400'
        - '500_600'
        - '600_400'
        - FULL_SCREEN
    acsTransactionId:
      description: This data element provides additional information to the ACS to determine the best approach for handling a request. The field is limited to 36 characters containing ACS Transaction ID for a prior authenticated transaction (for example, the first  recurring transaction that was authenticated with the cardholder).
      type: string
    customData:
      description: Customized data provided by merchant for reference purposes.
      type: object
      properties:
        externalTransactionReferenceNumber:
          description: Identifies a transaction as assigned by a third-party such as the payment gateway, partner bank, facilitator, aggregator, etc.
          type: string
        externalTransactionType:
          description: Codifies a grouping of payment transactions with similar processing characteristics such as retails transactions, mail order transactions, etc.
          type: string
        externalMerchantId:
          description: Identifies a merchant account maintained by an external party and is used as a reference identifier during transaction processing by the Firm.
          type: string
        merchantOrderReferenceId:
          description: Identifies a unique reference provided and used by the merchant to track orders within their own internal system or in a third party application (such as FeDex or UPS).
          type: string
        externalBatchId:
          description: A merchant specified batch identifier that a merchant has for a collection of payment/refund transactions.
          type: string
        merchantExpectedDepositDate:
          description: A merchant specified date of when transaction is expected to be deposited and available for withdrawal.
          type: string
    subMerchantSupplementalData:
      description: Additional data provided by merchant for reference purposes.
      type: object
      properties:
        customData:
          $ref: '#/components/schemas/customData'
        serviceAddress:
          $ref: '#/components/schemas/address'
        businessInformation:
          $ref: '#/components/schemas/businessInformation'
        partnerService:
          $ref: '#/components/schemas/partnerService'
        shippingInfo:
          $ref: '#/components/schemas/shippingInfo'
        recurringBilling:
          $ref: '#/components/schemas/recurringBilling'
        merchantReportedRevenue:
          $ref: '#/components/schemas/merchantReportedRevenue'
        orderInformation:
          $ref: '#/components/schemas/orderInformation'
        consumerDevice:
          $ref: '#/components/schemas/consumerDevice'
        merchantIdentification:
          $ref: '#/components/schemas/merchantIdentification'
    partnerService:
      description: Transaction Processing Partner Service Information
      type: object
      properties:
        externalVendorProductName:
          description: The name of the service or produt the merchant signed up for on the transaction processing partner site.
          type: string
        currency:
          $ref: '#/components/schemas/currency'
        externalMonthlyServiceFeeAmount:
          description: Specifies the monetary charge levied against the merchant by the partner service for a product or service based on their enrollment with the partner.
          type: integer
          format: int64
    businessInformation:
      description: Partner's Customer Business information
      type: object
      properties:
        organizationLegalName:
          description: Labels an entity as identified in its formation documents and, where applicable, as registered with a state, local, or federal government, or other chartering, or licensing authority.
          type: string
        clientBusinessDescriptionText:
          description: Provides textual information for a company, which may include information about its history, its products and services, and its influence on a particular industry.
          type: string
        organizationDBAName:
          description: The label given to an alias name for an Organization labeled as D.B.A. that is different from the legal name.
          type: string
    shippingInfo:
      description: Partner's Shipping Information
      type: object
      properties:
        shippingCarrierName:
          description: The label given to the external vendor who provides delivery service to the merchant to deliver products to consumers.
          type: string
        expectedMerchantProductDeliveryDate:
          description: Designates the year, month and day reported by merchant when items or services are expected to be delivered.
          type: string
    recurringBilling:
      description: Partner's Recurring Billing Information
      type: object
      properties:
        billingScheduleUpdateTimestamp:
          description: Designates the hour, minute, and second in a specific day when the record was last modified.
          type: string
        paymentFrequencyCode:
          description: Codifies the regularity of a set of reoccurring remittances to the firm or another third party (e.g.. Monthly, every 3 months, annually, etc.).
          type: string
        billingCycleSequenceNumber:
          description: Identifies the number indicating the location of this record in the sorting sequence of the specified data.
          type: string
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
        billingCyclesTotalCount:
          description: Identifies the total number of billing cycles that will be processed when an end date is provided. A billing cycle is a period of time determined by the billing frequency unit and billing frequency count as defined on the recurring plan. In this context, this is the total number of billing cycles expected for the recurring program.
          type: integer
    merchantReportedRevenue:
      description: Partner's customer revenue information
      type: object
      properties:
        amount:
          description: Specifies the monetary value of the total income reported by the customer for business deposit accounts within the specific period.
          type: integer
          format: int64
        startDate:
          description: Designates the first century, year, month and day for which data will be selected. This date establishes the beginning point date range parameter for selecting data.
          type: string
        endDate:
          description: Designates the last century, year, month and day for which data will be selected. This date establishes the ending point in a date range parameter for selecting data.
          type: string
        currency:
          $ref: '#/components/schemas/currency'
        amountType:
          description: Codifies the reported revenue amount of the business by the customer.
          type: string
          enum:
            - ALL
            - PARTIAL
    orderInformation:
      description: Partner's customer order information
      type: object
      properties:
        orderItems:
          type: array
          description: List of Order Items
          minItems: 0
          items:
            $ref: '#/components/schemas/orderItem'
        receiptUrl:
          description: A reference to a web resource on the internet specifying its location on a computer network and a mechanism for retrieving.
          type: string
        paymentNotes:
          description: Notes in the payment to specify the reason if the payment amount is not same as billing scheduled amount.
          type: string
        merchantUrl:
          description: A reference to a web resource on the internet specifying its location on a computer network and a mechanism for retrieving.
          type: string
        termsUrl:
          description: A reference to a web resource on the internet specifying its location on a computer network and a mechanism for retrieving.
          type: string
    orderItem:
      description: Partner's customer order line level information
      type: object
      properties:
        merchantProductIdentifier:
          description: A unique merchant assigned identifier for an item or service offered for sale by the Merch
          type: string
        lineItemDescriptionText:
          description: Provides detailed information regarding specific goods or services that have been procured and for which payment has been requested.
          type: string
        unitPriceAmount:
          description: Specifies the monetary value of the per-item cost of a good or service.
          type: integer
          format: int64
        lineItemUnitQuantity:
          description: Enumerates the volume (quantity) of each individual product type included in the transaction. The quantity, unit of measure and the line item price is used to calculate the aggregated purchase amount for each line item. In some cases, quantity can include a fraction or decimal places to allow for items such as hours of service provided, or a pound portion of goods.
          type: string
        itemComodityCode:
          description: Codifies the category the item being purchased belongs in a standardized commodity group as defined by the card acceptor.
          type: string
        chosenShippingOption:
          description: Provides textual information about the method of the delivery of an item(s) to the customer.
          type: string
        merchantCampaignName:
          description: The moniker given to the merchant initiative that is in place to pursue an opportunity for business expansion for potential new and existing clients.
          type: string
    consumerDevice:
      description: Consumer device information provided by merchant
      type: object
      properties:
        sessionId:
          description: 'The unique session identifier of the device that was created by the client. It can be up to 128 characters long and can contain only the following characters: uppercase and lowercase Roman letters, digits, underscore characters, and hyphens (a?z, A?Z, 0?9, _, -). The session ID should contain at least 16 bytes of randomly generated data.'
          type: string
    consumerInstallmentAuthorizationCount:
      description: Indicates the maximum number of authorizations permitted for instalment payments.
      type: integer
      maximum: 999
    recurringAuthorizationExpirationDate:
      description: Date after which no further authorizations shall be performed. This field is limited to 8 characters, and the accepted format is YYYYMMDD.
      type: string
    merchantIdentification:
      description: Sub-Merchant Identification Information
      type: object
      properties:
        subMerchantId:
          description: Identifies a merchant's account as it appears on the accountholder's statement.
          type: string
          maxLength: 10
        serviceEntitlementNumber:
          description: Identifies a unique number assigned to a merchant by a payment brand to process conveyed transactions.
          type: string
        sellerIdentifier:
          description: A unique number generated by the Firm to identify the individual Transaction Division processing, using the American Express (AMEX) OptBlue program under the Firm's Service Entitlement (SE) Number. In the AMEX OptBlue program, the merchant does not have an SE Number with AMEX. The Firm owns the merchant relationship and provides all the merchant servicing and support.
          type: string
    consumerAccountPasswordChangeLength:
      description: Indicates  the length of time since the consumer account password was last updated in days.
      type: string
      example: NO_CHANGE
      enum:
        - NO_CHANGE
        - CURRENT_TXN_CHANGE
        - LESS_THAN_THIRTY
        - BETWEEN_THIRTY_AND_SIXTY
        - GREATER_THAN_SIXTY
    mandate:
      description: Agreement information between the consumer, debtor bank (checking account of the consumer) and the merchant for debit funds.
      type: object
      properties:
        mandateId:
          $ref: '#/components/schemas/mandateId'
        mandateType:
          $ref: '#/components/schemas/mandateType'
        mandateSignatureDate:
          $ref: '#/components/schemas/mandateSignatureDate'
    cardArt:
      description: Card art information of a payment card.
      type: object
      properties:
        name:
          description: The name of card art that is used to build virtual replication of actual physical card art.
          type: string
        type:
          description: The category of card art that is used to build virtual replication of actual physical card art.
          type: string
        url:
          description: A reference to a web resource on the internet specifying its location on a computer network and a mechanism for retrieving for the card art that is used to build virtual replication of physical card.
          type: string
    walletCardData:
      description: additional card information received from digital wallet provider.
      type: object
      readOnly: true
      properties:
        cardArtList:
          type: array
          description: Card Art List
          minItems: 0
          items:
            $ref: '#/components/schemas/cardArt'
        cardMetaData:
          description: Card data, including its expiration date and suffix, for the card related to the merchant token.
          type: object
          additionalProperties:
            type: string
        walletMerchantTokenReferenceId:
          description: 'Identifies uniquely a token provisioning request assigned by token service/vault and provided to Issuer and Wallet Provider. This can be used as a reference to the token number that is assigned for an account when provisioning completes. Example: DNITHE461927644624368716'
          type: string
    device:
      description: Terminal Information used for card prersent transaction.
      type: object
      properties:
        terminalId:
          description: Identifies a unique occurrence of the terminal used for the transaction.
          type: string
          readOnly: true
        capabilities:
          type: array
          description: List of capability code that codifies the ability of the point of sale device to electronically read account numbers and expiration dates from payment medium.  The terminal should reflect the highest level of capability. For example, if the terminal is both chip and magnetic stripe read capable, it should be identified as a chip-capable terminal.
          minItems: 0
          items:
            type: string
            enum:
              - MAGSTRIPE_KEY
              - MAGSTRIPE_KEY_CHIP
              - MAGSTRIPE
              - MAGSTRIPE_CHIP
              - BARCODE
              - MOTO
              - EMV_CONTACT
              - KEYED
              - SWIPE
              - EMV_CONTACTLESS
        pinCapability:
          description: Codifies the capability of a merchant's terminal or an ATM to accept Personal Identification Numbers (PINs).
          type: string
          enum:
            - UNKNOWN
            - PIN_ELIGIBLE
            - NO_PIN
            - PIN_DOWN
        location:
          description: Indicates where the terminal was located.
          type: string
          enum:
            - OFF_PREMISE
            - ON_PREMISE
            - NO_TERMINAL_USED
        attendance:
          description: Codifies the presense of a worker at the merchant's location at the point of sale terminal for the transaction.
          type: string
          enum:
            - ATTENDED
            - UNATTENDED
            - NO_TERMINAL
        applicationInfo:
          $ref: '#/components/schemas/applicationInfo'
        peripheralDeviceType:
          $ref: '#/components/schemas/peripheralDeviceType'
        vendorId:
          description: Identifies a unique occurrence of a client vendor on a clients financial system. This is one of several pieces of data maintained on a clients financial system that may be used in the end to end payment process. A client vendor is an entity who provides goods or services to the client in return for payment.
          type: string
        terminalDeviceSerialNumber:
          description: A unique identifier issued to each point of sale terminal device by the manufacturer for identification and inventory purposes.
          type: string
        deviceId:
          description: A unique system generated number to identify an occurrence of a record in Terminal Device table.
          type: string
          maxLength: 4
    applicationInfo:
      description: Terminal Application Information
      type: object
      properties:
        classificationType:
          description: Codifies the compliance supported by point of sale terminal.
          type: string
          enum:
            - CLASS_A
            - CLASS_B
            - INTEGRATOR
            - MERCHANT_APPLICATION
            - MIDDLEWARE
            - GATEWAY
            - NON_COMPLIANT
        deviceType:
          description: Codifies the mechanism used to provide payment details at merchant's terminal for the transaction. Null value indicates that device type is not provided.
          type: string
          enum:
            - IPHONE
            - IPAD
            - ANDROID PHONE
            - ANDROID TABLET
            - OTHER
        mobileDeviceType:
          description: Codifies the category of mobile  device used by point of sale terminal.
          type: string
          enum:
            - MPOS_PIN
            - MPOS_NO_PIN
            - COTS_PIN
            - COTS_NO_PIN
    inPerson:
      description: Card present information
      type: object
      properties:
        storeandForward:
          $ref: '#/components/schemas/storeandForward'
        isCardholderPresent:
          description: Indicate the cardholder was in person at the point of sale.
          type: boolean
        cardholderAuthenticationMethod:
          description: Codifies how the merchant authenticated the cardholder before or during the point of sale card present transaction.
          type: string
          enum:
            - NOT_AUTHENTICATED
            - PIN
            - MANUAL_SIGNATURE
            - ELECTRONIC_SIGNATURE
            - OTHER
            - UNKNOWN
            - OTHER_SYSTEMIC
        entryMethod:
          description: Codifies the condition under which the card number and expiration date were captured during the transaction (e.g., 90 = Full track read, 03 = bar code read).
          type: string
          enum:
            - BARCODE
            - CREDENTIAL_ON_FILE
            - EMV_CONTACT
            - KEYED
            - SWIPE
            - EMV_CONTACTLESS
            - EMV_FALLBACK
        emvInformation:
          $ref: '#/components/schemas/emvInformation'
        pinProcessing:
          $ref: '#/components/schemas/pinProcessing'
        terminalBatchNumber:
          description: The number assigned to a batch
          type: string
        batchJulianDayNumber:
          description: Batch Julian day number returned on responses.
          type: integer
          readOnly: true
        batchTransactionClassificationCode:
          description: Codifies the generalized merchant classification for a transaction. 1=Captured, approved EFT transaction; 2=Captured, authorization only transaction; 3=Declined, error transaction; 4=Batch control transaction
          type: string
          readOnly: true
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
        transactionSequenceNumber:
          description: Identifies the number indicating the location of this record in the sorting sequence of the specified data. In this context, this is the sequence number of this transaction within the current batch.
          type: string
          readOnly: true
    pinProcessing:
      description: PIN processing information
      type: object
      properties:
        pinBlock:
          description: Textual block of data used to encapsulate a PIN during processing. The PIN block format defines the content of the PIN block and how it is processed to retrieve the PIN. The PIN block is composed of the PIN, the PIN length, and may contain subset of the account number.
          type: string
        pinpadSerialNumber:
          description: A unique identifier issued to each point of sale terminal device by the manufacturer for identification and inventory purposes.
          type: string
        keySequenceNumber:
          description: Identifies the number indicating the location of this record in the sorting sequence of the specified data.
          type: string
    restaurantAddenda:
      description: Restaurant Addenda
      type: object
      properties:
        taxAmount:
          $ref: '#/components/schemas/taxAmount'
        gratuityAmount:
          $ref: '#/components/schemas/gratuityAmount'
        surchargeAmount:
          $ref: '#/components/schemas/surchargeAmount'
        restaurantServerNumber:
          description: Uniuque Identifier of a restaurant server assigned by the merchant.
          type: string
    cashBackAmount:
      description: The monetary value of a cash withdrawal using a debit or credit card during checkout at a physical terminal in a merchant location. Cash back is equivalent to withdrawing cash from an Automated Teller Machine (ATM).
      type: integer
      format: int64
    pointOfInteraction:
      description: In store payment Information
      type: object
      properties:
        device:
          $ref: '#/components/schemas/device'
        inPerson:
          $ref: '#/components/schemas/inPerson'
    tapToPay:
      description: Tap To Pay payment information
      type: object
      properties:
        encryptedPayload:
          $ref: '#/components/schemas/encryptedPayload'
        transactionReferenceNumber:
          description: Identifies a transaction as assigned by a third-party such as the payment gateway, partner bank, facilitator, aggregator, etc.
          type: string
        readerId:
          description: Uniquely identifies the reader used for a Tap to Phone transaction.
          type: string
    emvInformation:
      description: Europay Mastercard Visa (EMV) chip transactions information
      type: object
      properties:
        emvData:
          description: The encrypted cardholder information stored on a metallic chip
          type: string
        applicationId:
          description: A unique identifier stored on the chip card used to identify the cryptographic application used by the terminal and the card to process the transaction. This application identifier (AID) is printed on all chip card (Euro MasterCard Visa (EMV)) cardholder receipts.
          type: string
        emvSequenceNumber:
          description: Contains a unique sequence counter for this transaction from this point of sale. This field comes from EMV Tag 9F41
          type: string
        panSequenceNumber:
          description: Identifies unique number for primary account number sent from the chip card.
          type: string
        hostReturnedData:
          description: EMV tags returned to the terminal from the host.
          type: string
    peripheralDeviceType:
      description: Peripheral Device Information
      type: object
      properties:
        internalContactlessCardReader:
          description: Indicate the card is enable with internal contactless card reader
          type: boolean
        externalContactlessCardReader:
          description: Indicate the card is enable with external contactless card reader
          type: boolean
        internalPinPad:
          description: Indicate the terminal device has Internal PIN pad, that allows the consumer to enter PIN during authentication.
          type: boolean
        externalPinPad:
          description: Indicate the terminal device support external PIN pad, that allows the consumer to enter PIN during authentication.
          type: boolean
        internalCardChipReader:
          description: Indicate if card is enabled with internal chip reader for capturing the card details
          type: boolean
        externalCardChipReader:
          description: Indicate if card is enabled with external chip reader for capturing the card details
          type: boolean
        cardMagneticStripe:
          description: Indicate the card is magnetic stripe enabled.
          type: boolean
    merchantDefined:
      description: merchant defined data field that it will pass through to reporting.
      type: object
      properties:
        merchantDefinedData:
          description: Merchant defined data field that pass through to reporting for some endpoints
          type: string
    storeandForward:
      description: Store and Forward transaction information.
      type: object
      properties:
        isStoreAndForward:
          description: Indicate the terminal captured data to be stored internally and forward to internal processor.
          type: boolean
    encryptedPayload:
      description: Encrypted message details have been rendered unreadable by general means through the application of a given set of instructions and a key.
      type: string
      example: IzxSm6YWehmlLvk5HY/rsl4hhWuorOG7R6ERP0fqzTokMhS5JtyAU8ajPIu/aHcbOxYQOhvk/K+3n6N7SbEKgSuT100YFmeIKh3IkSLa4u1/1Y4Z9y5bqZFPxd8IcQnuR8HZKgJDHCXQzDDYP4JBMtqZQzRztzsIfa4eoOnGuZCc2s+WxGap4iv92vPj8tAHonvSE9t0ByUCBLgfvu25GR0eJb6UM8nBvxP2/qBSElOuyLo80enrZ6tlp3xtpBEV8oeOc9iLSmalayfD7JQxZXd2cWA/sZPWn4VGIj7Dt05NYE/iFZrw2VOa2hOJ4/4dOGS1KJzhw+RPRufhadAF96k7O3LwbMphcM9sZLN/Y/LSqVFGzIq6ZlrnOwcxzvjNqw4ccNl4v3eehL4TRRgfF3LirV56BeADzJmq0pB3W/vu
    profileOrderOverrideCode:
      description: Codifies the option merchant has chosen to perform a non-systemic override on a payment order.
      type: string
      enum:
        - NO_MAPPING
        - CONSUMER_REFNUM_ORDERID
        - CONSUMER_REFNUM_COMMENTS
        - CONSUMER_REFNUM_ORDERID_COMMENTS
    extendedHostErrorCode:
      description: Codifies a raised exception encountered by an internal or external system, sub-system, interface, job, module, system component with which the web service application interfaces.In this instance it refers to the error returned from host system.
      type: string
    authorizationPurpose:
      description: This field should be populated when there is a specific authorization purpose such as delayed authorizations, reauthorizations, resubmissions and no shows.
      type: string
      enum:
        - DELAYED_CHARGE
        - NO_SHOW
        - REAUTHORIZATION
        - RESUBMISSION